

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Jul 04 23:58:28 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0008                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000D                     	;# 
    53  000E                     	;# 
    54  0010                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  0090                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0093                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  010C                     	;# 
    88  010D                     	;# 
    89  010E                     	;# 
    90  0110                     	;# 
    91  0111                     	;# 
    92  0112                     	;# 
    93  0113                     	;# 
    94  0114                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011A                     	;# 
   101  011B                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019C                     	;# 
   121  019C                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019F                     	;# 
   125  020D                     	;# 
   126  0210                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0291                     	;# 
   136  0291                     	;# 
   137  0292                     	;# 
   138  0293                     	;# 
   139  0294                     	;# 
   140  0295                     	;# 
   141  0295                     	;# 
   142  0296                     	;# 
   143  0298                     	;# 
   144  0298                     	;# 
   145  0299                     	;# 
   146  029A                     	;# 
   147  029B                     	;# 
   148  029C                     	;# 
   149  029C                     	;# 
   150  029D                     	;# 
   151  029E                     	;# 
   152  029F                     	;# 
   153  0311                     	;# 
   154  0311                     	;# 
   155  0312                     	;# 
   156  0313                     	;# 
   157  0314                     	;# 
   158  0315                     	;# 
   159  0315                     	;# 
   160  0316                     	;# 
   161  0318                     	;# 
   162  0318                     	;# 
   163  0319                     	;# 
   164  031A                     	;# 
   165  031C                     	;# 
   166  031C                     	;# 
   167  031D                     	;# 
   168  031E                     	;# 
   169  0394                     	;# 
   170  0395                     	;# 
   171  0396                     	;# 
   172  0415                     	;# 
   173  0416                     	;# 
   174  0417                     	;# 
   175  041C                     	;# 
   176  041D                     	;# 
   177  041E                     	;# 
   178  0791                     	;# 
   179  0792                     	;# 
   180  0793                     	;# 
   181  0794                     	;# 
   182  0795                     	;# 
   183  0798                     	;# 
   184  0799                     	;# 
   185  07A0                     	;# 
   186  07A1                     	;# 
   187  07A3                     	;# 
   188  07A4                     	;# 
   189  07A6                     	;# 
   190  07A7                     	;# 
   191  07A9                     	;# 
   192  07AA                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204                           
   205                           	psect	stringtext
   206  1000                     __pstringtext:	
   207  1000                     _dpowers:	
   208  1000  3401               	retlw	1
   209  1001  3400               	retlw	0
   210  1002  3400               	retlw	0
   211  1003  3400               	retlw	0
   212  1004  340A               	retlw	10
   213  1005  3400               	retlw	0
   214  1006  3400               	retlw	0
   215  1007  3400               	retlw	0
   216  1008  3464               	retlw	100
   217  1009  3400               	retlw	0
   218  100A  3400               	retlw	0
   219  100B  3400               	retlw	0
   220  100C  34E8               	retlw	232
   221  100D  3403               	retlw	3
   222  100E  3400               	retlw	0
   223  100F  3400               	retlw	0
   224  1010  3410               	retlw	16
   225  1011  3427               	retlw	39
   226  1012  3400               	retlw	0
   227  1013  3400               	retlw	0
   228  1014  34A0               	retlw	160
   229  1015  3486               	retlw	134
   230  1016  3401               	retlw	1
   231  1017  3400               	retlw	0
   232  1018  3440               	retlw	64
   233  1019  3442               	retlw	66
   234  101A  340F               	retlw	15
   235  101B  3400               	retlw	0
   236  101C  3480               	retlw	128
   237  101D  3496               	retlw	150
   238  101E  3498               	retlw	152
   239  101F  3400               	retlw	0
   240  1020  3400               	retlw	0
   241  1021  34E1               	retlw	225
   242  1022  34F5               	retlw	245
   243  1023  3405               	retlw	5
   244  1024  3400               	retlw	0
   245  1025  34CA               	retlw	202
   246  1026  349A               	retlw	154
   247  1027  343B               	retlw	59
   248  1028                     __end_of_dpowers:	
   249  1028                     __npowers_:	
   250  1028  3400               	retlw	0
   251  1029  3480               	retlw	128
   252  102A  343F               	retlw	63
   253  102B  34CD               	retlw	205
   254  102C  34CC               	retlw	204
   255  102D  343D               	retlw	61
   256  102E  34D7               	retlw	215
   257  102F  3423               	retlw	35
   258  1030  343C               	retlw	60
   259  1031  3412               	retlw	18
   260  1032  3483               	retlw	131
   261  1033  343A               	retlw	58
   262  1034  34B7               	retlw	183
   263  1035  34D1               	retlw	209
   264  1036  3438               	retlw	56
   265  1037  34C6               	retlw	198
   266  1038  3427               	retlw	39
   267  1039  3437               	retlw	55
   268  103A  3438               	retlw	56
   269  103B  3486               	retlw	134
   270  103C  3435               	retlw	53
   271  103D  34C0               	retlw	192
   272  103E  34D6               	retlw	214
   273  103F  3433               	retlw	51
   274  1040  34CC               	retlw	204
   275  1041  342B               	retlw	43
   276  1042  3432               	retlw	50
   277  1043  3470               	retlw	112
   278  1044  3489               	retlw	137
   279  1045  3430               	retlw	48
   280  1046  34E7               	retlw	231
   281  1047  34DB               	retlw	219
   282  1048  342E               	retlw	46
   283  1049  34E5               	retlw	229
   284  104A  343C               	retlw	60
   285  104B  341E               	retlw	30
   286  104C  3442               	retlw	66
   287  104D  34A2               	retlw	162
   288  104E  340D               	retlw	13
   289  104F                     __end_of__npowers_:	
   290  104F                     __powers_:	
   291  104F  3400               	retlw	0
   292  1050  3480               	retlw	128
   293  1051  343F               	retlw	63
   294  1052  3400               	retlw	0
   295  1053  3420               	retlw	32
   296  1054  3441               	retlw	65
   297  1055  3400               	retlw	0
   298  1056  34C8               	retlw	200
   299  1057  3442               	retlw	66
   300  1058  3400               	retlw	0
   301  1059  347A               	retlw	122
   302  105A  3444               	retlw	68
   303  105B  3440               	retlw	64
   304  105C  341C               	retlw	28
   305  105D  3446               	retlw	70
   306  105E  3450               	retlw	80
   307  105F  34C3               	retlw	195
   308  1060  3447               	retlw	71
   309  1061  3424               	retlw	36
   310  1062  3474               	retlw	116
   311  1063  3449               	retlw	73
   312  1064  3497               	retlw	151
   313  1065  3418               	retlw	24
   314  1066  344B               	retlw	75
   315  1067  34BC               	retlw	188
   316  1068  34BE               	retlw	190
   317  1069  344C               	retlw	76
   318  106A  346B               	retlw	107
   319  106B  346E               	retlw	110
   320  106C  344E               	retlw	78
   321  106D  3403               	retlw	3
   322  106E  3415               	retlw	21
   323  106F  3450               	retlw	80
   324  1070  3479               	retlw	121
   325  1071  34AD               	retlw	173
   326  1072  3460               	retlw	96
   327  1073  34F3               	retlw	243
   328  1074  3449               	retlw	73
   329  1075  3471               	retlw	113
   330  1076                     __end_of__powers_:	
   331  0016                     _TMR1	set	22
   332  000B                     _INTCONbits	set	11
   333  0011                     _PIR1bits	set	17
   334  000C                     _PORTA	set	12
   335  000D                     _PORTBbits	set	13
   336  0018                     _T1CONbits	set	24
   337  0099                     _OSCCONbits	set	153
   338  0091                     _PIE1bits	set	145
   339  008C                     _TRISA	set	140
   340  008D                     _TRISBbits	set	141
   341  008E                     _TRISC	set	142
   342  018C                     _ANSELA	set	396
   343  018D                     _ANSELB	set	397
   344  0291                     _CCPR1	set	657
   345  0293                     _CCP1CONbits	set	659
   346  1076                     STR_1:	
   347  1076  3454               	retlw	84	;'T'
   348  1077  3469               	retlw	105	;'i'
   349  1078  3465               	retlw	101	;'e'
   350  1079  346D               	retlw	109	;'m'
   351  107A  3470               	retlw	112	;'p'
   352  107B  346F               	retlw	111	;'o'
   353  107C  3420               	retlw	32	;' '
   354  107D  3425               	retlw	37	;'%'
   355  107E  3466               	retlw	102	;'f'
   356  107F  3400               	retlw	0
   357                           
   358                           ; #config settings
   359  0000                     
   360                           	psect	cinit
   361  003D                     start_initialization:	
   362  003D                     __initialization:	
   363                           
   364                           ; Clear objects allocated to BANK2
   365  003D  0022               	movlb	2	; select bank2
   366  003E  01B0               	clrf	__pbssBANK2& (0+127)
   367  003F  01B1               	clrf	(__pbssBANK2+1)& (0+127)
   368  0040  01B2               	clrf	(__pbssBANK2+2)& (0+127)
   369  0041                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  0041                     __end_of__initialization:	
   373  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   374  0042  0020               	movlb	0
   375  0043  3197  2F3D         	ljmp	_main	;jump to C main() function
   376                           
   377                           	psect	bssBANK2
   378  0130                     __pbssBANK2:	
   379  0130                     _tiempo:	
   380  0130                     	ds	3
   381                           
   382                           	psect	cstackBANK2
   383  0120                     __pcstackBANK2:	
   384  0120                     main@buffer1:	
   385                           
   386                           ; 16 bytes @ 0x0
   387  0120                     	ds	16
   388                           
   389                           	psect	cstackBANK1
   390  00A0                     __pcstackBANK1:	
   391  00A0                     ??_fround:	
   392  00A0                     ??_scale:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 1 bytes @ 0x0
   397  00A0                     	ds	2
   398  00A2                     _scale$796:	
   399                           
   400                           ; 3 bytes @ 0x2
   401  00A2                     	ds	2
   402  00A4                     _fround$795:	
   403                           
   404                           ; 3 bytes @ 0x4
   405  00A4                     	ds	1
   406  00A5                     scale@scl:	
   407                           
   408                           ; 1 bytes @ 0x5
   409  00A5                     	ds	1
   410  00A6                     ?___fttol:	
   411  00A6                     ___fttol@f1:	
   412                           ; 4 bytes @ 0x6
   413                           
   414                           
   415                           ; 3 bytes @ 0x6
   416  00A6                     	ds	1
   417  00A7                     _fround$794:	
   418                           
   419                           ; 3 bytes @ 0x7
   420  00A7                     	ds	3
   421  00AA                     ??___fttol:	
   422  00AA                     fround@prec:	
   423                           ; 1 bytes @ 0xA
   424                           
   425                           
   426                           ; 1 bytes @ 0xA
   427  00AA                     	ds	1
   428  00AB                     ?___ftadd:	
   429  00AB                     ___ftadd@f1:	
   430                           ; 3 bytes @ 0xB
   431                           
   432                           
   433                           ; 3 bytes @ 0xB
   434  00AB                     	ds	3
   435  00AE                     ___fttol@sign1:	
   436  00AE                     ___ftadd@f2:	
   437                           ; 1 bytes @ 0xE
   438                           
   439                           
   440                           ; 3 bytes @ 0xE
   441  00AE                     	ds	1
   442  00AF                     ___fttol@lval:	
   443                           
   444                           ; 4 bytes @ 0xF
   445  00AF                     	ds	2
   446  00B1                     ??___ftadd:	
   447                           
   448                           ; 1 bytes @ 0x11
   449  00B1                     	ds	2
   450  00B3                     ___fttol@exp1:	
   451                           
   452                           ; 1 bytes @ 0x13
   453  00B3                     	ds	2
   454  00B5                     ___ftadd@sign:	
   455                           
   456                           ; 1 bytes @ 0x15
   457  00B5                     	ds	1
   458  00B6                     ___ftadd@exp2:	
   459                           
   460                           ; 1 bytes @ 0x16
   461  00B6                     	ds	1
   462  00B7                     ___ftadd@exp1:	
   463                           
   464                           ; 1 bytes @ 0x17
   465  00B7                     	ds	1
   466  00B8                     ?___ftsub:	
   467  00B8                     ___ftsub@f2:	
   468                           ; 3 bytes @ 0x18
   469                           
   470                           
   471                           ; 3 bytes @ 0x18
   472  00B8                     	ds	3
   473  00BB                     ___ftsub@f1:	
   474                           
   475                           ; 3 bytes @ 0x1B
   476  00BB                     	ds	3
   477  00BE                     ?_sprintf:	
   478  00BE                     sprintf@f:	
   479                           ; 2 bytes @ 0x1E
   480                           
   481                           
   482                           ; 2 bytes @ 0x1E
   483  00BE                     	ds	5
   484  00C3                     ??_sprintf:	
   485                           
   486                           ; 1 bytes @ 0x23
   487  00C3                     	ds	6
   488  00C9                     _sprintf$797:	
   489                           
   490                           ; 3 bytes @ 0x29
   491  00C9                     	ds	3
   492  00CC                     sprintf@ap:	
   493                           
   494                           ; 1 bytes @ 0x2C
   495  00CC                     	ds	1
   496  00CD                     sprintf@flag:	
   497                           
   498                           ; 2 bytes @ 0x2D
   499  00CD                     	ds	2
   500  00CF                     sprintf@prec:	
   501                           
   502                           ; 2 bytes @ 0x2F
   503  00CF                     	ds	2
   504  00D1                     sprintf@val:	
   505                           
   506                           ; 4 bytes @ 0x31
   507  00D1                     	ds	4
   508  00D5                     sprintf@exp:	
   509                           
   510                           ; 2 bytes @ 0x35
   511  00D5                     	ds	2
   512  00D7                     sprintf@tmpval:	
   513                           
   514                           ; 4 bytes @ 0x37
   515  00D7                     	ds	4
   516  00DB                     sprintf@sp:	
   517                           
   518                           ; 1 bytes @ 0x3B
   519  00DB                     	ds	1
   520  00DC                     sprintf@fval:	
   521                           
   522                           ; 3 bytes @ 0x3C
   523  00DC                     	ds	3
   524  00DF                     sprintf@c:	
   525                           
   526                           ; 1 bytes @ 0x3F
   527  00DF                     	ds	1
   528  00E0                     ??_main:	
   529                           
   530                           ; 1 bytes @ 0x40
   531  00E0                     	ds	3
   532                           
   533                           	psect	cstackCOMMON
   534  0070                     __pcstackCOMMON:	
   535  0070                     ?_Lcd_Cmd:	
   536  0070                     ?_Lcd_Chr_CP:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_Lcd_Init:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_isr:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_main:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?i1___ftpack:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     i1___ftpack@arg:	
   552                           ; 3 bytes @ 0x0
   553                           
   554                           
   555                           ; 3 bytes @ 0x0
   556  0070                     	ds	3
   557  0073                     i1___ftpack@exp:	
   558                           
   559                           ; 1 bytes @ 0x3
   560  0073                     	ds	1
   561  0074                     i1___ftpack@sign:	
   562                           
   563                           ; 1 bytes @ 0x4
   564  0074                     	ds	1
   565  0075                     ??i1___ftpack:	
   566                           
   567                           ; 1 bytes @ 0x5
   568  0075                     	ds	3
   569  0078                     ?___awtoft:	
   570  0078                     ___awtoft@c:	
   571                           ; 3 bytes @ 0x8
   572                           
   573                           
   574                           ; 2 bytes @ 0x8
   575  0078                     	ds	3
   576  007B                     ??___awtoft:	
   577                           
   578                           ; 1 bytes @ 0xB
   579  007B                     	ds	2
   580  007D                     ___awtoft@sign:	
   581                           
   582                           ; 1 bytes @ 0xD
   583  007D                     	ds	1
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:	
   587  0020                     ?i1___ftmul:	
   588  0020                     i1___ftmul@f1:	
   589                           ; 3 bytes @ 0x0
   590                           
   591                           
   592                           ; 3 bytes @ 0x0
   593  0020                     	ds	3
   594  0023                     i1___ftmul@f2:	
   595                           
   596                           ; 3 bytes @ 0x3
   597  0023                     	ds	3
   598  0026                     ??i1___ftmul:	
   599                           
   600                           ; 1 bytes @ 0x6
   601  0026                     	ds	4
   602  002A                     i1___ftmul@exp:	
   603                           
   604                           ; 1 bytes @ 0xA
   605  002A                     	ds	1
   606  002B                     i1___ftmul@f3_as_product:	
   607                           
   608                           ; 3 bytes @ 0xB
   609  002B                     	ds	3
   610  002E                     i1___ftmul@cntr:	
   611                           
   612                           ; 1 bytes @ 0xE
   613  002E                     	ds	1
   614  002F                     i1___ftmul@sign:	
   615                           
   616                           ; 1 bytes @ 0xF
   617  002F                     	ds	1
   618  0030                     ??_isr:	
   619                           
   620                           ; 1 bytes @ 0x10
   621  0030                     	ds	1
   622  0031                     isr@ticks:	
   623                           
   624                           ; 2 bytes @ 0x11
   625  0031                     	ds	2
   626  0033                     ?___ftge:	
   627  0033                     ??_Lcd_Cmd:	
   628                           ; 1 bit 
   629                           
   630  0033                     ??_Lcd_Chr_CP:	
   631                           ; 1 bytes @ 0x13
   632                           
   633  0033                     ?___awmod:	
   634                           ; 1 bytes @ 0x13
   635                           
   636  0033                     ?___ftpack:	
   637                           ; 2 bytes @ 0x13
   638                           
   639  0033                     ?___ftneg:	
   640                           ; 3 bytes @ 0x13
   641                           
   642  0033                     ?__tdiv_to_l_:	
   643                           ; 3 bytes @ 0x13
   644                           
   645  0033                     ?__div_to_l_:	
   646                           ; 4 bytes @ 0x13
   647                           
   648  0033                     ?___lldiv:	
   649                           ; 4 bytes @ 0x13
   650                           
   651  0033                     ?___llmod:	
   652                           ; 4 bytes @ 0x13
   653                           
   654  0033                     ___awmod@divisor:	
   655                           ; 4 bytes @ 0x13
   656                           
   657  0033                     __div_to_l_@f1:	
   658                           ; 2 bytes @ 0x13
   659                           
   660  0033                     ___ftpack@arg:	
   661                           ; 3 bytes @ 0x13
   662                           
   663  0033                     __tdiv_to_l_@f1:	
   664                           ; 3 bytes @ 0x13
   665                           
   666  0033                     ___ftge@ff1:	
   667                           ; 3 bytes @ 0x13
   668                           
   669  0033                     ___ftneg@f1:	
   670                           ; 3 bytes @ 0x13
   671                           
   672  0033                     ___lldiv@divisor:	
   673                           ; 3 bytes @ 0x13
   674                           
   675  0033                     ___llmod@divisor:	
   676                           ; 4 bytes @ 0x13
   677                           
   678                           
   679                           ; 4 bytes @ 0x13
   680  0033                     	ds	2
   681  0035                     Lcd_Chr_CP@data:	
   682  0035                     Lcd_Cmd@data:	
   683                           ; 1 bytes @ 0x15
   684                           
   685  0035                     ___awmod@dividend:	
   686                           ; 1 bytes @ 0x15
   687                           
   688                           
   689                           ; 2 bytes @ 0x15
   690  0035                     	ds	1
   691  0036                     ??_Lcd_Init:	
   692  0036                     ?_Lcd_Out2:	
   693                           ; 1 bytes @ 0x16
   694                           
   695  0036                     ??___ftneg:	
   696                           ; 1 bytes @ 0x16
   697                           
   698  0036                     Lcd_Out2@x:	
   699                           ; 1 bytes @ 0x16
   700                           
   701  0036                     ___ftpack@exp:	
   702                           ; 1 bytes @ 0x16
   703                           
   704  0036                     __div_to_l_@f2:	
   705                           ; 1 bytes @ 0x16
   706                           
   707  0036                     __tdiv_to_l_@f2:	
   708                           ; 3 bytes @ 0x16
   709                           
   710  0036                     ___ftge@ff2:	
   711                           ; 3 bytes @ 0x16
   712                           
   713                           
   714                           ; 3 bytes @ 0x16
   715  0036                     	ds	1
   716  0037                     ??___awmod:	
   717  0037                     Lcd_Out2@buffer:	
   718                           ; 1 bytes @ 0x17
   719                           
   720  0037                     ___ftpack@sign:	
   721                           ; 1 bytes @ 0x17
   722                           
   723  0037                     ___lldiv@dividend:	
   724                           ; 1 bytes @ 0x17
   725                           
   726  0037                     ___llmod@dividend:	
   727                           ; 4 bytes @ 0x17
   728                           
   729                           
   730                           ; 4 bytes @ 0x17
   731  0037                     	ds	1
   732  0038                     ??___ftpack:	
   733  0038                     ??_Lcd_Out2:	
   734                           ; 1 bytes @ 0x18
   735                           
   736  0038                     Lcd_Init@data:	
   737                           ; 1 bytes @ 0x18
   738                           
   739  0038                     ___awmod@counter:	
   740                           ; 1 bytes @ 0x18
   741                           
   742                           
   743                           ; 1 bytes @ 0x18
   744  0038                     	ds	1
   745  0039                     ??__tdiv_to_l_:	
   746  0039                     ??__div_to_l_:	
   747                           ; 1 bytes @ 0x19
   748                           
   749  0039                     ??___ftge:	
   750                           ; 1 bytes @ 0x19
   751                           
   752  0039                     Lcd_Out2@y:	
   753                           ; 1 bytes @ 0x19
   754                           
   755  0039                     ___awmod@sign:	
   756                           ; 1 bytes @ 0x19
   757                           
   758                           
   759                           ; 1 bytes @ 0x19
   760  0039                     	ds	1
   761  003A                     ?___awdiv:	
   762  003A                     Lcd_Out2@data:	
   763                           ; 2 bytes @ 0x1A
   764                           
   765  003A                     ___awdiv@divisor:	
   766                           ; 1 bytes @ 0x1A
   767                           
   768                           
   769                           ; 2 bytes @ 0x1A
   770  003A                     	ds	1
   771  003B                     ??___lldiv:	
   772  003B                     ??___llmod:	
   773                           ; 1 bytes @ 0x1B
   774                           
   775  003B                     ?___lltoft:	
   776                           ; 1 bytes @ 0x1B
   777                           
   778  003B                     ___lltoft@c:	
   779                           ; 3 bytes @ 0x1B
   780                           
   781                           
   782                           ; 4 bytes @ 0x1B
   783  003B                     	ds	1
   784  003C                     ___llmod@counter:	
   785  003C                     ___awdiv@dividend:	
   786                           ; 1 bytes @ 0x1C
   787                           
   788  003C                     ___lldiv@quotient:	
   789                           ; 2 bytes @ 0x1C
   790                           
   791                           
   792                           ; 4 bytes @ 0x1C
   793  003C                     	ds	1
   794  003D                     __tdiv_to_l_@quot:	
   795                           
   796                           ; 4 bytes @ 0x1D
   797  003D                     	ds	1
   798  003E                     ??___awdiv:	
   799                           
   800                           ; 1 bytes @ 0x1E
   801  003E                     	ds	1
   802  003F                     ??___lltoft:	
   803  003F                     ___awdiv@counter:	
   804                           ; 1 bytes @ 0x1F
   805                           
   806                           
   807                           ; 1 bytes @ 0x1F
   808  003F                     	ds	1
   809  0040                     ___awdiv@sign:	
   810  0040                     ___lldiv@counter:	
   811                           ; 1 bytes @ 0x20
   812                           
   813  0040                     ___lltoft@exp:	
   814                           ; 1 bytes @ 0x20
   815                           
   816                           
   817                           ; 1 bytes @ 0x20
   818  0040                     	ds	1
   819  0041                     __tdiv_to_l_@cntr:	
   820  0041                     ___awdiv@quotient:	
   821                           ; 1 bytes @ 0x21
   822                           
   823  0041                     __div_to_l_@quot:	
   824                           ; 2 bytes @ 0x21
   825                           
   826                           
   827                           ; 4 bytes @ 0x21
   828  0041                     	ds	1
   829  0042                     __tdiv_to_l_@exp1:	
   830                           
   831                           ; 1 bytes @ 0x22
   832  0042                     	ds	1
   833  0043                     ?___wmul:	
   834  0043                     ___wmul@multiplier:	
   835                           ; 2 bytes @ 0x23
   836                           
   837                           
   838                           ; 2 bytes @ 0x23
   839  0043                     	ds	2
   840  0045                     __div_to_l_@cntr:	
   841  0045                     ___wmul@multiplicand:	
   842                           ; 1 bytes @ 0x25
   843                           
   844                           
   845                           ; 2 bytes @ 0x25
   846  0045                     	ds	1
   847  0046                     __div_to_l_@exp1:	
   848                           
   849                           ; 1 bytes @ 0x26
   850  0046                     	ds	1
   851  0047                     ??___wmul:	
   852  0047                     ___wmul@product:	
   853                           ; 1 bytes @ 0x27
   854                           
   855                           
   856                           ; 2 bytes @ 0x27
   857  0047                     	ds	2
   858  0049                     ?___ftmul:	
   859  0049                     ___ftmul@f1:	
   860                           ; 3 bytes @ 0x29
   861                           
   862                           
   863                           ; 3 bytes @ 0x29
   864  0049                     	ds	3
   865  004C                     ___ftmul@f2:	
   866                           
   867                           ; 3 bytes @ 0x2C
   868  004C                     	ds	3
   869  004F                     ??___ftmul:	
   870                           
   871                           ; 1 bytes @ 0x2F
   872  004F                     	ds	4
   873  0053                     ___ftmul@exp:	
   874                           
   875                           ; 1 bytes @ 0x33
   876  0053                     	ds	1
   877  0054                     ___ftmul@f3_as_product:	
   878                           
   879                           ; 3 bytes @ 0x34
   880  0054                     	ds	3
   881  0057                     ___ftmul@cntr:	
   882                           
   883                           ; 1 bytes @ 0x37
   884  0057                     	ds	1
   885  0058                     ___ftmul@sign:	
   886                           
   887                           ; 1 bytes @ 0x38
   888  0058                     	ds	1
   889  0059                     ?_fround:	
   890  0059                     ?_scale:	
   891                           ; 3 bytes @ 0x39
   892                           
   893                           
   894                           ; 3 bytes @ 0x39
   895  0059                     	ds	3
   896  005C                     ??___ftsub:	
   897                           
   898                           	psect	maintext
   899  173D                     __pmaintext:	
   900                           ; 1 bytes @ 0x3C
   901 ;;
   902 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   903 ;;
   904 ;; *************** function _main *****************
   905 ;; Defined at:
   906 ;;		line 22 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  buffer1        16    0[BANK2 ] unsigned char [16]
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : B1F/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   921 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
   922 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
   923 ;;      Totals:         0       0       3      16       0       0       0       0       0       0       0       0       
      +0       0
   924 ;;Total ram usage:       19 bytes
   925 ;; Hardware stack levels required when called:    7
   926 ;; This function calls:
   927 ;;		_Lcd_Cmd
   928 ;;		_Lcd_Init
   929 ;;		_Lcd_Out2
   930 ;;		_sprintf
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _main
   938  173D                     _main:	
   939                           
   940                           ;main.c: 25: unsigned char buffer1[16];
   941                           ;main.c: 27: OSCCONbits.IRCF=0b1110;
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   945  173D  0021               	movlb	1	; select bank1
   946  173E  0819               	movf	25,w	;volatile
   947  173F  3987               	andlw	-121
   948  1740  3870               	iorlw	112
   949  1741  0099               	movwf	25	;volatile
   950                           
   951                           ;main.c: 28: OSCCONbits.SCS=0b00;
   952  1742  30FC               	movlw	-4
   953  1743  0599               	andwf	25,f	;volatile
   954                           
   955                           ;main.c: 30: TRISA=0;
   956  1744  018C               	clrf	12	;volatile
   957                           
   958                           ;main.c: 31: TRISC=255;
   959  1745  30FF               	movlw	255
   960  1746  008E               	movwf	14	;volatile
   961                           
   962                           ;main.c: 32: PORTA=0;
   963  1747  0020               	movlb	0	; select bank0
   964  1748  018C               	clrf	12	;volatile
   965                           
   966                           ;main.c: 33: ANSELA=0;
   967  1749  0023               	movlb	3	; select bank3
   968  174A  018C               	clrf	12	;volatile
   969                           
   970                           ;main.c: 34: ANSELB=0;
   971  174B  018D               	clrf	13	;volatile
   972                           
   973                           ;main.c: 36: INTCONbits.GIE=1;
   974  174C  178B               	bsf	11,7	;volatile
   975                           
   976                           ;main.c: 37: INTCONbits.PEIE=1;
   977  174D  170B               	bsf	11,6	;volatile
   978                           
   979                           ;main.c: 38: PIR1bits.CCP1IF=0;
   980  174E  0020               	movlb	0	; select bank0
   981  174F  1111               	bcf	17,2	;volatile
   982                           
   983                           ;main.c: 39: PIE1bits.CCP1IE=1;
   984  1750  0021               	movlb	1	; select bank1
   985  1751  1511               	bsf	17,2	;volatile
   986                           
   987                           ;main.c: 41: T1CONbits.TMR1CS=0b00;
   988  1752  303F               	movlw	-193
   989  1753  0020               	movlb	0	; select bank0
   990  1754  0598               	andwf	24,f	;volatile
   991                           
   992                           ;main.c: 42: T1CONbits.T1CKPS=0b11;
   993  1755  3030               	movlw	48
   994  1756  0498               	iorwf	24,f	;volatile
   995                           
   996                           ;main.c: 43: T1CONbits.nT1SYNC=0;
   997  1757  1118               	bcf	24,2	;volatile
   998                           
   999                           ;main.c: 44: T1CONbits.TMR1ON=1;
  1000  1758  1418               	bsf	24,0	;volatile
  1001                           
  1002                           ;main.c: 45: TMR1=0;
  1003  1759  0196               	clrf	22	;volatile
  1004  175A  0197               	clrf	23	;volatile
  1005                           
  1006                           ;main.c: 47: CCP1CONbits.CCP1M=0b0100;
  1007  175B  0025               	movlb	5	; select bank5
  1008  175C  0813               	movf	19,w	;volatile
  1009  175D  39F0               	andlw	-16
  1010  175E  3804               	iorlw	4
  1011  175F  0093               	movwf	19	;volatile
  1012                           
  1013                           ;main.c: 49: Lcd_Init();
  1014  1760  318A  2222  3197   	fcall	_Lcd_Init
  1015                           
  1016                           ;main.c: 50: Lcd_Cmd(1);
  1017  1763  3001               	movlw	1
  1018  1764  3188  20F3  3197   	fcall	_Lcd_Cmd
  1019                           
  1020                           ;main.c: 51: Lcd_Cmd(12);
  1021  1767  300C               	movlw	12
  1022  1768  3188  20F3  3197   	fcall	_Lcd_Cmd
  1023  176B                     l2683:	
  1024                           ;main.c: 53: while(1){
  1025                           
  1026                           
  1027                           ;main.c: 54: sprintf(buffer1,"Tiempo %f",tiempo);
  1028  176B  3076               	movlw	low (STR_1| (0+32768))
  1029  176C  0021               	movlb	1	; select bank1
  1030  176D  00BE               	movwf	sprintf@f^(0+128)
  1031  176E  3090               	movlw	high (STR_1| (0+32768))
  1032  176F  00BF               	movwf	(sprintf@f^(0+128)+1)
  1033  1770  0022               	movlb	2	; select bank2
  1034  1771  0830               	movf	_tiempo^(0+256),w
  1035  1772  0021               	movlb	1	; select bank1
  1036  1773  00C0               	movwf	(?_sprintf^(0+128)+2)
  1037  1774  0022               	movlb	2	; select bank2
  1038  1775  0831               	movf	(_tiempo+1)^(0+256),w
  1039  1776  0021               	movlb	1	; select bank1
  1040  1777  00C1               	movwf	((?_sprintf+1)^(0+128)+2)
  1041  1778  0022               	movlb	2	; select bank2
  1042  1779  0832               	movf	(_tiempo+2)^(0+256),w
  1043  177A  0021               	movlb	1	; select bank1
  1044  177B  00C2               	movwf	((?_sprintf+2)^(0+128)+2)
  1045  177C  3020               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  1046  177D  3180  2045  3197   	fcall	_sprintf
  1047                           
  1048                           ;main.c: 55: Lcd_Out2(1, 1, buffer1);
  1049  1780  0020               	movlb	0	; select bank0
  1050  1781  01B6               	clrf	Lcd_Out2@x
  1051  1782  0AB6               	incf	Lcd_Out2@x,f
  1052  1783  3020               	movlw	(low (main@buffer1| (0+256)))& (0+255)
  1053  1784  0021               	movlb	1	; select bank1
  1054  1785  00E0               	movwf	??_main^(0+128)
  1055  1786  0860               	movf	??_main^(0+128),w
  1056  1787  0020               	movlb	0	; select bank0
  1057  1788  00B7               	movwf	Lcd_Out2@buffer
  1058  1789  3001               	movlw	1
  1059  178A  3195  2598  3197   	fcall	_Lcd_Out2
  1060                           
  1061                           ;main.c: 56: _delay((unsigned long)((500)*(32000000/4000.0)));
  1062  178D  3015               	movlw	21
  1063  178E  0021               	movlb	1	; select bank1
  1064  178F  00E2               	movwf	(??_main^(0+128)+2)
  1065  1790  304B               	movlw	75
  1066  1791  00E1               	movwf	(??_main^(0+128)+1)
  1067  1792  30D1               	movlw	209
  1068  1793  00E0               	movwf	??_main^(0+128)
  1069  1794                     u3997:	
  1070  1794  0BE0               	decfsz	??_main^(0+128),f
  1071  1795  2F94               	goto	u3997
  1072  1796  0BE1               	decfsz	(??_main^(0+128)+1),f
  1073  1797  2F94               	goto	u3997
  1074  1798  0BE2               	decfsz	(??_main^(0+128)+2),f
  1075  1799  2F94               	goto	u3997
  1076  179A  0000               	nop
  1077  179B  2F6B               	goto	l2683
  1078  179C                     __end_of_main:	
  1079                           ;main.c: 57: }
  1080                           ;main.c: 58: return;
  1081                           
  1082                           
  1083                           	psect	text1
  1084  0045                     __ptext1:	
  1085 ;; *************** function _sprintf *****************
  1086 ;; Defined at:
  1087 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  sp              1    wreg     PTR unsigned char 
  1090 ;;		 -> main@buffer1(16), 
  1091 ;;  f               2   30[BANK1 ] PTR const unsigned char 
  1092 ;;		 -> STR_1(10), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  sp              1   59[BANK1 ] PTR unsigned char 
  1095 ;;		 -> main@buffer1(16), 
  1096 ;;  tmpval          4   55[BANK1 ] struct .
  1097 ;;  val             4   49[BANK1 ] unsigned long 
  1098 ;;  fval            3   60[BANK1 ] unsigned long 
  1099 ;;  exp             2   53[BANK1 ] int 
  1100 ;;  prec            2   47[BANK1 ] int 
  1101 ;;  flag            2   45[BANK1 ] unsigned short 
  1102 ;;  cp              2    0        PTR const unsigned char 
  1103 ;;  len             2    0        unsigned int 
  1104 ;;  width           2    0        int 
  1105 ;;  c               1   63[BANK1 ] char 
  1106 ;;  ap              1   44[BANK1 ] PTR void [1]
  1107 ;;		 -> ?_sprintf(2), 
  1108 ;;  d               1    0        unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  2   30[BANK1 ] int 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1118 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  1119 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0
  1120 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1121 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
  1122 ;;Total ram usage:       34 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    6
  1125 ;; This function calls:
  1126 ;;		___awdiv
  1127 ;;		___ftadd
  1128 ;;		___ftge
  1129 ;;		___ftmul
  1130 ;;		___ftneg
  1131 ;;		___ftsub
  1132 ;;		___fttol
  1133 ;;		___lldiv
  1134 ;;		___llmod
  1135 ;;		___lltoft
  1136 ;;		___wmul
  1137 ;;		__div_to_l_
  1138 ;;		__tdiv_to_l_
  1139 ;;		_fround
  1140 ;;		_scale
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _sprintf
  1148  0045                     _sprintf:	
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1152                           ;sprintf@sp stored from wreg
  1153  0045  0021               	movlb	1	; select bank1
  1154  0046  00DB               	movwf	sprintf@sp^(0+128)
  1155                           
  1156                           ;doprnt.c: 494: va_list ap;
  1157                           ;doprnt.c: 499: signed char c;
  1158                           ;doprnt.c: 501: int width;
  1159                           ;doprnt.c: 504: int prec;
  1160                           ;doprnt.c: 508: unsigned short flag;
  1161                           ;doprnt.c: 515: char d;
  1162                           ;doprnt.c: 516: double fval;
  1163                           ;doprnt.c: 517: int exp;
  1164                           ;doprnt.c: 523: union {
  1165                           ;doprnt.c: 524: unsigned long vd;
  1166                           ;doprnt.c: 525: double integ;
  1167                           ;doprnt.c: 526: } tmpval;
  1168                           ;doprnt.c: 528: unsigned long val;
  1169                           ;doprnt.c: 529: unsigned len;
  1170                           ;doprnt.c: 530: const char * cp;
  1171                           ;doprnt.c: 533: *ap = __va_start();
  1172  0047  30C0               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1173  0048  00C3               	movwf	??_sprintf^(0+128)
  1174  0049  0843               	movf	??_sprintf^(0+128),w
  1175  004A  00CC               	movwf	sprintf@ap^(0+128)
  1176  004B                     l2547:	
  1177                           ;doprnt.c: 536: while(c = *f++) {
  1178                           
  1179  004B  083F               	movf	(sprintf@f+1)^(0+128),w
  1180  004C  00C4               	movwf	(??_sprintf^(0+128)+1)
  1181  004D  083E               	movf	sprintf@f^(0+128),w
  1182  004E  00C3               	movwf	??_sprintf^(0+128)
  1183  004F  0ABE               	incf	sprintf@f^(0+128),f
  1184  0050  1903               	skipnz
  1185  0051  0ABF               	incf	(sprintf@f+1)^(0+128),f
  1186  0052  0843               	movf	??_sprintf^(0+128),w
  1187  0053  0084               	movwf	4
  1188  0054  0844               	movf	(??_sprintf+1)^(0+128),w
  1189  0055  0085               	movwf	5
  1190  0056  0800               	movf	0,w	;code access
  1191  0057  00C5               	movwf	(??_sprintf+2)^(0+128)
  1192  0058  0845               	movf	(??_sprintf+2)^(0+128),w
  1193  0059  00DF               	movwf	sprintf@c^(0+128)
  1194  005A  085F               	movf	sprintf@c^(0+128),w
  1195  005B  1903               	btfsc	3,2
  1196  005C  2CB6               	goto	l2549
  1197                           
  1198                           ;doprnt.c: 538: if(c != '%')
  1199  005D  3025               	movlw	37
  1200  005E  065F               	xorwf	sprintf@c^(0+128),w
  1201  005F  1903               	btfsc	3,2
  1202  0060  2863               	goto	l2393
  1203                           
  1204                           ;doprnt.c: 540: {
  1205                           ;doprnt.c: 541: ((*sp++ = (c)));
  1206  0061  085F               	movf	sprintf@c^(0+128),w
  1207  0062  2CAA               	goto	L5
  1208  0063                     l2393:	
  1209                           ;doprnt.c: 542: continue;
  1210                           
  1211                           
  1212                           ;doprnt.c: 543: }
  1213                           ;doprnt.c: 548: flag = 0;
  1214  0063  01CD               	clrf	sprintf@flag^(0+128)
  1215  0064  01CE               	clrf	(sprintf@flag+1)^(0+128)
  1216                           
  1217                           ;doprnt.c: 635: switch(c = *f++) {
  1218  0065  2868               	goto	l2397
  1219  0066                     l125:	
  1220                           ;doprnt.c: 662: case 'f':
  1221                           
  1222                           ;doprnt.c: 638: goto alldone;
  1223                           
  1224                           ;doprnt.c: 637: case 0:
  1225                           
  1226                           
  1227                           ;doprnt.c: 663: flag |= 0x400;
  1228  0066  154E               	bsf	(sprintf@flag^(0+128)+1),2
  1229                           
  1230                           ;doprnt.c: 664: break;
  1231  0067  287C               	goto	l2399
  1232  0068                     l2397:	
  1233                           ;doprnt.c: 822: }
  1234                           
  1235                           ;doprnt.c: 813: continue;
  1236                           
  1237                           ;doprnt.c: 802: default:
  1238                           
  1239  0068  083F               	movf	(sprintf@f+1)^(0+128),w
  1240  0069  00C4               	movwf	(??_sprintf^(0+128)+1)
  1241  006A  083E               	movf	sprintf@f^(0+128),w
  1242  006B  00C3               	movwf	??_sprintf^(0+128)
  1243  006C  0ABE               	incf	sprintf@f^(0+128),f
  1244  006D  1903               	skipnz
  1245  006E  0ABF               	incf	(sprintf@f+1)^(0+128),f
  1246  006F  0843               	movf	??_sprintf^(0+128),w
  1247  0070  0084               	movwf	4
  1248  0071  0844               	movf	(??_sprintf+1)^(0+128),w
  1249  0072  0085               	movwf	5
  1250  0073  0800               	movf	0,w	;code access
  1251  0074  00DF               	movwf	sprintf@c^(0+128)
  1252                           
  1253                           ; Switch size 1, requested type "space"
  1254                           ; Number of cases is 2, Range of values is 0 to 102
  1255                           ; switch strategies available:
  1256                           ; Name         Instructions Cycles
  1257                           ; simple_byte            7     4 (average)
  1258                           ; direct_byte          212     6 (fixed)
  1259                           ; jumptable            260     6 (fixed)
  1260                           ;	Chosen strategy is simple_byte
  1261  0075  3A00               	xorlw	0	; case 0
  1262  0076  1903               	skipnz
  1263  0077  2CB6               	goto	l2549
  1264  0078  3A66               	xorlw	102	; case 102
  1265  0079  1903               	skipnz
  1266  007A  2866               	goto	l125
  1267  007B  284B               	goto	l2547
  1268  007C                     l2399:	
  1269                           
  1270                           ;doprnt.c: 825: if(flag & (0x700)) {
  1271  007C  3000               	movlw	0
  1272  007D  054D               	andwf	sprintf@flag^(0+128),w
  1273  007E  00C3               	movwf	??_sprintf^(0+128)
  1274  007F  3007               	movlw	7
  1275  0080  054E               	andwf	(sprintf@flag+1)^(0+128),w
  1276  0081  00C4               	movwf	(??_sprintf+1)^(0+128)
  1277  0082  0843               	movf	??_sprintf^(0+128),w
  1278  0083  0444               	iorwf	(??_sprintf^(0+128)+1),w
  1279  0084  1903               	btfsc	3,2
  1280  0085  2C9F               	goto	l2541
  1281                           
  1282                           ;doprnt.c: 829: prec = 6;
  1283  0086  3006               	movlw	6
  1284  0087  00CF               	movwf	sprintf@prec^(0+128)
  1285  0088  3000               	movlw	0
  1286  0089  00D0               	movwf	(sprintf@prec^(0+128)+1)
  1287                           
  1288                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1289  008A  084C               	movf	sprintf@ap^(0+128),w
  1290  008B  0086               	movwf	6
  1291  008C  0187               	clrf	7
  1292  008D  3F40               	moviw [0]fsr1
  1293  008E  00DC               	movwf	sprintf@fval^(0+128)
  1294  008F  3F41               	moviw [1]fsr1
  1295  0090  00DD               	movwf	(sprintf@fval+1)^(0+128)
  1296  0091  3F42               	moviw [2]fsr1
  1297  0092  00DE               	movwf	(sprintf@fval+2)^(0+128)
  1298  0093  3003               	movlw	3
  1299  0094  00C3               	movwf	??_sprintf^(0+128)
  1300  0095  0843               	movf	??_sprintf^(0+128),w
  1301  0096  07CC               	addwf	sprintf@ap^(0+128),f
  1302                           
  1303                           ;doprnt.c: 831: if(fval < 0.0) {
  1304  0097  085C               	movf	sprintf@fval^(0+128),w
  1305  0098  0020               	movlb	0	; select bank0
  1306  0099  00B3               	movwf	___ftge@ff1
  1307  009A  0021               	movlb	1	; select bank1
  1308  009B  085D               	movf	(sprintf@fval+1)^(0+128),w
  1309  009C  0020               	movlb	0	; select bank0
  1310  009D  00B4               	movwf	___ftge@ff1+1
  1311  009E  0021               	movlb	1	; select bank1
  1312  009F  085E               	movf	(sprintf@fval+2)^(0+128),w
  1313  00A0  0020               	movlb	0	; select bank0
  1314  00A1  00B5               	movwf	___ftge@ff1+2
  1315  00A2  3000               	movlw	0
  1316  00A3  00B6               	movwf	___ftge@ff2
  1317  00A4  3000               	movlw	0
  1318  00A5  00B7               	movwf	___ftge@ff2+1
  1319  00A6  3000               	movlw	0
  1320  00A7  00B8               	movwf	___ftge@ff2+2
  1321  00A8  3195  25D3  3180   	fcall	___ftge
  1322  00AB  1803               	btfsc	3,0
  1323  00AC  28CC               	goto	l2413
  1324                           
  1325                           ;doprnt.c: 832: fval = -fval;
  1326  00AD  0021               	movlb	1	; select bank1
  1327  00AE  085C               	movf	sprintf@fval^(0+128),w
  1328  00AF  0020               	movlb	0	; select bank0
  1329  00B0  00B3               	movwf	___ftneg@f1
  1330  00B1  0021               	movlb	1	; select bank1
  1331  00B2  085D               	movf	(sprintf@fval+1)^(0+128),w
  1332  00B3  0020               	movlb	0	; select bank0
  1333  00B4  00B4               	movwf	___ftneg@f1+1
  1334  00B5  0021               	movlb	1	; select bank1
  1335  00B6  085E               	movf	(sprintf@fval+2)^(0+128),w
  1336  00B7  0020               	movlb	0	; select bank0
  1337  00B8  00B5               	movwf	___ftneg@f1+2
  1338  00B9  3187  27EB  3180   	fcall	___ftneg
  1339  00BC  0020               	movlb	0	; select bank0
  1340  00BD  0833               	movf	?___ftneg,w
  1341  00BE  0021               	movlb	1	; select bank1
  1342  00BF  00DC               	movwf	sprintf@fval^(0+128)
  1343  00C0  0020               	movlb	0	; select bank0
  1344  00C1  0834               	movf	?___ftneg+1,w
  1345  00C2  0021               	movlb	1	; select bank1
  1346  00C3  00DD               	movwf	(sprintf@fval+1)^(0+128)
  1347  00C4  0020               	movlb	0	; select bank0
  1348  00C5  0835               	movf	?___ftneg+2,w
  1349  00C6  0021               	movlb	1	; select bank1
  1350  00C7  00DE               	movwf	(sprintf@fval+2)^(0+128)
  1351                           
  1352                           ;doprnt.c: 833: flag |= 0x03;
  1353  00C8  3003               	movlw	3
  1354  00C9  04CD               	iorwf	sprintf@flag^(0+128),f
  1355  00CA  3000               	movlw	0
  1356  00CB  04CE               	iorwf	(sprintf@flag+1)^(0+128),f
  1357  00CC                     l2413:	
  1358                           
  1359                           ;doprnt.c: 834: }
  1360                           ;doprnt.c: 835: exp = 0;
  1361  00CC  0021               	movlb	1	; select bank1
  1362  00CD  01D5               	clrf	sprintf@exp^(0+128)
  1363  00CE  01D6               	clrf	(sprintf@exp+1)^(0+128)
  1364                           
  1365                           ;doprnt.c: 836: if( fval!=0) {
  1366  00CF  085E               	movf	(sprintf@fval+2)^(0+128),w
  1367  00D0  045D               	iorwf	(sprintf@fval+1)^(0+128),w
  1368  00D1  045C               	iorwf	sprintf@fval^(0+128),w
  1369  00D2  1903               	skipnz
  1370  00D3  299A               	goto	l130
  1371                           
  1372                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1373  00D4  30DC               	movlw	low (sprintf@fval| 0)
  1374  00D5  0086               	movwf	6
  1375  00D6  0187               	clrf	7
  1376  00D7  3F40               	moviw [0]fsr1
  1377  00D8  00C3               	movwf	??_sprintf^(0+128)
  1378  00D9  3F41               	moviw [1]fsr1
  1379  00DA  00C4               	movwf	(??_sprintf^(0+128)+1)
  1380  00DB  3F42               	moviw [2]fsr1
  1381  00DC  00C5               	movwf	(??_sprintf^(0+128)+2)
  1382  00DD  3F43               	moviw [3]fsr1
  1383  00DE  00C6               	movwf	(??_sprintf^(0+128)+3)
  1384  00DF  300F               	movlw	15
  1385  00E0                     u3635:	
  1386  00E0  36C6               	lsrf	(??_sprintf^(0+128)+3),f
  1387  00E1  0CC5               	rrf	(??_sprintf^(0+128)+2),f
  1388  00E2  0CC4               	rrf	(??_sprintf^(0+128)+1),f
  1389  00E3  0CC3               	rrf	??_sprintf^(0+128),f
  1390  00E4  0B89               	decfsz	9,f
  1391  00E5  28E0               	goto	u3635
  1392  00E6  30FF               	movlw	255
  1393  00E7  0543               	andwf	??_sprintf^(0+128),w
  1394  00E8  00C7               	movwf	(??_sprintf+4)^(0+128)
  1395  00E9  3000               	movlw	0
  1396  00EA  0544               	andwf	(??_sprintf+1)^(0+128),w
  1397  00EB  00C8               	movwf	(??_sprintf+5)^(0+128)
  1398  00EC  0847               	movf	(??_sprintf+4)^(0+128),w
  1399  00ED  3E82               	addlw	130
  1400  00EE  00D5               	movwf	sprintf@exp^(0+128)
  1401  00EF  30FF               	movlw	255
  1402  00F0  3D48               	addwfc	(??_sprintf+5)^(0+128),w
  1403  00F1  00D6               	movwf	(sprintf@exp+1)^(0+128)
  1404                           
  1405                           ;doprnt.c: 838: exp--;
  1406  00F2  30FF               	movlw	255
  1407  00F3  07D5               	addwf	sprintf@exp^(0+128),f
  1408  00F4  30FF               	movlw	255
  1409  00F5  3DD6               	addwfc	(sprintf@exp+1)^(0+128),f
  1410                           
  1411                           ;doprnt.c: 839: exp *= 3;
  1412  00F6  3003               	movlw	3
  1413  00F7  0020               	movlb	0	; select bank0
  1414  00F8  00C3               	movwf	___wmul@multiplier
  1415  00F9  3000               	movlw	0
  1416  00FA  00C4               	movwf	___wmul@multiplier+1
  1417  00FB  0021               	movlb	1	; select bank1
  1418  00FC  0856               	movf	(sprintf@exp+1)^(0+128),w
  1419  00FD  0020               	movlb	0	; select bank0
  1420  00FE  00C6               	movwf	___wmul@multiplicand+1
  1421  00FF  0021               	movlb	1	; select bank1
  1422  0100  0855               	movf	sprintf@exp^(0+128),w
  1423  0101  0020               	movlb	0	; select bank0
  1424  0102  00C5               	movwf	___wmul@multiplicand
  1425  0103  3195  2514  3180   	fcall	___wmul
  1426  0106  0020               	movlb	0	; select bank0
  1427  0107  0844               	movf	?___wmul+1,w
  1428  0108  0021               	movlb	1	; select bank1
  1429  0109  00D6               	movwf	(sprintf@exp+1)^(0+128)
  1430  010A  0020               	movlb	0	; select bank0
  1431  010B  0843               	movf	?___wmul,w
  1432  010C  0021               	movlb	1	; select bank1
  1433  010D  00D5               	movwf	sprintf@exp^(0+128)
  1434                           
  1435                           ;doprnt.c: 840: exp /= 10;
  1436  010E  300A               	movlw	10
  1437  010F  0020               	movlb	0	; select bank0
  1438  0110  00BA               	movwf	___awdiv@divisor
  1439  0111  3000               	movlw	0
  1440  0112  00BB               	movwf	___awdiv@divisor+1
  1441  0113  0021               	movlb	1	; select bank1
  1442  0114  0856               	movf	(sprintf@exp+1)^(0+128),w
  1443  0115  0020               	movlb	0	; select bank0
  1444  0116  00BD               	movwf	___awdiv@dividend+1
  1445  0117  0021               	movlb	1	; select bank1
  1446  0118  0855               	movf	sprintf@exp^(0+128),w
  1447  0119  0020               	movlb	0	; select bank0
  1448  011A  00BC               	movwf	___awdiv@dividend
  1449  011B  3196  2698  3180   	fcall	___awdiv
  1450  011E  0020               	movlb	0	; select bank0
  1451  011F  083B               	movf	?___awdiv+1,w
  1452  0120  0021               	movlb	1	; select bank1
  1453  0121  00D6               	movwf	(sprintf@exp+1)^(0+128)
  1454  0122  0020               	movlb	0	; select bank0
  1455  0123  083A               	movf	?___awdiv,w
  1456  0124  0021               	movlb	1	; select bank1
  1457  0125  00D5               	movwf	sprintf@exp^(0+128)
  1458                           
  1459                           ;doprnt.c: 841: if(exp < 0)
  1460  0126  1FD6               	btfss	(sprintf@exp+1)^(0+128),7
  1461  0127  292C               	goto	l2429
  1462                           
  1463                           ;doprnt.c: 842: exp--;
  1464  0128  30FF               	movlw	255
  1465  0129  07D5               	addwf	sprintf@exp^(0+128),f
  1466  012A  30FF               	movlw	255
  1467  012B  3DD6               	addwfc	(sprintf@exp+1)^(0+128),f
  1468  012C                     l2429:	
  1469                           
  1470                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1471  012C  0355               	decf	sprintf@exp^(0+128),w
  1472  012D  3AFF               	xorlw	255
  1473  012E  3184  24BC  3180   	fcall	_scale
  1474  0131  0020               	movlb	0	; select bank0
  1475  0132  0859               	movf	?_scale,w
  1476  0133  0021               	movlb	1	; select bank1
  1477  0134  00D7               	movwf	sprintf@tmpval^(0+128)
  1478  0135  0020               	movlb	0	; select bank0
  1479  0136  085A               	movf	?_scale+1,w
  1480  0137  0021               	movlb	1	; select bank1
  1481  0138  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  1482  0139  0020               	movlb	0	; select bank0
  1483  013A  085B               	movf	?_scale+2,w
  1484  013B  0021               	movlb	1	; select bank1
  1485  013C  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  1486                           
  1487                           ;doprnt.c: 847: tmpval.integ *= fval;
  1488  013D  085C               	movf	sprintf@fval^(0+128),w
  1489  013E  0020               	movlb	0	; select bank0
  1490  013F  00C9               	movwf	___ftmul@f1
  1491  0140  0021               	movlb	1	; select bank1
  1492  0141  085D               	movf	(sprintf@fval+1)^(0+128),w
  1493  0142  0020               	movlb	0	; select bank0
  1494  0143  00CA               	movwf	___ftmul@f1+1
  1495  0144  0021               	movlb	1	; select bank1
  1496  0145  085E               	movf	(sprintf@fval+2)^(0+128),w
  1497  0146  0020               	movlb	0	; select bank0
  1498  0147  00CB               	movwf	___ftmul@f1+2
  1499  0148  0021               	movlb	1	; select bank1
  1500  0149  0857               	movf	sprintf@tmpval^(0+128),w
  1501  014A  0020               	movlb	0	; select bank0
  1502  014B  00CC               	movwf	___ftmul@f2
  1503  014C  0021               	movlb	1	; select bank1
  1504  014D  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  1505  014E  0020               	movlb	0	; select bank0
  1506  014F  00CD               	movwf	___ftmul@f2+1
  1507  0150  0021               	movlb	1	; select bank1
  1508  0151  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  1509  0152  0020               	movlb	0	; select bank0
  1510  0153  00CE               	movwf	___ftmul@f2+2
  1511  0154  318B  2389  3180   	fcall	___ftmul
  1512  0157  0020               	movlb	0	; select bank0
  1513  0158  0849               	movf	?___ftmul,w
  1514  0159  0021               	movlb	1	; select bank1
  1515  015A  00D7               	movwf	sprintf@tmpval^(0+128)
  1516  015B  0020               	movlb	0	; select bank0
  1517  015C  084A               	movf	?___ftmul+1,w
  1518  015D  0021               	movlb	1	; select bank1
  1519  015E  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  1520  015F  0020               	movlb	0	; select bank0
  1521  0160  084B               	movf	?___ftmul+2,w
  1522  0161  0021               	movlb	1	; select bank1
  1523  0162  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  1524                           
  1525                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1526  0163  0857               	movf	sprintf@tmpval^(0+128),w
  1527  0164  0020               	movlb	0	; select bank0
  1528  0165  00B3               	movwf	___ftge@ff1
  1529  0166  0021               	movlb	1	; select bank1
  1530  0167  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  1531  0168  0020               	movlb	0	; select bank0
  1532  0169  00B4               	movwf	___ftge@ff1+1
  1533  016A  0021               	movlb	1	; select bank1
  1534  016B  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  1535  016C  0020               	movlb	0	; select bank0
  1536  016D  00B5               	movwf	___ftge@ff1+2
  1537  016E  3000               	movlw	0
  1538  016F  00B6               	movwf	___ftge@ff2
  1539  0170  3080               	movlw	128
  1540  0171  00B7               	movwf	___ftge@ff2+1
  1541  0172  303F               	movlw	63
  1542  0173  00B8               	movwf	___ftge@ff2+2
  1543  0174  3195  25D3  3180   	fcall	___ftge
  1544  0177  1803               	btfsc	3,0
  1545  0178  297E               	goto	l2437
  1546                           
  1547                           ;doprnt.c: 849: exp--;
  1548  0179  30FF               	movlw	255
  1549  017A  0021               	movlb	1	; select bank1
  1550  017B  07D5               	addwf	sprintf@exp^(0+128),f
  1551  017C  30FF               	movlw	255
  1552  017D  2999               	goto	L1
  1553  017E                     l2437:	
  1554                           
  1555                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1556  017E  0021               	movlb	1	; select bank1
  1557  017F  0857               	movf	sprintf@tmpval^(0+128),w
  1558  0180  0020               	movlb	0	; select bank0
  1559  0181  00B3               	movwf	___ftge@ff1
  1560  0182  0021               	movlb	1	; select bank1
  1561  0183  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  1562  0184  0020               	movlb	0	; select bank0
  1563  0185  00B4               	movwf	___ftge@ff1+1
  1564  0186  0021               	movlb	1	; select bank1
  1565  0187  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  1566  0188  0020               	movlb	0	; select bank0
  1567  0189  00B5               	movwf	___ftge@ff1+2
  1568  018A  3000               	movlw	0
  1569  018B  00B6               	movwf	___ftge@ff2
  1570  018C  3020               	movlw	32
  1571  018D  00B7               	movwf	___ftge@ff2+1
  1572  018E  3041               	movlw	65
  1573  018F  00B8               	movwf	___ftge@ff2+2
  1574  0190  3195  25D3  3180   	fcall	___ftge
  1575  0193  1C03               	btfss	3,0
  1576  0194  299A               	goto	l130
  1577                           
  1578                           ;doprnt.c: 851: exp++;
  1579  0195  3001               	movlw	1
  1580  0196  0021               	movlb	1	; select bank1
  1581  0197  07D5               	addwf	sprintf@exp^(0+128),f
  1582  0198  3000               	movlw	0
  1583  0199                     L1:	
  1584  0199  3DD6               	addwfc	(sprintf@exp+1)^(0+128),f
  1585  019A                     l130:	
  1586                           
  1587                           ;doprnt.c: 852: }
  1588                           ;doprnt.c: 1112: if(prec <= 12)
  1589  019A  0021               	movlb	1	; select bank1
  1590  019B  0850               	movf	(sprintf@prec+1)^(0+128),w
  1591  019C  3A80               	xorlw	128
  1592  019D  00C3               	movwf	??_sprintf^(0+128)
  1593  019E  3080               	movlw	128
  1594  019F  0243               	subwf	??_sprintf^(0+128),w
  1595  01A0  1D03               	skipz
  1596  01A1  29A4               	goto	u3675
  1597  01A2  300D               	movlw	13
  1598  01A3  024F               	subwf	sprintf@prec^(0+128),w
  1599  01A4                     u3675:	
  1600  01A4  1803               	skipnc
  1601  01A5  29C7               	goto	l2443
  1602                           
  1603                           ;doprnt.c: 1113: fval += fround(prec);
  1604  01A6  0021               	movlb	1	; select bank1
  1605  01A7  084F               	movf	sprintf@prec^(0+128),w
  1606  01A8  318E  265E  3180   	fcall	_fround
  1607  01AB  0020               	movlb	0	; select bank0
  1608  01AC  0859               	movf	?_fround,w
  1609  01AD  0021               	movlb	1	; select bank1
  1610  01AE  00AB               	movwf	___ftadd@f1^(0+128)
  1611  01AF  0020               	movlb	0	; select bank0
  1612  01B0  085A               	movf	?_fround+1,w
  1613  01B1  0021               	movlb	1	; select bank1
  1614  01B2  00AC               	movwf	(___ftadd@f1+1)^(0+128)
  1615  01B3  0020               	movlb	0	; select bank0
  1616  01B4  085B               	movf	?_fround+2,w
  1617  01B5  0021               	movlb	1	; select bank1
  1618  01B6  00AD               	movwf	(___ftadd@f1+2)^(0+128)
  1619  01B7  085C               	movf	sprintf@fval^(0+128),w
  1620  01B8  00AE               	movwf	___ftadd@f2^(0+128)
  1621  01B9  085D               	movf	(sprintf@fval+1)^(0+128),w
  1622  01BA  00AF               	movwf	(___ftadd@f2+1)^(0+128)
  1623  01BB  085E               	movf	(sprintf@fval+2)^(0+128),w
  1624  01BC  00B0               	movwf	(___ftadd@f2+2)^(0+128)
  1625  01BD  318C  243D  3180   	fcall	___ftadd
  1626  01C0  0021               	movlb	1	; select bank1
  1627  01C1  082B               	movf	?___ftadd^(0+128),w
  1628  01C2  00DC               	movwf	sprintf@fval^(0+128)
  1629  01C3  082C               	movf	(?___ftadd+1)^(0+128),w
  1630  01C4  00DD               	movwf	(sprintf@fval+1)^(0+128)
  1631  01C5  082D               	movf	(?___ftadd+2)^(0+128),w
  1632  01C6  00DE               	movwf	(sprintf@fval+2)^(0+128)
  1633  01C7                     l2443:	
  1634                           
  1635                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1636  01C7  0021               	movlb	1	; select bank1
  1637  01C8  0856               	movf	(sprintf@exp+1)^(0+128),w
  1638  01C9  3A80               	xorlw	128
  1639  01CA  00C3               	movwf	??_sprintf^(0+128)
  1640  01CB  3080               	movlw	128
  1641  01CC  0243               	subwf	??_sprintf^(0+128),w
  1642  01CD  1D03               	skipz
  1643  01CE  29D1               	goto	u3685
  1644  01CF  300A               	movlw	10
  1645  01D0  0255               	subwf	sprintf@exp^(0+128),w
  1646  01D1                     u3685:	
  1647  01D1  1803               	skipnc
  1648  01D2  29F4               	goto	l2451
  1649  01D3  0021               	movlb	1	; select bank1
  1650  01D4  085E               	movf	(sprintf@fval+2)^(0+128),w
  1651  01D5  045D               	iorwf	(sprintf@fval+1)^(0+128),w
  1652  01D6  045C               	iorwf	sprintf@fval^(0+128),w
  1653  01D7  1903               	skipnz
  1654  01D8  2A53               	goto	l2465
  1655  01D9  085C               	movf	sprintf@fval^(0+128),w
  1656  01DA  00A6               	movwf	___fttol@f1^(0+128)
  1657  01DB  085D               	movf	(sprintf@fval+1)^(0+128),w
  1658  01DC  00A7               	movwf	(___fttol@f1+1)^(0+128)
  1659  01DD  085E               	movf	(sprintf@fval+2)^(0+128),w
  1660  01DE  00A8               	movwf	(___fttol@f1+2)^(0+128)
  1661  01DF  3188  206C  3180   	fcall	___fttol
  1662  01E2  0021               	movlb	1	; select bank1
  1663  01E3  0829               	movf	(?___fttol+3)^(0+128),w
  1664  01E4  0428               	iorwf	(?___fttol+2)^(0+128),w
  1665  01E5  0427               	iorwf	(?___fttol+1)^(0+128),w
  1666  01E6  0426               	iorwf	?___fttol^(0+128),w
  1667  01E7  1D03               	skipz
  1668  01E8  2A53               	goto	l2465
  1669  01E9  0856               	movf	(sprintf@exp+1)^(0+128),w
  1670  01EA  3A80               	xorlw	128
  1671  01EB  00C3               	movwf	??_sprintf^(0+128)
  1672  01EC  3080               	movlw	128
  1673  01ED  0243               	subwf	??_sprintf^(0+128),w
  1674  01EE  1D03               	skipz
  1675  01EF  29F2               	goto	u3715
  1676  01F0  3002               	movlw	2
  1677  01F1  0255               	subwf	sprintf@exp^(0+128),w
  1678  01F2                     u3715:	
  1679  01F2  1C03               	skipc
  1680  01F3  2A53               	goto	l2465
  1681  01F4                     l2451:	
  1682                           
  1683                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1684  01F4  0021               	movlb	1	; select bank1
  1685  01F5  0857               	movf	sprintf@tmpval^(0+128),w
  1686  01F6  0020               	movlb	0	; select bank0
  1687  01F7  00B3               	movwf	___ftge@ff1
  1688  01F8  0021               	movlb	1	; select bank1
  1689  01F9  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  1690  01FA  0020               	movlb	0	; select bank0
  1691  01FB  00B4               	movwf	___ftge@ff1+1
  1692  01FC  0021               	movlb	1	; select bank1
  1693  01FD  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  1694  01FE  0020               	movlb	0	; select bank0
  1695  01FF  00B5               	movwf	___ftge@ff1+2
  1696  0200  3070               	movlw	112
  1697  0201  00B6               	movwf	___ftge@ff2
  1698  0202  3089               	movlw	137
  1699  0203  00B7               	movwf	___ftge@ff2+1
  1700  0204  3040               	movlw	64
  1701  0205  00B8               	movwf	___ftge@ff2+2
  1702  0206  3195  25D3  3180   	fcall	___ftge
  1703  0209  1803               	btfsc	3,0
  1704  020A  2A0D               	goto	l2455
  1705                           
  1706                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1707  020B  30F7               	movlw	247
  1708  020C  2A0E               	goto	L2
  1709  020D                     l2455:	
  1710                           ;doprnt.c: 1122: }else{
  1711                           
  1712                           
  1713                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1714  020D  30F8               	movlw	248
  1715  020E                     L2:	
  1716  020E  0021               	movlb	1	; select bank1
  1717  020F  07D5               	addwf	sprintf@exp^(0+128),f
  1718  0210  30FF               	movlw	255
  1719  0211  3DD6               	addwfc	(sprintf@exp+1)^(0+128),f
  1720                           
  1721                           ;doprnt.c: 1124: }
  1722                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1723  0212  0855               	movf	sprintf@exp^(0+128),w
  1724  0213  3184  24BC  3180   	fcall	_scale
  1725  0216  0020               	movlb	0	; select bank0
  1726  0217  0859               	movf	?_scale,w
  1727  0218  0021               	movlb	1	; select bank1
  1728  0219  00D7               	movwf	sprintf@tmpval^(0+128)
  1729  021A  0020               	movlb	0	; select bank0
  1730  021B  085A               	movf	?_scale+1,w
  1731  021C  0021               	movlb	1	; select bank1
  1732  021D  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  1733  021E  0020               	movlb	0	; select bank0
  1734  021F  085B               	movf	?_scale+2,w
  1735  0220  0021               	movlb	1	; select bank1
  1736  0221  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  1737                           
  1738                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1739  0222  085C               	movf	sprintf@fval^(0+128),w
  1740  0223  0020               	movlb	0	; select bank0
  1741  0224  00B3               	movwf	__tdiv_to_l_@f1
  1742  0225  0021               	movlb	1	; select bank1
  1743  0226  085D               	movf	(sprintf@fval+1)^(0+128),w
  1744  0227  0020               	movlb	0	; select bank0
  1745  0228  00B4               	movwf	__tdiv_to_l_@f1+1
  1746  0229  0021               	movlb	1	; select bank1
  1747  022A  085E               	movf	(sprintf@fval+2)^(0+128),w
  1748  022B  0020               	movlb	0	; select bank0
  1749  022C  00B5               	movwf	__tdiv_to_l_@f1+2
  1750  022D  0021               	movlb	1	; select bank1
  1751  022E  0857               	movf	sprintf@tmpval^(0+128),w
  1752  022F  0020               	movlb	0	; select bank0
  1753  0230  00B6               	movwf	__tdiv_to_l_@f2
  1754  0231  0021               	movlb	1	; select bank1
  1755  0232  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  1756  0233  0020               	movlb	0	; select bank0
  1757  0234  00B7               	movwf	__tdiv_to_l_@f2+1
  1758  0235  0021               	movlb	1	; select bank1
  1759  0236  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  1760  0237  0020               	movlb	0	; select bank0
  1761  0238  00B8               	movwf	__tdiv_to_l_@f2+2
  1762  0239  3187  2735  3180   	fcall	__tdiv_to_l_
  1763  023C  0020               	movlb	0	; select bank0
  1764  023D  0836               	movf	?__tdiv_to_l_+3,w
  1765  023E  0021               	movlb	1	; select bank1
  1766  023F  00D4               	movwf	(sprintf@val+3)^(0+128)
  1767  0240  0020               	movlb	0	; select bank0
  1768  0241  0835               	movf	?__tdiv_to_l_+2,w
  1769  0242  0021               	movlb	1	; select bank1
  1770  0243  00D3               	movwf	(sprintf@val+2)^(0+128)
  1771  0244  0020               	movlb	0	; select bank0
  1772  0245  0834               	movf	?__tdiv_to_l_+1,w
  1773  0246  0021               	movlb	1	; select bank1
  1774  0247  00D2               	movwf	(sprintf@val+1)^(0+128)
  1775  0248  0020               	movlb	0	; select bank0
  1776  0249  0833               	movf	?__tdiv_to_l_,w
  1777  024A  0021               	movlb	1	; select bank1
  1778  024B  00D1               	movwf	sprintf@val^(0+128)
  1779                           
  1780                           ;doprnt.c: 1129: fval = 0.0;
  1781  024C  3000               	movlw	0
  1782  024D  00DC               	movwf	sprintf@fval^(0+128)
  1783  024E  3000               	movlw	0
  1784  024F  00DD               	movwf	(sprintf@fval+1)^(0+128)
  1785  0250  3000               	movlw	0
  1786  0251  00DE               	movwf	(sprintf@fval+2)^(0+128)
  1787                           
  1788                           ;doprnt.c: 1130: } else {
  1789  0252  2A96               	goto	l2469
  1790  0253                     l2465:	
  1791                           
  1792                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1793  0253  0021               	movlb	1	; select bank1
  1794  0254  085C               	movf	sprintf@fval^(0+128),w
  1795  0255  00A6               	movwf	___fttol@f1^(0+128)
  1796  0256  085D               	movf	(sprintf@fval+1)^(0+128),w
  1797  0257  00A7               	movwf	(___fttol@f1+1)^(0+128)
  1798  0258  085E               	movf	(sprintf@fval+2)^(0+128),w
  1799  0259  00A8               	movwf	(___fttol@f1+2)^(0+128)
  1800  025A  3188  206C  3180   	fcall	___fttol
  1801  025D  0021               	movlb	1	; select bank1
  1802  025E  0829               	movf	(?___fttol+3)^(0+128),w
  1803  025F  00D4               	movwf	(sprintf@val+3)^(0+128)
  1804  0260  0828               	movf	(?___fttol+2)^(0+128),w
  1805  0261  00D3               	movwf	(sprintf@val+2)^(0+128)
  1806  0262  0827               	movf	(?___fttol+1)^(0+128),w
  1807  0263  00D2               	movwf	(sprintf@val+1)^(0+128)
  1808  0264  0826               	movf	?___fttol^(0+128),w
  1809  0265  00D1               	movwf	sprintf@val^(0+128)
  1810                           
  1811                           ;doprnt.c: 1132: fval -= (double)val;
  1812  0266  0854               	movf	(sprintf@val+3)^(0+128),w
  1813  0267  0020               	movlb	0	; select bank0
  1814  0268  00BE               	movwf	___lltoft@c+3
  1815  0269  0021               	movlb	1	; select bank1
  1816  026A  0853               	movf	(sprintf@val+2)^(0+128),w
  1817  026B  0020               	movlb	0	; select bank0
  1818  026C  00BD               	movwf	___lltoft@c+2
  1819  026D  0021               	movlb	1	; select bank1
  1820  026E  0852               	movf	(sprintf@val+1)^(0+128),w
  1821  026F  0020               	movlb	0	; select bank0
  1822  0270  00BC               	movwf	___lltoft@c+1
  1823  0271  0021               	movlb	1	; select bank1
  1824  0272  0851               	movf	sprintf@val^(0+128),w
  1825  0273  0020               	movlb	0	; select bank0
  1826  0274  00BB               	movwf	___lltoft@c
  1827  0275  3195  256E  3180   	fcall	___lltoft
  1828  0278  0020               	movlb	0	; select bank0
  1829  0279  083B               	movf	?___lltoft,w
  1830  027A  0021               	movlb	1	; select bank1
  1831  027B  00B8               	movwf	___ftsub@f2^(0+128)
  1832  027C  0020               	movlb	0	; select bank0
  1833  027D  083C               	movf	?___lltoft+1,w
  1834  027E  0021               	movlb	1	; select bank1
  1835  027F  00B9               	movwf	(___ftsub@f2+1)^(0+128)
  1836  0280  0020               	movlb	0	; select bank0
  1837  0281  083D               	movf	?___lltoft+2,w
  1838  0282  0021               	movlb	1	; select bank1
  1839  0283  00BA               	movwf	(___ftsub@f2+2)^(0+128)
  1840  0284  085C               	movf	sprintf@fval^(0+128),w
  1841  0285  00BB               	movwf	___ftsub@f1^(0+128)
  1842  0286  085D               	movf	(sprintf@fval+1)^(0+128),w
  1843  0287  00BC               	movwf	(___ftsub@f1+1)^(0+128)
  1844  0288  085E               	movf	(sprintf@fval+2)^(0+128),w
  1845  0289  00BD               	movwf	(___ftsub@f1+2)^(0+128)
  1846  028A  3195  2530  3180   	fcall	___ftsub
  1847  028D  0021               	movlb	1	; select bank1
  1848  028E  0838               	movf	?___ftsub^(0+128),w
  1849  028F  00DC               	movwf	sprintf@fval^(0+128)
  1850  0290  0839               	movf	(?___ftsub+1)^(0+128),w
  1851  0291  00DD               	movwf	(sprintf@fval+1)^(0+128)
  1852  0292  083A               	movf	(?___ftsub+2)^(0+128),w
  1853  0293  00DE               	movwf	(sprintf@fval+2)^(0+128)
  1854                           
  1855                           ;doprnt.c: 1133: exp = 0;
  1856  0294  01D5               	clrf	sprintf@exp^(0+128)
  1857  0295  01D6               	clrf	(sprintf@exp+1)^(0+128)
  1858  0296                     l2469:	
  1859                           
  1860                           ;doprnt.c: 1134: }
  1861                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1862  0296  01DF               	clrf	sprintf@c^(0+128)
  1863  0297  0ADF               	incf	sprintf@c^(0+128),f
  1864  0298  300A               	movlw	10
  1865  0299  065F               	xorwf	sprintf@c^(0+128),w
  1866  029A  1903               	btfsc	3,2
  1867  029B  2AC9               	goto	l2481
  1868  029C                     l2475:	
  1869                           
  1870                           ;doprnt.c: 1137: if(val < dpowers[c])
  1871  029C  085F               	movf	sprintf@c^(0+128),w
  1872  029D  00C3               	movwf	??_sprintf^(0+128)
  1873  029E  01C4               	clrf	(??_sprintf^(0+128)+1)
  1874  029F  35C3               	lslf	??_sprintf^(0+128),f
  1875  02A0  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  1876  02A1  35C3               	lslf	??_sprintf^(0+128),f
  1877  02A2  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  1878  02A3  3000               	movlw	low (_dpowers| (0+32768))
  1879  02A4  0743               	addwf	??_sprintf^(0+128),w
  1880  02A5  0084               	movwf	4
  1881  02A6  3090               	movlw	high (_dpowers| (0+32768))
  1882  02A7  3D44               	addwfc	(??_sprintf+1)^(0+128),w
  1883  02A8  0085               	movwf	5
  1884  02A9  3F00               	moviw [0]fsr0
  1885  02AA  00C5               	movwf	(??_sprintf+2)^(0+128)
  1886  02AB  3F01               	moviw [1]fsr0
  1887  02AC  00C6               	movwf	((??_sprintf+2)^(0+128)+1)
  1888  02AD  3F02               	moviw [2]fsr0
  1889  02AE  00C7               	movwf	((??_sprintf+2)^(0+128)+2)
  1890  02AF  3F03               	moviw [3]fsr0
  1891  02B0  00C8               	movwf	((??_sprintf+2)^(0+128)+3)
  1892  02B1  0848               	movf	(??_sprintf+5)^(0+128),w
  1893  02B2  0254               	subwf	(sprintf@val+3)^(0+128),w
  1894  02B3  1D03               	skipz
  1895  02B4  2ABF               	goto	u3745
  1896  02B5  0847               	movf	(??_sprintf+4)^(0+128),w
  1897  02B6  0253               	subwf	(sprintf@val+2)^(0+128),w
  1898  02B7  1D03               	skipz
  1899  02B8  2ABF               	goto	u3745
  1900  02B9  0846               	movf	(??_sprintf+3)^(0+128),w
  1901  02BA  0252               	subwf	(sprintf@val+1)^(0+128),w
  1902  02BB  1D03               	skipz
  1903  02BC  2ABF               	goto	u3745
  1904  02BD  0845               	movf	(??_sprintf+2)^(0+128),w
  1905  02BE  0251               	subwf	sprintf@val^(0+128),w
  1906  02BF                     u3745:	
  1907  02BF  1C03               	btfss	3,0
  1908  02C0  2AC9               	goto	l2481
  1909                           
  1910                           ;doprnt.c: 1138: break;
  1911  02C1  3001               	movlw	1
  1912  02C2  00C3               	movwf	??_sprintf^(0+128)
  1913  02C3  0843               	movf	??_sprintf^(0+128),w
  1914  02C4  07DF               	addwf	sprintf@c^(0+128),f
  1915  02C5  300A               	movlw	10
  1916  02C6  065F               	xorwf	sprintf@c^(0+128),w
  1917  02C7  1D03               	btfss	3,2
  1918  02C8  2A9C               	goto	l2475
  1919  02C9                     l2481:	
  1920                           
  1921                           ;doprnt.c: 1175: {
  1922                           ;doprnt.c: 1188: if(flag & 0x03)
  1923  02C9  3003               	movlw	3
  1924  02CA  054D               	andwf	sprintf@flag^(0+128),w
  1925  02CB  00C3               	movwf	??_sprintf^(0+128)
  1926  02CC  3000               	movlw	0
  1927  02CD  054E               	andwf	(sprintf@flag+1)^(0+128),w
  1928  02CE  00C4               	movwf	(??_sprintf+1)^(0+128)
  1929  02CF  0843               	movf	??_sprintf^(0+128),w
  1930  02D0  0444               	iorwf	(??_sprintf^(0+128)+1),w
  1931  02D1  1903               	btfsc	3,2
  1932  02D2  2ADF               	goto	l2495
  1933                           
  1934                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1935  02D3  302D               	movlw	45
  1936  02D4                     L6:	
  1937  02D4  00C3               	movwf	??_sprintf^(0+128)
  1938  02D5  085B               	movf	sprintf@sp^(0+128),w
  1939  02D6  0086               	movwf	6
  1940  02D7  3001               	movlw	1	; select bank2/3
  1941  02D8  0087               	movwf	7
  1942  02D9  0843               	movf	??_sprintf^(0+128),w
  1943  02DA  0081               	movwf	1
  1944  02DB  3001               	movlw	1
  1945  02DC  00C3               	movwf	??_sprintf^(0+128)
  1946  02DD  0843               	movf	??_sprintf^(0+128),w
  1947  02DE  07DB               	addwf	sprintf@sp^(0+128),f
  1948  02DF                     l2495:	
  1949  02DF  30FF               	movlw	255
  1950  02E0  00C3               	movwf	??_sprintf^(0+128)
  1951  02E1  0843               	movf	??_sprintf^(0+128),w
  1952  02E2  07DF               	addwf	sprintf@c^(0+128),f
  1953  02E3  0A5F               	incf	sprintf@c^(0+128),w
  1954  02E4  1903               	btfsc	3,2
  1955  02E5  2B5F               	goto	l2503
  1956                           
  1957                           ;doprnt.c: 1200: {
  1958                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1959                           
  1960                           ;doprnt.c: 1195: }
  1961                           ;doprnt.c: 1196: while(c--) {
  1962  02E6  085F               	movf	sprintf@c^(0+128),w
  1963  02E7  00C3               	movwf	??_sprintf^(0+128)
  1964  02E8  01C4               	clrf	(??_sprintf^(0+128)+1)
  1965  02E9  35C3               	lslf	??_sprintf^(0+128),f
  1966  02EA  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  1967  02EB  35C3               	lslf	??_sprintf^(0+128),f
  1968  02EC  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  1969  02ED  3000               	movlw	low (_dpowers| (0+32768))
  1970  02EE  0743               	addwf	??_sprintf^(0+128),w
  1971  02EF  0084               	movwf	4
  1972  02F0  3090               	movlw	high (_dpowers| (0+32768))
  1973  02F1  3D44               	addwfc	(??_sprintf+1)^(0+128),w
  1974  02F2  0085               	movwf	5
  1975  02F3  3F00               	moviw [0]fsr0
  1976  02F4  0020               	movlb	0	; select bank0
  1977  02F5  00B3               	movwf	___lldiv@divisor
  1978  02F6  3F01               	moviw [1]fsr0
  1979  02F7  00B4               	movwf	___lldiv@divisor+1
  1980  02F8  3F02               	moviw [2]fsr0
  1981  02F9  00B5               	movwf	___lldiv@divisor+2
  1982  02FA  3F03               	moviw [3]fsr0
  1983  02FB  00B6               	movwf	___lldiv@divisor+3
  1984  02FC  0021               	movlb	1	; select bank1
  1985  02FD  0854               	movf	(sprintf@val+3)^(0+128),w
  1986  02FE  0020               	movlb	0	; select bank0
  1987  02FF  00BA               	movwf	___lldiv@dividend+3
  1988  0300  0021               	movlb	1	; select bank1
  1989  0301  0853               	movf	(sprintf@val+2)^(0+128),w
  1990  0302  0020               	movlb	0	; select bank0
  1991  0303  00B9               	movwf	___lldiv@dividend+2
  1992  0304  0021               	movlb	1	; select bank1
  1993  0305  0852               	movf	(sprintf@val+1)^(0+128),w
  1994  0306  0020               	movlb	0	; select bank0
  1995  0307  00B8               	movwf	___lldiv@dividend+1
  1996  0308  0021               	movlb	1	; select bank1
  1997  0309  0851               	movf	sprintf@val^(0+128),w
  1998  030A  0020               	movlb	0	; select bank0
  1999  030B  00B7               	movwf	___lldiv@dividend
  2000  030C  3196  26EA  3180   	fcall	___lldiv
  2001  030F  0020               	movlb	0	; select bank0
  2002  0310  0836               	movf	?___lldiv+3,w
  2003  0311  0021               	movlb	1	; select bank1
  2004  0312  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  2005  0313  0020               	movlb	0	; select bank0
  2006  0314  0835               	movf	?___lldiv+2,w
  2007  0315  0021               	movlb	1	; select bank1
  2008  0316  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  2009  0317  0020               	movlb	0	; select bank0
  2010  0318  0834               	movf	?___lldiv+1,w
  2011  0319  0021               	movlb	1	; select bank1
  2012  031A  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  2013  031B  0020               	movlb	0	; select bank0
  2014  031C  0833               	movf	?___lldiv,w
  2015  031D  0021               	movlb	1	; select bank1
  2016  031E  00D7               	movwf	sprintf@tmpval^(0+128)
  2017                           
  2018                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2019  031F  3000               	movlw	0
  2020  0320  0020               	movlb	0	; select bank0
  2021  0321  00B6               	movwf	___llmod@divisor+3
  2022  0322  3000               	movlw	0
  2023  0323  00B5               	movwf	___llmod@divisor+2
  2024  0324  3000               	movlw	0
  2025  0325  00B4               	movwf	___llmod@divisor+1
  2026  0326  300A               	movlw	10
  2027  0327  00B3               	movwf	___llmod@divisor
  2028  0328  0021               	movlb	1	; select bank1
  2029  0329  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  2030  032A  0020               	movlb	0	; select bank0
  2031  032B  00BA               	movwf	___llmod@dividend+3
  2032  032C  0021               	movlb	1	; select bank1
  2033  032D  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  2034  032E  0020               	movlb	0	; select bank0
  2035  032F  00B9               	movwf	___llmod@dividend+2
  2036  0330  0021               	movlb	1	; select bank1
  2037  0331  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  2038  0332  0020               	movlb	0	; select bank0
  2039  0333  00B8               	movwf	___llmod@dividend+1
  2040  0334  0021               	movlb	1	; select bank1
  2041  0335  0857               	movf	sprintf@tmpval^(0+128),w
  2042  0336  0020               	movlb	0	; select bank0
  2043  0337  00B7               	movwf	___llmod@dividend
  2044  0338  3196  260F  3180   	fcall	___llmod
  2045  033B  0020               	movlb	0	; select bank0
  2046  033C  0836               	movf	?___llmod+3,w
  2047  033D  0021               	movlb	1	; select bank1
  2048  033E  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  2049  033F  0020               	movlb	0	; select bank0
  2050  0340  0835               	movf	?___llmod+2,w
  2051  0341  0021               	movlb	1	; select bank1
  2052  0342  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  2053  0343  0020               	movlb	0	; select bank0
  2054  0344  0834               	movf	?___llmod+1,w
  2055  0345  0021               	movlb	1	; select bank1
  2056  0346  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  2057  0347  0020               	movlb	0	; select bank0
  2058  0348  0833               	movf	?___llmod,w
  2059  0349  0021               	movlb	1	; select bank1
  2060  034A  00D7               	movwf	sprintf@tmpval^(0+128)
  2061                           
  2062                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2063  034B  0857               	movf	sprintf@tmpval^(0+128),w
  2064  034C  3E30               	addlw	48
  2065  034D  2AD4               	goto	L6
  2066  034E                     l2497:	
  2067                           ;doprnt.c: 1204: }
  2068                           ;doprnt.c: 1206: }
  2069                           ;doprnt.c: 1207: while(exp > 0) {
  2070                           
  2071                           
  2072                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2073  034E  3030               	movlw	48
  2074  034F  0021               	movlb	1	; select bank1
  2075  0350  00C3               	movwf	??_sprintf^(0+128)
  2076  0351  085B               	movf	sprintf@sp^(0+128),w
  2077  0352  0086               	movwf	6
  2078  0353  3001               	movlw	1	; select bank2/3
  2079  0354  0087               	movwf	7
  2080  0355  0843               	movf	??_sprintf^(0+128),w
  2081  0356  0081               	movwf	1
  2082  0357  3001               	movlw	1
  2083  0358  00C3               	movwf	??_sprintf^(0+128)
  2084  0359  0843               	movf	??_sprintf^(0+128),w
  2085  035A  07DB               	addwf	sprintf@sp^(0+128),f
  2086                           
  2087                           ;doprnt.c: 1209: exp--;
  2088  035B  30FF               	movlw	255
  2089  035C  07D5               	addwf	sprintf@exp^(0+128),f
  2090  035D  30FF               	movlw	255
  2091  035E  3DD6               	addwfc	(sprintf@exp+1)^(0+128),f
  2092  035F                     l2503:	
  2093  035F  0856               	movf	(sprintf@exp+1)^(0+128),w
  2094  0360  3A80               	xorlw	128
  2095  0361  00C3               	movwf	??_sprintf^(0+128)
  2096  0362  3080               	movlw	128
  2097  0363  0243               	subwf	??_sprintf^(0+128),w
  2098  0364  1D03               	skipz
  2099  0365  2B68               	goto	u3785
  2100  0366  3001               	movlw	1
  2101  0367  0255               	subwf	sprintf@exp^(0+128),w
  2102  0368                     u3785:	
  2103  0368  1803               	skipnc
  2104  0369  2B4E               	goto	l2497
  2105                           
  2106                           ;doprnt.c: 1210: }
  2107                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2108  036A  0021               	movlb	1	; select bank1
  2109  036B  0850               	movf	(sprintf@prec+1)^(0+128),w
  2110  036C  3A80               	xorlw	128
  2111  036D  00C3               	movwf	??_sprintf^(0+128)
  2112  036E  3080               	movlw	128
  2113  036F  0243               	subwf	??_sprintf^(0+128),w
  2114  0370  1D03               	skipz
  2115  0371  2B74               	goto	u3795
  2116  0372  3009               	movlw	9
  2117  0373  024F               	subwf	sprintf@prec^(0+128),w
  2118  0374                     u3795:	
  2119  0374  1C03               	skipc
  2120  0375  2B79               	goto	l2509
  2121                           
  2122                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2123  0376  3008               	movlw	8
  2124  0377  0021               	movlb	1	; select bank1
  2125  0378  2B7B               	goto	L3
  2126  0379                     l2509:	
  2127                           
  2128                           ;doprnt.c: 1213: else
  2129                           ;doprnt.c: 1214: c = prec;
  2130  0379  0021               	movlb	1	; select bank1
  2131  037A  084F               	movf	sprintf@prec^(0+128),w
  2132  037B                     L3:	
  2133  037B  00C3               	movwf	??_sprintf^(0+128)
  2134  037C  0843               	movf	??_sprintf^(0+128),w
  2135  037D  00DF               	movwf	sprintf@c^(0+128)
  2136                           
  2137                           ;doprnt.c: 1215: prec -= c;
  2138  037E  085F               	movf	sprintf@c^(0+128),w
  2139  037F  00C3               	movwf	??_sprintf^(0+128)
  2140  0380  01C4               	clrf	(??_sprintf^(0+128)+1)
  2141  0381  1BC3               	btfsc	??_sprintf^(0+128),7
  2142  0382  03C4               	decf	(??_sprintf^(0+128)+1),f
  2143  0383  0843               	movf	??_sprintf^(0+128),w
  2144  0384  02CF               	subwf	sprintf@prec^(0+128),f
  2145  0385  0844               	movf	(??_sprintf+1)^(0+128),w
  2146  0386  3BD0               	subwfb	(sprintf@prec+1)^(0+128),f
  2147                           
  2148                           ;doprnt.c: 1219: if(c)
  2149  0387  085F               	movf	sprintf@c^(0+128),w
  2150  0388  1903               	btfsc	3,2
  2151  0389  2B96               	goto	l2517
  2152                           
  2153                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2154  038A  302E               	movlw	46
  2155  038B  00C3               	movwf	??_sprintf^(0+128)
  2156  038C  085B               	movf	sprintf@sp^(0+128),w
  2157  038D  0086               	movwf	6
  2158  038E  3001               	movlw	1	; select bank2/3
  2159  038F  0087               	movwf	7
  2160  0390  0843               	movf	??_sprintf^(0+128),w
  2161  0391  0081               	movwf	1
  2162  0392  3001               	movlw	1
  2163  0393  00C3               	movwf	??_sprintf^(0+128)
  2164  0394  0843               	movf	??_sprintf^(0+128),w
  2165  0395  07DB               	addwf	sprintf@sp^(0+128),f
  2166  0396                     l2517:	
  2167                           
  2168                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2169  0396  085F               	movf	sprintf@c^(0+128),w
  2170  0397  3184  24BC  3180   	fcall	_scale
  2171  039A  0020               	movlb	0	; select bank0
  2172  039B  0859               	movf	?_scale,w
  2173  039C  0021               	movlb	1	; select bank1
  2174  039D  00C9               	movwf	_sprintf$797^(0+128)
  2175  039E  0020               	movlb	0	; select bank0
  2176  039F  085A               	movf	?_scale+1,w
  2177  03A0  0021               	movlb	1	; select bank1
  2178  03A1  00CA               	movwf	(_sprintf$797+1)^(0+128)
  2179  03A2  0020               	movlb	0	; select bank0
  2180  03A3  085B               	movf	?_scale+2,w
  2181  03A4  0021               	movlb	1	; select bank1
  2182  03A5  00CB               	movwf	(_sprintf$797+2)^(0+128)
  2183                           
  2184                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2185  03A6  0849               	movf	_sprintf$797^(0+128),w
  2186  03A7  0020               	movlb	0	; select bank0
  2187  03A8  00CC               	movwf	___ftmul@f2
  2188  03A9  0021               	movlb	1	; select bank1
  2189  03AA  084A               	movf	(_sprintf$797+1)^(0+128),w
  2190  03AB  0020               	movlb	0	; select bank0
  2191  03AC  00CD               	movwf	___ftmul@f2+1
  2192  03AD  0021               	movlb	1	; select bank1
  2193  03AE  084B               	movf	(_sprintf$797+2)^(0+128),w
  2194  03AF  0020               	movlb	0	; select bank0
  2195  03B0  00CE               	movwf	___ftmul@f2+2
  2196  03B1  0021               	movlb	1	; select bank1
  2197  03B2  085C               	movf	sprintf@fval^(0+128),w
  2198  03B3  0020               	movlb	0	; select bank0
  2199  03B4  00C9               	movwf	___ftmul@f1
  2200  03B5  0021               	movlb	1	; select bank1
  2201  03B6  085D               	movf	(sprintf@fval+1)^(0+128),w
  2202  03B7  0020               	movlb	0	; select bank0
  2203  03B8  00CA               	movwf	___ftmul@f1+1
  2204  03B9  0021               	movlb	1	; select bank1
  2205  03BA  085E               	movf	(sprintf@fval+2)^(0+128),w
  2206  03BB  0020               	movlb	0	; select bank0
  2207  03BC  00CB               	movwf	___ftmul@f1+2
  2208  03BD  318B  2389  3180   	fcall	___ftmul
  2209  03C0  0020               	movlb	0	; select bank0
  2210  03C1  0849               	movf	?___ftmul,w
  2211  03C2  0021               	movlb	1	; select bank1
  2212  03C3  00A6               	movwf	___fttol@f1^(0+128)
  2213  03C4  0020               	movlb	0	; select bank0
  2214  03C5  084A               	movf	?___ftmul+1,w
  2215  03C6  0021               	movlb	1	; select bank1
  2216  03C7  00A7               	movwf	(___fttol@f1+1)^(0+128)
  2217  03C8  0020               	movlb	0	; select bank0
  2218  03C9  084B               	movf	?___ftmul+2,w
  2219  03CA  0021               	movlb	1	; select bank1
  2220  03CB  00A8               	movwf	(___fttol@f1+2)^(0+128)
  2221  03CC  3188  206C  3180   	fcall	___fttol
  2222  03CF  0021               	movlb	1	; select bank1
  2223  03D0  0829               	movf	(?___fttol+3)^(0+128),w
  2224  03D1  00D4               	movwf	(sprintf@val+3)^(0+128)
  2225  03D2  0828               	movf	(?___fttol+2)^(0+128),w
  2226  03D3  00D3               	movwf	(sprintf@val+2)^(0+128)
  2227  03D4  0827               	movf	(?___fttol+1)^(0+128),w
  2228  03D5  00D2               	movwf	(sprintf@val+1)^(0+128)
  2229  03D6  0826               	movf	?___fttol^(0+128),w
  2230  03D7                     L4:	
  2231  03D7  00D1               	movwf	sprintf@val^(0+128)
  2232  03D8  30FF               	movlw	255
  2233  03D9  00C3               	movwf	??_sprintf^(0+128)
  2234  03DA  0843               	movf	??_sprintf^(0+128),w
  2235  03DB  07DF               	addwf	sprintf@c^(0+128),f
  2236  03DC  0A5F               	incf	sprintf@c^(0+128),w
  2237  03DD  1903               	btfsc	3,2
  2238  03DE  2C9A               	goto	l2539
  2239                           
  2240                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2241                           
  2242                           ;doprnt.c: 1228: while(c--) {
  2243  03DF  085F               	movf	sprintf@c^(0+128),w
  2244  03E0  00C3               	movwf	??_sprintf^(0+128)
  2245  03E1  01C4               	clrf	(??_sprintf^(0+128)+1)
  2246  03E2  35C3               	lslf	??_sprintf^(0+128),f
  2247  03E3  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  2248  03E4  35C3               	lslf	??_sprintf^(0+128),f
  2249  03E5  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  2250  03E6  3000               	movlw	low (_dpowers| (0+32768))
  2251  03E7  0743               	addwf	??_sprintf^(0+128),w
  2252  03E8  0084               	movwf	4
  2253  03E9  3090               	movlw	high (_dpowers| (0+32768))
  2254  03EA  3D44               	addwfc	(??_sprintf+1)^(0+128),w
  2255  03EB  0085               	movwf	5
  2256  03EC  3F00               	moviw [0]fsr0
  2257  03ED  0020               	movlb	0	; select bank0
  2258  03EE  00B3               	movwf	___lldiv@divisor
  2259  03EF  3F01               	moviw [1]fsr0
  2260  03F0  00B4               	movwf	___lldiv@divisor+1
  2261  03F1  3F02               	moviw [2]fsr0
  2262  03F2  00B5               	movwf	___lldiv@divisor+2
  2263  03F3  3F03               	moviw [3]fsr0
  2264  03F4  00B6               	movwf	___lldiv@divisor+3
  2265  03F5  0021               	movlb	1	; select bank1
  2266  03F6  0854               	movf	(sprintf@val+3)^(0+128),w
  2267  03F7  0020               	movlb	0	; select bank0
  2268  03F8  00BA               	movwf	___lldiv@dividend+3
  2269  03F9  0021               	movlb	1	; select bank1
  2270  03FA  0853               	movf	(sprintf@val+2)^(0+128),w
  2271  03FB  0020               	movlb	0	; select bank0
  2272  03FC  00B9               	movwf	___lldiv@dividend+2
  2273  03FD  0021               	movlb	1	; select bank1
  2274  03FE  0852               	movf	(sprintf@val+1)^(0+128),w
  2275  03FF  0020               	movlb	0	; select bank0
  2276  0400  00B8               	movwf	___lldiv@dividend+1
  2277  0401  0021               	movlb	1	; select bank1
  2278  0402  0851               	movf	sprintf@val^(0+128),w
  2279  0403  0020               	movlb	0	; select bank0
  2280  0404  00B7               	movwf	___lldiv@dividend
  2281  0405  3196  26EA  3180   	fcall	___lldiv
  2282  0408  0020               	movlb	0	; select bank0
  2283  0409  0836               	movf	?___lldiv+3,w
  2284  040A  0021               	movlb	1	; select bank1
  2285  040B  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  2286  040C  0020               	movlb	0	; select bank0
  2287  040D  0835               	movf	?___lldiv+2,w
  2288  040E  0021               	movlb	1	; select bank1
  2289  040F  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  2290  0410  0020               	movlb	0	; select bank0
  2291  0411  0834               	movf	?___lldiv+1,w
  2292  0412  0021               	movlb	1	; select bank1
  2293  0413  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  2294  0414  0020               	movlb	0	; select bank0
  2295  0415  0833               	movf	?___lldiv,w
  2296  0416  0021               	movlb	1	; select bank1
  2297  0417  00D7               	movwf	sprintf@tmpval^(0+128)
  2298                           
  2299                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2300  0418  3000               	movlw	0
  2301  0419  0020               	movlb	0	; select bank0
  2302  041A  00B6               	movwf	___llmod@divisor+3
  2303  041B  3000               	movlw	0
  2304  041C  00B5               	movwf	___llmod@divisor+2
  2305  041D  3000               	movlw	0
  2306  041E  00B4               	movwf	___llmod@divisor+1
  2307  041F  300A               	movlw	10
  2308  0420  00B3               	movwf	___llmod@divisor
  2309  0421  0021               	movlb	1	; select bank1
  2310  0422  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  2311  0423  0020               	movlb	0	; select bank0
  2312  0424  00BA               	movwf	___llmod@dividend+3
  2313  0425  0021               	movlb	1	; select bank1
  2314  0426  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  2315  0427  0020               	movlb	0	; select bank0
  2316  0428  00B9               	movwf	___llmod@dividend+2
  2317  0429  0021               	movlb	1	; select bank1
  2318  042A  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  2319  042B  0020               	movlb	0	; select bank0
  2320  042C  00B8               	movwf	___llmod@dividend+1
  2321  042D  0021               	movlb	1	; select bank1
  2322  042E  0857               	movf	sprintf@tmpval^(0+128),w
  2323  042F  0020               	movlb	0	; select bank0
  2324  0430  00B7               	movwf	___llmod@dividend
  2325  0431  3196  260F  3180   	fcall	___llmod
  2326  0434  0020               	movlb	0	; select bank0
  2327  0435  0836               	movf	?___llmod+3,w
  2328  0436  0021               	movlb	1	; select bank1
  2329  0437  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  2330  0438  0020               	movlb	0	; select bank0
  2331  0439  0835               	movf	?___llmod+2,w
  2332  043A  0021               	movlb	1	; select bank1
  2333  043B  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  2334  043C  0020               	movlb	0	; select bank0
  2335  043D  0834               	movf	?___llmod+1,w
  2336  043E  0021               	movlb	1	; select bank1
  2337  043F  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  2338  0440  0020               	movlb	0	; select bank0
  2339  0441  0833               	movf	?___llmod,w
  2340  0442  0021               	movlb	1	; select bank1
  2341  0443  00D7               	movwf	sprintf@tmpval^(0+128)
  2342                           
  2343                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2344  0444  0857               	movf	sprintf@tmpval^(0+128),w
  2345  0445  3E30               	addlw	48
  2346  0446  00C3               	movwf	??_sprintf^(0+128)
  2347  0447  085B               	movf	sprintf@sp^(0+128),w
  2348  0448  0086               	movwf	6
  2349  0449  3001               	movlw	1	; select bank2/3
  2350  044A  0087               	movwf	7
  2351  044B  0843               	movf	??_sprintf^(0+128),w
  2352  044C  0081               	movwf	1
  2353  044D  3001               	movlw	1
  2354  044E  00C3               	movwf	??_sprintf^(0+128)
  2355  044F  0843               	movf	??_sprintf^(0+128),w
  2356  0450  07DB               	addwf	sprintf@sp^(0+128),f
  2357                           
  2358                           ;doprnt.c: 1232: val %= dpowers[c];
  2359  0451  085F               	movf	sprintf@c^(0+128),w
  2360  0452  00C3               	movwf	??_sprintf^(0+128)
  2361  0453  01C4               	clrf	(??_sprintf^(0+128)+1)
  2362  0454  35C3               	lslf	??_sprintf^(0+128),f
  2363  0455  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  2364  0456  35C3               	lslf	??_sprintf^(0+128),f
  2365  0457  0DC4               	rlf	(??_sprintf^(0+128)+1),f
  2366  0458  3000               	movlw	low (_dpowers| (0+32768))
  2367  0459  0743               	addwf	??_sprintf^(0+128),w
  2368  045A  0084               	movwf	4
  2369  045B  3090               	movlw	high (_dpowers| (0+32768))
  2370  045C  3D44               	addwfc	(??_sprintf+1)^(0+128),w
  2371  045D  0085               	movwf	5
  2372  045E  3F00               	moviw [0]fsr0
  2373  045F  0020               	movlb	0	; select bank0
  2374  0460  00B3               	movwf	___llmod@divisor
  2375  0461  3F01               	moviw [1]fsr0
  2376  0462  00B4               	movwf	___llmod@divisor+1
  2377  0463  3F02               	moviw [2]fsr0
  2378  0464  00B5               	movwf	___llmod@divisor+2
  2379  0465  3F03               	moviw [3]fsr0
  2380  0466  00B6               	movwf	___llmod@divisor+3
  2381  0467  0021               	movlb	1	; select bank1
  2382  0468  0854               	movf	(sprintf@val+3)^(0+128),w
  2383  0469  0020               	movlb	0	; select bank0
  2384  046A  00BA               	movwf	___llmod@dividend+3
  2385  046B  0021               	movlb	1	; select bank1
  2386  046C  0853               	movf	(sprintf@val+2)^(0+128),w
  2387  046D  0020               	movlb	0	; select bank0
  2388  046E  00B9               	movwf	___llmod@dividend+2
  2389  046F  0021               	movlb	1	; select bank1
  2390  0470  0852               	movf	(sprintf@val+1)^(0+128),w
  2391  0471  0020               	movlb	0	; select bank0
  2392  0472  00B8               	movwf	___llmod@dividend+1
  2393  0473  0021               	movlb	1	; select bank1
  2394  0474  0851               	movf	sprintf@val^(0+128),w
  2395  0475  0020               	movlb	0	; select bank0
  2396  0476  00B7               	movwf	___llmod@dividend
  2397  0477  3196  260F  3180   	fcall	___llmod
  2398  047A  0020               	movlb	0	; select bank0
  2399  047B  0836               	movf	?___llmod+3,w
  2400  047C  0021               	movlb	1	; select bank1
  2401  047D  00D4               	movwf	(sprintf@val+3)^(0+128)
  2402  047E  0020               	movlb	0	; select bank0
  2403  047F  0835               	movf	?___llmod+2,w
  2404  0480  0021               	movlb	1	; select bank1
  2405  0481  00D3               	movwf	(sprintf@val+2)^(0+128)
  2406  0482  0020               	movlb	0	; select bank0
  2407  0483  0834               	movf	?___llmod+1,w
  2408  0484  0021               	movlb	1	; select bank1
  2409  0485  00D2               	movwf	(sprintf@val+1)^(0+128)
  2410  0486  0020               	movlb	0	; select bank0
  2411  0487  0833               	movf	?___llmod,w
  2412  0488  0021               	movlb	1	; select bank1
  2413  0489  2BD7               	goto	L4
  2414  048A                     l2533:	
  2415                           ;doprnt.c: 1233: }
  2416                           ;doprnt.c: 1235: while(prec) {
  2417                           
  2418                           
  2419                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2420  048A  3030               	movlw	48
  2421  048B  00C3               	movwf	??_sprintf^(0+128)
  2422  048C  085B               	movf	sprintf@sp^(0+128),w
  2423  048D  0086               	movwf	6
  2424  048E  3001               	movlw	1	; select bank2/3
  2425  048F  0087               	movwf	7
  2426  0490  0843               	movf	??_sprintf^(0+128),w
  2427  0491  0081               	movwf	1
  2428  0492  3001               	movlw	1
  2429  0493  00C3               	movwf	??_sprintf^(0+128)
  2430  0494  0843               	movf	??_sprintf^(0+128),w
  2431  0495  07DB               	addwf	sprintf@sp^(0+128),f
  2432                           
  2433                           ;doprnt.c: 1237: prec--;
  2434  0496  30FF               	movlw	255
  2435  0497  07CF               	addwf	sprintf@prec^(0+128),f
  2436  0498  30FF               	movlw	255
  2437  0499  3DD0               	addwfc	(sprintf@prec+1)^(0+128),f
  2438  049A                     l2539:	
  2439  049A  084F               	movf	sprintf@prec^(0+128),w
  2440  049B  0450               	iorwf	(sprintf@prec+1)^(0+128),w
  2441  049C  1903               	btfsc	3,2
  2442  049D  284B               	goto	l2547
  2443  049E  2C8A               	goto	l2533
  2444  049F                     l2541:	
  2445                           ;doprnt.c: 1238: }
  2446                           ;doprnt.c: 1245: continue;
  2447                           
  2448                           
  2449                           ;doprnt.c: 1246: }
  2450                           ;doprnt.c: 1422: {
  2451                           ;doprnt.c: 1438: if(flag & 0x03)
  2452  049F  3003               	movlw	3
  2453  04A0  054D               	andwf	sprintf@flag^(0+128),w
  2454  04A1  00C3               	movwf	??_sprintf^(0+128)
  2455  04A2  3000               	movlw	0
  2456  04A3  054E               	andwf	(sprintf@flag+1)^(0+128),w
  2457  04A4  00C4               	movwf	(??_sprintf+1)^(0+128)
  2458  04A5  0843               	movf	??_sprintf^(0+128),w
  2459  04A6  0444               	iorwf	(??_sprintf^(0+128)+1),w
  2460  04A7  1903               	btfsc	3,2
  2461  04A8  284B               	goto	l2547
  2462                           
  2463                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2464  04A9  302D               	movlw	45
  2465  04AA                     L5:	
  2466  04AA  00C3               	movwf	??_sprintf^(0+128)
  2467  04AB  085B               	movf	sprintf@sp^(0+128),w
  2468  04AC  0086               	movwf	6
  2469  04AD  3001               	movlw	1	; select bank2/3
  2470  04AE  0087               	movwf	7
  2471  04AF  0843               	movf	??_sprintf^(0+128),w
  2472  04B0  0081               	movwf	1
  2473  04B1  3001               	movlw	1
  2474  04B2  00C3               	movwf	??_sprintf^(0+128)
  2475  04B3  0843               	movf	??_sprintf^(0+128),w
  2476  04B4  07DB               	addwf	sprintf@sp^(0+128),f
  2477  04B5  284B               	goto	l2547
  2478  04B6                     l2549:	
  2479                           ;doprnt.c: 1469: }
  2480                           ;doprnt.c: 1533: }
  2481                           ;doprnt.c: 1535: alldone:
  2482                           
  2483                           
  2484                           ;doprnt.c: 1538: *sp = 0;
  2485  04B6  085B               	movf	sprintf@sp^(0+128),w
  2486  04B7  0086               	movwf	6
  2487  04B8  3001               	movlw	1	; select bank2/3
  2488  04B9  0087               	movwf	7
  2489  04BA  0181               	clrf	1
  2490  04BB  0008               	return
  2491  04BC                     __end_of_sprintf:	
  2492                           ;doprnt.c: 1540: return 0;
  2493                           ;	Return value of _sprintf is never used
  2494                           
  2495                           
  2496                           	psect	text2
  2497  04BC                     __ptext2:	
  2498 ;; *************** function _scale *****************
  2499 ;; Defined at:
  2500 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  scl             1    wreg     char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  scl             1    5[BANK1 ] char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  3   57[BANK0 ] char 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;Total ram usage:        9 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    5
  2521 ;; This function calls:
  2522 ;;		___awdiv
  2523 ;;		___awmod
  2524 ;;		___ftmul
  2525 ;;		___wmul
  2526 ;; This function is called by:
  2527 ;;		_sprintf
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function _scale
  2533  04BC                     _scale:	
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2537                           ;scale@scl stored from wreg
  2538  04BC  0021               	movlb	1	; select bank1
  2539  04BD  00A5               	movwf	scale@scl^(0+128)
  2540                           
  2541                           ;doprnt.c: 428: if(scl < 0) {
  2542  04BE  1FA5               	btfss	scale@scl^(0+128),7
  2543  04BF  2DFB               	goto	l2025
  2544                           
  2545                           ;doprnt.c: 429: scl = -scl;
  2546  04C0  09A5               	comf	scale@scl^(0+128),f
  2547  04C1  0AA5               	incf	scale@scl^(0+128),f
  2548                           
  2549                           ;doprnt.c: 430: if(scl>=110)
  2550  04C2  0825               	movf	scale@scl^(0+128),w
  2551  04C3  3A80               	xorlw	128
  2552  04C4  3E12               	addlw	-238
  2553  04C5  1C03               	skipc
  2554  04C6  2D77               	goto	l2015
  2555                           
  2556                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2557  04C7  300A               	movlw	10
  2558  04C8  0020               	movlb	0	; select bank0
  2559  04C9  00BA               	movwf	___awdiv@divisor
  2560  04CA  3000               	movlw	0
  2561  04CB  00BB               	movwf	___awdiv@divisor+1
  2562  04CC  0021               	movlb	1	; select bank1
  2563  04CD  0825               	movf	scale@scl^(0+128),w
  2564  04CE  0020               	movlb	0	; select bank0
  2565  04CF  00B5               	movwf	___awmod@dividend
  2566  04D0  01B6               	clrf	___awmod@dividend+1
  2567  04D1  1BB5               	btfsc	___awmod@dividend,7
  2568  04D2  03B6               	decf	___awmod@dividend+1,f
  2569  04D3  3064               	movlw	100
  2570  04D4  00B3               	movwf	___awmod@divisor
  2571  04D5  3000               	movlw	0
  2572  04D6  00B4               	movwf	___awmod@divisor+1
  2573  04D7  3196  2652  3184   	fcall	___awmod
  2574  04DA  0020               	movlb	0	; select bank0
  2575  04DB  0834               	movf	?___awmod+1,w
  2576  04DC  00BD               	movwf	___awdiv@dividend+1
  2577  04DD  0833               	movf	?___awmod,w
  2578  04DE  00BC               	movwf	___awdiv@dividend
  2579  04DF  3196  2698  3184   	fcall	___awdiv
  2580  04E2  0020               	movlb	0	; select bank0
  2581  04E3  083A               	movf	?___awdiv,w
  2582  04E4  3E09               	addlw	9
  2583  04E5  00C3               	movwf	___wmul@multiplier
  2584  04E6  3000               	movlw	0
  2585  04E7  3D3B               	addwfc	?___awdiv+1,w
  2586  04E8  00C4               	movwf	___wmul@multiplier+1
  2587  04E9  3003               	movlw	3
  2588  04EA  00C5               	movwf	___wmul@multiplicand
  2589  04EB  3000               	movlw	0
  2590  04EC  00C6               	movwf	___wmul@multiplicand+1
  2591  04ED  3195  2514  3184   	fcall	___wmul
  2592  04F0  0020               	movlb	0	; select bank0
  2593  04F1  0844               	movf	?___wmul+1,w
  2594  04F2  0085               	movwf	5
  2595  04F3  0843               	movf	?___wmul,w
  2596  04F4  0084               	movwf	4
  2597  04F5  3028               	movlw	low (__npowers_| (0+32768))
  2598  04F6  0784               	addwf	4,f
  2599  04F7  3090               	movlw	high (__npowers_| (0+32768))
  2600  04F8  3D85               	addwfc	5,f
  2601  04F9  3F00               	moviw [0]fsr0
  2602  04FA  00C9               	movwf	___ftmul@f1
  2603  04FB  3F01               	moviw [1]fsr0
  2604  04FC  00CA               	movwf	___ftmul@f1+1
  2605  04FD  3F02               	moviw [2]fsr0
  2606  04FE  00CB               	movwf	___ftmul@f1+2
  2607  04FF  3064               	movlw	100
  2608  0500  00BA               	movwf	___awdiv@divisor
  2609  0501  3000               	movlw	0
  2610  0502  00BB               	movwf	___awdiv@divisor+1
  2611  0503  0021               	movlb	1	; select bank1
  2612  0504  0825               	movf	scale@scl^(0+128),w
  2613  0505  0020               	movlb	0	; select bank0
  2614  0506  00BC               	movwf	___awdiv@dividend
  2615  0507  01BD               	clrf	___awdiv@dividend+1
  2616  0508  1BBC               	btfsc	___awdiv@dividend,7
  2617  0509  03BD               	decf	___awdiv@dividend+1,f
  2618  050A  3196  2698  3184   	fcall	___awdiv
  2619  050D  0020               	movlb	0	; select bank0
  2620  050E  083A               	movf	?___awdiv,w
  2621  050F  3E12               	addlw	18
  2622  0510  00C3               	movwf	___wmul@multiplier
  2623  0511  3000               	movlw	0
  2624  0512  3D3B               	addwfc	?___awdiv+1,w
  2625  0513  00C4               	movwf	___wmul@multiplier+1
  2626  0514  3003               	movlw	3
  2627  0515  00C5               	movwf	___wmul@multiplicand
  2628  0516  3000               	movlw	0
  2629  0517  00C6               	movwf	___wmul@multiplicand+1
  2630  0518  3195  2514  3184   	fcall	___wmul
  2631  051B  0020               	movlb	0	; select bank0
  2632  051C  0844               	movf	?___wmul+1,w
  2633  051D  0085               	movwf	5
  2634  051E  0843               	movf	?___wmul,w
  2635  051F  0084               	movwf	4
  2636  0520  3028               	movlw	low (__npowers_| (0+32768))
  2637  0521  0784               	addwf	4,f
  2638  0522  3090               	movlw	high (__npowers_| (0+32768))
  2639  0523  3D85               	addwfc	5,f
  2640  0524  3F00               	moviw [0]fsr0
  2641  0525  00CC               	movwf	___ftmul@f2
  2642  0526  3F01               	moviw [1]fsr0
  2643  0527  00CD               	movwf	___ftmul@f2+1
  2644  0528  3F02               	moviw [2]fsr0
  2645  0529  00CE               	movwf	___ftmul@f2+2
  2646  052A  318B  2389  3184   	fcall	___ftmul
  2647  052D  0020               	movlb	0	; select bank0
  2648  052E  0849               	movf	?___ftmul,w
  2649  052F  0021               	movlb	1	; select bank1
  2650  0530  00A2               	movwf	_scale$796^(0+128)
  2651  0531  0020               	movlb	0	; select bank0
  2652  0532  084A               	movf	?___ftmul+1,w
  2653  0533  0021               	movlb	1	; select bank1
  2654  0534  00A3               	movwf	(_scale$796+1)^(0+128)
  2655  0535  0020               	movlb	0	; select bank0
  2656  0536  084B               	movf	?___ftmul+2,w
  2657  0537  0021               	movlb	1	; select bank1
  2658  0538  00A4               	movwf	(_scale$796+2)^(0+128)
  2659                           
  2660                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2661  0539  0825               	movf	scale@scl^(0+128),w
  2662  053A  0020               	movlb	0	; select bank0
  2663  053B  00B5               	movwf	___awmod@dividend
  2664  053C  01B6               	clrf	___awmod@dividend+1
  2665  053D  1BB5               	btfsc	___awmod@dividend,7
  2666  053E  03B6               	decf	___awmod@dividend+1,f
  2667  053F  300A               	movlw	10
  2668  0540  00B3               	movwf	___awmod@divisor
  2669  0541  3000               	movlw	0
  2670  0542  00B4               	movwf	___awmod@divisor+1
  2671  0543  3196  2652  3184   	fcall	___awmod
  2672  0546  0020               	movlb	0	; select bank0
  2673  0547  0834               	movf	?___awmod+1,w
  2674  0548  00C4               	movwf	___wmul@multiplier+1
  2675  0549  0833               	movf	?___awmod,w
  2676  054A  00C3               	movwf	___wmul@multiplier
  2677  054B  3003               	movlw	3
  2678  054C  00C5               	movwf	___wmul@multiplicand
  2679  054D  3000               	movlw	0
  2680  054E  00C6               	movwf	___wmul@multiplicand+1
  2681  054F  3195  2514  3184   	fcall	___wmul
  2682  0552  0020               	movlb	0	; select bank0
  2683  0553  0844               	movf	?___wmul+1,w
  2684  0554  0085               	movwf	5
  2685  0555  0843               	movf	?___wmul,w
  2686  0556  0084               	movwf	4
  2687  0557  3028               	movlw	low (__npowers_| (0+32768))
  2688  0558  0784               	addwf	4,f
  2689  0559  3090               	movlw	high (__npowers_| (0+32768))
  2690  055A  3D85               	addwfc	5,f
  2691  055B  3F00               	moviw [0]fsr0
  2692  055C  00C9               	movwf	___ftmul@f1
  2693  055D  3F01               	moviw [1]fsr0
  2694  055E  00CA               	movwf	___ftmul@f1+1
  2695  055F  3F02               	moviw [2]fsr0
  2696  0560  00CB               	movwf	___ftmul@f1+2
  2697  0561  0021               	movlb	1	; select bank1
  2698  0562  0822               	movf	_scale$796^(0+128),w
  2699  0563  0020               	movlb	0	; select bank0
  2700  0564  00CC               	movwf	___ftmul@f2
  2701  0565  0021               	movlb	1	; select bank1
  2702  0566  0823               	movf	(_scale$796+1)^(0+128),w
  2703  0567  0020               	movlb	0	; select bank0
  2704  0568  00CD               	movwf	___ftmul@f2+1
  2705  0569  0021               	movlb	1	; select bank1
  2706  056A  0824               	movf	(_scale$796+2)^(0+128),w
  2707  056B  0020               	movlb	0	; select bank0
  2708  056C  00CE               	movwf	___ftmul@f2+2
  2709  056D  318B  2389         	fcall	___ftmul
  2710  056F  0020               	movlb	0	; select bank0
  2711  0570  0849               	movf	?___ftmul,w
  2712  0571  00D9               	movwf	?_scale
  2713  0572  084A               	movf	?___ftmul+1,w
  2714  0573  00DA               	movwf	?_scale+1
  2715  0574  084B               	movf	?___ftmul+2,w
  2716  0575  00DB               	movwf	?_scale+2
  2717  0576  0008               	return
  2718  0577                     l2015:	
  2719                           
  2720                           ;doprnt.c: 432: else if(scl > 10)
  2721  0577  0021               	movlb	1	; select bank1
  2722  0578  0825               	movf	scale@scl^(0+128),w
  2723  0579  3A80               	xorlw	128
  2724  057A  3E75               	addlw	-139
  2725  057B  1C03               	skipc
  2726  057C  2DDA               	goto	l2021
  2727                           
  2728                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2729  057D  0825               	movf	scale@scl^(0+128),w
  2730  057E  0020               	movlb	0	; select bank0
  2731  057F  00B5               	movwf	___awmod@dividend
  2732  0580  01B6               	clrf	___awmod@dividend+1
  2733  0581  1BB5               	btfsc	___awmod@dividend,7
  2734  0582  03B6               	decf	___awmod@dividend+1,f
  2735  0583  300A               	movlw	10
  2736  0584  00B3               	movwf	___awmod@divisor
  2737  0585  3000               	movlw	0
  2738  0586  00B4               	movwf	___awmod@divisor+1
  2739  0587  3196  2652  3184   	fcall	___awmod
  2740  058A  0020               	movlb	0	; select bank0
  2741  058B  0834               	movf	?___awmod+1,w
  2742  058C  00C4               	movwf	___wmul@multiplier+1
  2743  058D  0833               	movf	?___awmod,w
  2744  058E  00C3               	movwf	___wmul@multiplier
  2745  058F  3003               	movlw	3
  2746  0590  00C5               	movwf	___wmul@multiplicand
  2747  0591  3000               	movlw	0
  2748  0592  00C6               	movwf	___wmul@multiplicand+1
  2749  0593  3195  2514  3184   	fcall	___wmul
  2750  0596  0020               	movlb	0	; select bank0
  2751  0597  0844               	movf	?___wmul+1,w
  2752  0598  0085               	movwf	5
  2753  0599  0843               	movf	?___wmul,w
  2754  059A  0084               	movwf	4
  2755  059B  3028               	movlw	low (__npowers_| (0+32768))
  2756  059C  0784               	addwf	4,f
  2757  059D  3090               	movlw	high (__npowers_| (0+32768))
  2758  059E  3D85               	addwfc	5,f
  2759  059F  3F00               	moviw [0]fsr0
  2760  05A0  00C9               	movwf	___ftmul@f1
  2761  05A1  3F01               	moviw [1]fsr0
  2762  05A2  00CA               	movwf	___ftmul@f1+1
  2763  05A3  3F02               	moviw [2]fsr0
  2764  05A4  00CB               	movwf	___ftmul@f1+2
  2765  05A5  300A               	movlw	10
  2766  05A6  00BA               	movwf	___awdiv@divisor
  2767  05A7  3000               	movlw	0
  2768  05A8  00BB               	movwf	___awdiv@divisor+1
  2769  05A9  0021               	movlb	1	; select bank1
  2770  05AA  0825               	movf	scale@scl^(0+128),w
  2771  05AB  0020               	movlb	0	; select bank0
  2772  05AC  00BC               	movwf	___awdiv@dividend
  2773  05AD  01BD               	clrf	___awdiv@dividend+1
  2774  05AE  1BBC               	btfsc	___awdiv@dividend,7
  2775  05AF  03BD               	decf	___awdiv@dividend+1,f
  2776  05B0  3196  2698  3184   	fcall	___awdiv
  2777  05B3  0020               	movlb	0	; select bank0
  2778  05B4  083A               	movf	?___awdiv,w
  2779  05B5  3E09               	addlw	9
  2780  05B6  00C3               	movwf	___wmul@multiplier
  2781  05B7  3000               	movlw	0
  2782  05B8  3D3B               	addwfc	?___awdiv+1,w
  2783  05B9  00C4               	movwf	___wmul@multiplier+1
  2784  05BA  3003               	movlw	3
  2785  05BB  00C5               	movwf	___wmul@multiplicand
  2786  05BC  3000               	movlw	0
  2787  05BD  00C6               	movwf	___wmul@multiplicand+1
  2788  05BE  3195  2514  3184   	fcall	___wmul
  2789  05C1  0020               	movlb	0	; select bank0
  2790  05C2  0844               	movf	?___wmul+1,w
  2791  05C3  0085               	movwf	5
  2792  05C4  0843               	movf	?___wmul,w
  2793  05C5  0084               	movwf	4
  2794  05C6  3028               	movlw	low (__npowers_| (0+32768))
  2795  05C7  0784               	addwf	4,f
  2796  05C8  3090               	movlw	high (__npowers_| (0+32768))
  2797  05C9  3D85               	addwfc	5,f
  2798  05CA  3F00               	moviw [0]fsr0
  2799  05CB  00CC               	movwf	___ftmul@f2
  2800  05CC  3F01               	moviw [1]fsr0
  2801  05CD  00CD               	movwf	___ftmul@f2+1
  2802  05CE  3F02               	moviw [2]fsr0
  2803  05CF  00CE               	movwf	___ftmul@f2+2
  2804  05D0  318B  2389         	fcall	___ftmul
  2805  05D2  0020               	movlb	0	; select bank0
  2806  05D3  0849               	movf	?___ftmul,w
  2807  05D4  00D9               	movwf	?_scale
  2808  05D5  084A               	movf	?___ftmul+1,w
  2809  05D6  00DA               	movwf	?_scale+1
  2810  05D7  084B               	movf	?___ftmul+2,w
  2811  05D8  00DB               	movwf	?_scale+2
  2812  05D9  0008               	return
  2813  05DA                     l2021:	
  2814                           
  2815                           ;doprnt.c: 434: return _npowers_[scl];
  2816  05DA  0021               	movlb	1	; select bank1
  2817  05DB  0825               	movf	scale@scl^(0+128),w
  2818  05DC  00A0               	movwf	??_scale^(0+128)
  2819  05DD  01A1               	clrf	(??_scale^(0+128)+1)
  2820  05DE  0820               	movf	??_scale^(0+128),w
  2821  05DF  0020               	movlb	0	; select bank0
  2822  05E0  00C3               	movwf	___wmul@multiplier
  2823  05E1  0021               	movlb	1	; select bank1
  2824  05E2  0821               	movf	(??_scale+1)^(0+128),w
  2825  05E3  0020               	movlb	0	; select bank0
  2826  05E4  00C4               	movwf	___wmul@multiplier+1
  2827  05E5  3003               	movlw	3
  2828  05E6  00C5               	movwf	___wmul@multiplicand
  2829  05E7  3000               	movlw	0
  2830  05E8  00C6               	movwf	___wmul@multiplicand+1
  2831  05E9  3195  2514         	fcall	___wmul
  2832  05EB  0020               	movlb	0	; select bank0
  2833  05EC  0844               	movf	?___wmul+1,w
  2834  05ED  0085               	movwf	5
  2835  05EE  0843               	movf	?___wmul,w
  2836  05EF  0084               	movwf	4
  2837  05F0  3028               	movlw	low (__npowers_| (0+32768))
  2838  05F1  0784               	addwf	4,f
  2839  05F2  3090               	movlw	high (__npowers_| (0+32768))
  2840  05F3  3D85               	addwfc	5,f
  2841  05F4  3F00               	moviw [0]fsr0
  2842  05F5  00D9               	movwf	?_scale
  2843  05F6  3F01               	moviw [1]fsr0
  2844  05F7  00DA               	movwf	?_scale+1
  2845  05F8  3F02               	moviw [2]fsr0
  2846  05F9  00DB               	movwf	?_scale+2
  2847  05FA  0008               	return
  2848  05FB                     l2025:	
  2849                           
  2850                           ;doprnt.c: 435: }
  2851                           ;doprnt.c: 436: if(scl>=110)
  2852  05FB  0021               	movlb	1	; select bank1
  2853  05FC  0825               	movf	scale@scl^(0+128),w
  2854  05FD  3A80               	xorlw	128
  2855  05FE  3E12               	addlw	-238
  2856  05FF  1C03               	skipc
  2857  0600  2EB1               	goto	l2033
  2858                           
  2859                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2860  0601  300A               	movlw	10
  2861  0602  0020               	movlb	0	; select bank0
  2862  0603  00BA               	movwf	___awdiv@divisor
  2863  0604  3000               	movlw	0
  2864  0605  00BB               	movwf	___awdiv@divisor+1
  2865  0606  0021               	movlb	1	; select bank1
  2866  0607  0825               	movf	scale@scl^(0+128),w
  2867  0608  0020               	movlb	0	; select bank0
  2868  0609  00B5               	movwf	___awmod@dividend
  2869  060A  01B6               	clrf	___awmod@dividend+1
  2870  060B  1BB5               	btfsc	___awmod@dividend,7
  2871  060C  03B6               	decf	___awmod@dividend+1,f
  2872  060D  3064               	movlw	100
  2873  060E  00B3               	movwf	___awmod@divisor
  2874  060F  3000               	movlw	0
  2875  0610  00B4               	movwf	___awmod@divisor+1
  2876  0611  3196  2652  3184   	fcall	___awmod
  2877  0614  0020               	movlb	0	; select bank0
  2878  0615  0834               	movf	?___awmod+1,w
  2879  0616  00BD               	movwf	___awdiv@dividend+1
  2880  0617  0833               	movf	?___awmod,w
  2881  0618  00BC               	movwf	___awdiv@dividend
  2882  0619  3196  2698  3184   	fcall	___awdiv
  2883  061C  0020               	movlb	0	; select bank0
  2884  061D  083A               	movf	?___awdiv,w
  2885  061E  3E09               	addlw	9
  2886  061F  00C3               	movwf	___wmul@multiplier
  2887  0620  3000               	movlw	0
  2888  0621  3D3B               	addwfc	?___awdiv+1,w
  2889  0622  00C4               	movwf	___wmul@multiplier+1
  2890  0623  3003               	movlw	3
  2891  0624  00C5               	movwf	___wmul@multiplicand
  2892  0625  3000               	movlw	0
  2893  0626  00C6               	movwf	___wmul@multiplicand+1
  2894  0627  3195  2514  3184   	fcall	___wmul
  2895  062A  0020               	movlb	0	; select bank0
  2896  062B  0844               	movf	?___wmul+1,w
  2897  062C  0085               	movwf	5
  2898  062D  0843               	movf	?___wmul,w
  2899  062E  0084               	movwf	4
  2900  062F  304F               	movlw	low (__powers_| (0+32768))
  2901  0630  0784               	addwf	4,f
  2902  0631  3090               	movlw	high (__powers_| (0+32768))
  2903  0632  3D85               	addwfc	5,f
  2904  0633  3F00               	moviw [0]fsr0
  2905  0634  00C9               	movwf	___ftmul@f1
  2906  0635  3F01               	moviw [1]fsr0
  2907  0636  00CA               	movwf	___ftmul@f1+1
  2908  0637  3F02               	moviw [2]fsr0
  2909  0638  00CB               	movwf	___ftmul@f1+2
  2910  0639  3064               	movlw	100
  2911  063A  00BA               	movwf	___awdiv@divisor
  2912  063B  3000               	movlw	0
  2913  063C  00BB               	movwf	___awdiv@divisor+1
  2914  063D  0021               	movlb	1	; select bank1
  2915  063E  0825               	movf	scale@scl^(0+128),w
  2916  063F  0020               	movlb	0	; select bank0
  2917  0640  00BC               	movwf	___awdiv@dividend
  2918  0641  01BD               	clrf	___awdiv@dividend+1
  2919  0642  1BBC               	btfsc	___awdiv@dividend,7
  2920  0643  03BD               	decf	___awdiv@dividend+1,f
  2921  0644  3196  2698  3184   	fcall	___awdiv
  2922  0647  0020               	movlb	0	; select bank0
  2923  0648  083A               	movf	?___awdiv,w
  2924  0649  3E12               	addlw	18
  2925  064A  00C3               	movwf	___wmul@multiplier
  2926  064B  3000               	movlw	0
  2927  064C  3D3B               	addwfc	?___awdiv+1,w
  2928  064D  00C4               	movwf	___wmul@multiplier+1
  2929  064E  3003               	movlw	3
  2930  064F  00C5               	movwf	___wmul@multiplicand
  2931  0650  3000               	movlw	0
  2932  0651  00C6               	movwf	___wmul@multiplicand+1
  2933  0652  3195  2514  3184   	fcall	___wmul
  2934  0655  0020               	movlb	0	; select bank0
  2935  0656  0844               	movf	?___wmul+1,w
  2936  0657  0085               	movwf	5
  2937  0658  0843               	movf	?___wmul,w
  2938  0659  0084               	movwf	4
  2939  065A  304F               	movlw	low (__powers_| (0+32768))
  2940  065B  0784               	addwf	4,f
  2941  065C  3090               	movlw	high (__powers_| (0+32768))
  2942  065D  3D85               	addwfc	5,f
  2943  065E  3F00               	moviw [0]fsr0
  2944  065F  00CC               	movwf	___ftmul@f2
  2945  0660  3F01               	moviw [1]fsr0
  2946  0661  00CD               	movwf	___ftmul@f2+1
  2947  0662  3F02               	moviw [2]fsr0
  2948  0663  00CE               	movwf	___ftmul@f2+2
  2949  0664  318B  2389  3184   	fcall	___ftmul
  2950  0667  0020               	movlb	0	; select bank0
  2951  0668  0849               	movf	?___ftmul,w
  2952  0669  0021               	movlb	1	; select bank1
  2953  066A  00A2               	movwf	_scale$796^(0+128)
  2954  066B  0020               	movlb	0	; select bank0
  2955  066C  084A               	movf	?___ftmul+1,w
  2956  066D  0021               	movlb	1	; select bank1
  2957  066E  00A3               	movwf	(_scale$796+1)^(0+128)
  2958  066F  0020               	movlb	0	; select bank0
  2959  0670  084B               	movf	?___ftmul+2,w
  2960  0671  0021               	movlb	1	; select bank1
  2961  0672  00A4               	movwf	(_scale$796+2)^(0+128)
  2962                           
  2963                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2964  0673  0825               	movf	scale@scl^(0+128),w
  2965  0674  0020               	movlb	0	; select bank0
  2966  0675  00B5               	movwf	___awmod@dividend
  2967  0676  01B6               	clrf	___awmod@dividend+1
  2968  0677  1BB5               	btfsc	___awmod@dividend,7
  2969  0678  03B6               	decf	___awmod@dividend+1,f
  2970  0679  300A               	movlw	10
  2971  067A  00B3               	movwf	___awmod@divisor
  2972  067B  3000               	movlw	0
  2973  067C  00B4               	movwf	___awmod@divisor+1
  2974  067D  3196  2652  3184   	fcall	___awmod
  2975  0680  0020               	movlb	0	; select bank0
  2976  0681  0834               	movf	?___awmod+1,w
  2977  0682  00C4               	movwf	___wmul@multiplier+1
  2978  0683  0833               	movf	?___awmod,w
  2979  0684  00C3               	movwf	___wmul@multiplier
  2980  0685  3003               	movlw	3
  2981  0686  00C5               	movwf	___wmul@multiplicand
  2982  0687  3000               	movlw	0
  2983  0688  00C6               	movwf	___wmul@multiplicand+1
  2984  0689  3195  2514  3184   	fcall	___wmul
  2985  068C  0020               	movlb	0	; select bank0
  2986  068D  0844               	movf	?___wmul+1,w
  2987  068E  0085               	movwf	5
  2988  068F  0843               	movf	?___wmul,w
  2989  0690  0084               	movwf	4
  2990  0691  304F               	movlw	low (__powers_| (0+32768))
  2991  0692  0784               	addwf	4,f
  2992  0693  3090               	movlw	high (__powers_| (0+32768))
  2993  0694  3D85               	addwfc	5,f
  2994  0695  3F00               	moviw [0]fsr0
  2995  0696  00C9               	movwf	___ftmul@f1
  2996  0697  3F01               	moviw [1]fsr0
  2997  0698  00CA               	movwf	___ftmul@f1+1
  2998  0699  3F02               	moviw [2]fsr0
  2999  069A  00CB               	movwf	___ftmul@f1+2
  3000  069B  0021               	movlb	1	; select bank1
  3001  069C  0822               	movf	_scale$796^(0+128),w
  3002  069D  0020               	movlb	0	; select bank0
  3003  069E  00CC               	movwf	___ftmul@f2
  3004  069F  0021               	movlb	1	; select bank1
  3005  06A0  0823               	movf	(_scale$796+1)^(0+128),w
  3006  06A1  0020               	movlb	0	; select bank0
  3007  06A2  00CD               	movwf	___ftmul@f2+1
  3008  06A3  0021               	movlb	1	; select bank1
  3009  06A4  0824               	movf	(_scale$796+2)^(0+128),w
  3010  06A5  0020               	movlb	0	; select bank0
  3011  06A6  00CE               	movwf	___ftmul@f2+2
  3012  06A7  318B  2389         	fcall	___ftmul
  3013  06A9  0020               	movlb	0	; select bank0
  3014  06AA  0849               	movf	?___ftmul,w
  3015  06AB  00D9               	movwf	?_scale
  3016  06AC  084A               	movf	?___ftmul+1,w
  3017  06AD  00DA               	movwf	?_scale+1
  3018  06AE  084B               	movf	?___ftmul+2,w
  3019  06AF  00DB               	movwf	?_scale+2
  3020  06B0  0008               	return
  3021  06B1                     l2033:	
  3022                           
  3023                           ;doprnt.c: 438: else if(scl > 10)
  3024  06B1  0021               	movlb	1	; select bank1
  3025  06B2  0825               	movf	scale@scl^(0+128),w
  3026  06B3  3A80               	xorlw	128
  3027  06B4  3E75               	addlw	-139
  3028  06B5  1C03               	skipc
  3029  06B6  2F14               	goto	l2039
  3030                           
  3031                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3032  06B7  0825               	movf	scale@scl^(0+128),w
  3033  06B8  0020               	movlb	0	; select bank0
  3034  06B9  00B5               	movwf	___awmod@dividend
  3035  06BA  01B6               	clrf	___awmod@dividend+1
  3036  06BB  1BB5               	btfsc	___awmod@dividend,7
  3037  06BC  03B6               	decf	___awmod@dividend+1,f
  3038  06BD  300A               	movlw	10
  3039  06BE  00B3               	movwf	___awmod@divisor
  3040  06BF  3000               	movlw	0
  3041  06C0  00B4               	movwf	___awmod@divisor+1
  3042  06C1  3196  2652  3184   	fcall	___awmod
  3043  06C4  0020               	movlb	0	; select bank0
  3044  06C5  0834               	movf	?___awmod+1,w
  3045  06C6  00C4               	movwf	___wmul@multiplier+1
  3046  06C7  0833               	movf	?___awmod,w
  3047  06C8  00C3               	movwf	___wmul@multiplier
  3048  06C9  3003               	movlw	3
  3049  06CA  00C5               	movwf	___wmul@multiplicand
  3050  06CB  3000               	movlw	0
  3051  06CC  00C6               	movwf	___wmul@multiplicand+1
  3052  06CD  3195  2514  3184   	fcall	___wmul
  3053  06D0  0020               	movlb	0	; select bank0
  3054  06D1  0844               	movf	?___wmul+1,w
  3055  06D2  0085               	movwf	5
  3056  06D3  0843               	movf	?___wmul,w
  3057  06D4  0084               	movwf	4
  3058  06D5  304F               	movlw	low (__powers_| (0+32768))
  3059  06D6  0784               	addwf	4,f
  3060  06D7  3090               	movlw	high (__powers_| (0+32768))
  3061  06D8  3D85               	addwfc	5,f
  3062  06D9  3F00               	moviw [0]fsr0
  3063  06DA  00C9               	movwf	___ftmul@f1
  3064  06DB  3F01               	moviw [1]fsr0
  3065  06DC  00CA               	movwf	___ftmul@f1+1
  3066  06DD  3F02               	moviw [2]fsr0
  3067  06DE  00CB               	movwf	___ftmul@f1+2
  3068  06DF  300A               	movlw	10
  3069  06E0  00BA               	movwf	___awdiv@divisor
  3070  06E1  3000               	movlw	0
  3071  06E2  00BB               	movwf	___awdiv@divisor+1
  3072  06E3  0021               	movlb	1	; select bank1
  3073  06E4  0825               	movf	scale@scl^(0+128),w
  3074  06E5  0020               	movlb	0	; select bank0
  3075  06E6  00BC               	movwf	___awdiv@dividend
  3076  06E7  01BD               	clrf	___awdiv@dividend+1
  3077  06E8  1BBC               	btfsc	___awdiv@dividend,7
  3078  06E9  03BD               	decf	___awdiv@dividend+1,f
  3079  06EA  3196  2698  3184   	fcall	___awdiv
  3080  06ED  0020               	movlb	0	; select bank0
  3081  06EE  083A               	movf	?___awdiv,w
  3082  06EF  3E09               	addlw	9
  3083  06F0  00C3               	movwf	___wmul@multiplier
  3084  06F1  3000               	movlw	0
  3085  06F2  3D3B               	addwfc	?___awdiv+1,w
  3086  06F3  00C4               	movwf	___wmul@multiplier+1
  3087  06F4  3003               	movlw	3
  3088  06F5  00C5               	movwf	___wmul@multiplicand
  3089  06F6  3000               	movlw	0
  3090  06F7  00C6               	movwf	___wmul@multiplicand+1
  3091  06F8  3195  2514  3184   	fcall	___wmul
  3092  06FB  0020               	movlb	0	; select bank0
  3093  06FC  0844               	movf	?___wmul+1,w
  3094  06FD  0085               	movwf	5
  3095  06FE  0843               	movf	?___wmul,w
  3096  06FF  0084               	movwf	4
  3097  0700  304F               	movlw	low (__powers_| (0+32768))
  3098  0701  0784               	addwf	4,f
  3099  0702  3090               	movlw	high (__powers_| (0+32768))
  3100  0703  3D85               	addwfc	5,f
  3101  0704  3F00               	moviw [0]fsr0
  3102  0705  00CC               	movwf	___ftmul@f2
  3103  0706  3F01               	moviw [1]fsr0
  3104  0707  00CD               	movwf	___ftmul@f2+1
  3105  0708  3F02               	moviw [2]fsr0
  3106  0709  00CE               	movwf	___ftmul@f2+2
  3107  070A  318B  2389         	fcall	___ftmul
  3108  070C  0020               	movlb	0	; select bank0
  3109  070D  0849               	movf	?___ftmul,w
  3110  070E  00D9               	movwf	?_scale
  3111  070F  084A               	movf	?___ftmul+1,w
  3112  0710  00DA               	movwf	?_scale+1
  3113  0711  084B               	movf	?___ftmul+2,w
  3114  0712  00DB               	movwf	?_scale+2
  3115  0713  0008               	return
  3116  0714                     l2039:	
  3117                           
  3118                           ;doprnt.c: 440: return _powers_[scl];
  3119  0714  0021               	movlb	1	; select bank1
  3120  0715  0825               	movf	scale@scl^(0+128),w
  3121  0716  00A0               	movwf	??_scale^(0+128)
  3122  0717  01A1               	clrf	(??_scale^(0+128)+1)
  3123  0718  0820               	movf	??_scale^(0+128),w
  3124  0719  0020               	movlb	0	; select bank0
  3125  071A  00C3               	movwf	___wmul@multiplier
  3126  071B  0021               	movlb	1	; select bank1
  3127  071C  0821               	movf	(??_scale+1)^(0+128),w
  3128  071D  0020               	movlb	0	; select bank0
  3129  071E  00C4               	movwf	___wmul@multiplier+1
  3130  071F  3003               	movlw	3
  3131  0720  00C5               	movwf	___wmul@multiplicand
  3132  0721  3000               	movlw	0
  3133  0722  00C6               	movwf	___wmul@multiplicand+1
  3134  0723  3195  2514         	fcall	___wmul
  3135  0725  0020               	movlb	0	; select bank0
  3136  0726  0844               	movf	?___wmul+1,w
  3137  0727  0085               	movwf	5
  3138  0728  0843               	movf	?___wmul,w
  3139  0729  0084               	movwf	4
  3140  072A  304F               	movlw	low (__powers_| (0+32768))
  3141  072B  0784               	addwf	4,f
  3142  072C  3090               	movlw	high (__powers_| (0+32768))
  3143  072D  3D85               	addwfc	5,f
  3144  072E  3F00               	moviw [0]fsr0
  3145  072F  00D9               	movwf	?_scale
  3146  0730  3F01               	moviw [1]fsr0
  3147  0731  00DA               	movwf	?_scale+1
  3148  0732  3F02               	moviw [2]fsr0
  3149  0733  00DB               	movwf	?_scale+2
  3150  0734  0008               	return
  3151  0735                     __end_of_scale:	
  3152                           
  3153                           	psect	text3
  3154  0E5E                     __ptext3:	
  3155 ;; *************** function _fround *****************
  3156 ;; Defined at:
  3157 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  prec            1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  prec            1   10[BANK1 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  3   57[BANK0 ] unsigned char 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3171 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;Total ram usage:       14 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    5
  3178 ;; This function calls:
  3179 ;;		___awdiv
  3180 ;;		___awmod
  3181 ;;		___ftmul
  3182 ;;		___wmul
  3183 ;; This function is called by:
  3184 ;;		_sprintf
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _fround
  3190  0E5E                     _fround:	
  3191                           
  3192                           ;incstack = 0
  3193                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3194                           ;fround@prec stored from wreg
  3195  0E5E  0021               	movlb	1	; select bank1
  3196  0E5F  00AA               	movwf	fround@prec^(0+128)
  3197                           
  3198                           ;doprnt.c: 413: if(prec>=110)
  3199  0E60  306E               	movlw	110
  3200  0E61  022A               	subwf	fround@prec^(0+128),w
  3201  0E62  1C03               	skipc
  3202  0E63  2F42               	goto	l1991
  3203                           
  3204                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3205  0E64  300A               	movlw	10
  3206  0E65  0020               	movlb	0	; select bank0
  3207  0E66  00BA               	movwf	___awdiv@divisor
  3208  0E67  3000               	movlw	0
  3209  0E68  00BB               	movwf	___awdiv@divisor+1
  3210  0E69  0021               	movlb	1	; select bank1
  3211  0E6A  082A               	movf	fround@prec^(0+128),w
  3212  0E6B  00A0               	movwf	??_fround^(0+128)
  3213  0E6C  01A1               	clrf	(??_fround^(0+128)+1)
  3214  0E6D  0820               	movf	??_fround^(0+128),w
  3215  0E6E  0020               	movlb	0	; select bank0
  3216  0E6F  00B5               	movwf	___awmod@dividend
  3217  0E70  0021               	movlb	1	; select bank1
  3218  0E71  0821               	movf	(??_fround+1)^(0+128),w
  3219  0E72  0020               	movlb	0	; select bank0
  3220  0E73  00B6               	movwf	___awmod@dividend+1
  3221  0E74  3064               	movlw	100
  3222  0E75  00B3               	movwf	___awmod@divisor
  3223  0E76  3000               	movlw	0
  3224  0E77  00B4               	movwf	___awmod@divisor+1
  3225  0E78  3196  2652  318E   	fcall	___awmod
  3226  0E7B  0020               	movlb	0	; select bank0
  3227  0E7C  0834               	movf	?___awmod+1,w
  3228  0E7D  00BD               	movwf	___awdiv@dividend+1
  3229  0E7E  0833               	movf	?___awmod,w
  3230  0E7F  00BC               	movwf	___awdiv@dividend
  3231  0E80  3196  2698  318E   	fcall	___awdiv
  3232  0E83  0020               	movlb	0	; select bank0
  3233  0E84  083A               	movf	?___awdiv,w
  3234  0E85  3E09               	addlw	9
  3235  0E86  00C3               	movwf	___wmul@multiplier
  3236  0E87  3000               	movlw	0
  3237  0E88  3D3B               	addwfc	?___awdiv+1,w
  3238  0E89  00C4               	movwf	___wmul@multiplier+1
  3239  0E8A  3003               	movlw	3
  3240  0E8B  00C5               	movwf	___wmul@multiplicand
  3241  0E8C  3000               	movlw	0
  3242  0E8D  00C6               	movwf	___wmul@multiplicand+1
  3243  0E8E  3195  2514  318E   	fcall	___wmul
  3244  0E91  0020               	movlb	0	; select bank0
  3245  0E92  0844               	movf	?___wmul+1,w
  3246  0E93  0085               	movwf	5
  3247  0E94  0843               	movf	?___wmul,w
  3248  0E95  0084               	movwf	4
  3249  0E96  3028               	movlw	low (__npowers_| (0+32768))
  3250  0E97  0784               	addwf	4,f
  3251  0E98  3090               	movlw	high (__npowers_| (0+32768))
  3252  0E99  3D85               	addwfc	5,f
  3253  0E9A  3F00               	moviw [0]fsr0
  3254  0E9B  00C9               	movwf	___ftmul@f1
  3255  0E9C  3F01               	moviw [1]fsr0
  3256  0E9D  00CA               	movwf	___ftmul@f1+1
  3257  0E9E  3F02               	moviw [2]fsr0
  3258  0E9F  00CB               	movwf	___ftmul@f1+2
  3259  0EA0  3064               	movlw	100
  3260  0EA1  00BA               	movwf	___awdiv@divisor
  3261  0EA2  3000               	movlw	0
  3262  0EA3  00BB               	movwf	___awdiv@divisor+1
  3263  0EA4  0021               	movlb	1	; select bank1
  3264  0EA5  082A               	movf	fround@prec^(0+128),w
  3265  0EA6  00A2               	movwf	(??_fround+2)^(0+128)
  3266  0EA7  01A3               	clrf	((??_fround+2)^(0+128)+1)
  3267  0EA8  0822               	movf	(??_fround+2)^(0+128),w
  3268  0EA9  0020               	movlb	0	; select bank0
  3269  0EAA  00BC               	movwf	___awdiv@dividend
  3270  0EAB  0021               	movlb	1	; select bank1
  3271  0EAC  0823               	movf	(??_fround+3)^(0+128),w
  3272  0EAD  0020               	movlb	0	; select bank0
  3273  0EAE  00BD               	movwf	___awdiv@dividend+1
  3274  0EAF  3196  2698  318E   	fcall	___awdiv
  3275  0EB2  0020               	movlb	0	; select bank0
  3276  0EB3  083A               	movf	?___awdiv,w
  3277  0EB4  3E12               	addlw	18
  3278  0EB5  00C3               	movwf	___wmul@multiplier
  3279  0EB6  3000               	movlw	0
  3280  0EB7  3D3B               	addwfc	?___awdiv+1,w
  3281  0EB8  00C4               	movwf	___wmul@multiplier+1
  3282  0EB9  3003               	movlw	3
  3283  0EBA  00C5               	movwf	___wmul@multiplicand
  3284  0EBB  3000               	movlw	0
  3285  0EBC  00C6               	movwf	___wmul@multiplicand+1
  3286  0EBD  3195  2514  318E   	fcall	___wmul
  3287  0EC0  0020               	movlb	0	; select bank0
  3288  0EC1  0844               	movf	?___wmul+1,w
  3289  0EC2  0085               	movwf	5
  3290  0EC3  0843               	movf	?___wmul,w
  3291  0EC4  0084               	movwf	4
  3292  0EC5  3028               	movlw	low (__npowers_| (0+32768))
  3293  0EC6  0784               	addwf	4,f
  3294  0EC7  3090               	movlw	high (__npowers_| (0+32768))
  3295  0EC8  3D85               	addwfc	5,f
  3296  0EC9  3F00               	moviw [0]fsr0
  3297  0ECA  00CC               	movwf	___ftmul@f2
  3298  0ECB  3F01               	moviw [1]fsr0
  3299  0ECC  00CD               	movwf	___ftmul@f2+1
  3300  0ECD  3F02               	moviw [2]fsr0
  3301  0ECE  00CE               	movwf	___ftmul@f2+2
  3302  0ECF  318B  2389  318E   	fcall	___ftmul
  3303  0ED2  0020               	movlb	0	; select bank0
  3304  0ED3  0849               	movf	?___ftmul,w
  3305  0ED4  0021               	movlb	1	; select bank1
  3306  0ED5  00A7               	movwf	_fround$794^(0+128)
  3307  0ED6  0020               	movlb	0	; select bank0
  3308  0ED7  084A               	movf	?___ftmul+1,w
  3309  0ED8  0021               	movlb	1	; select bank1
  3310  0ED9  00A8               	movwf	(_fround$794+1)^(0+128)
  3311  0EDA  0020               	movlb	0	; select bank0
  3312  0EDB  084B               	movf	?___ftmul+2,w
  3313  0EDC  0021               	movlb	1	; select bank1
  3314  0EDD  00A9               	movwf	(_fround$794+2)^(0+128)
  3315                           
  3316                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3317  0EDE  082A               	movf	fround@prec^(0+128),w
  3318  0EDF  00A0               	movwf	??_fround^(0+128)
  3319  0EE0  01A1               	clrf	(??_fround^(0+128)+1)
  3320  0EE1  0820               	movf	??_fround^(0+128),w
  3321  0EE2  0020               	movlb	0	; select bank0
  3322  0EE3  00B5               	movwf	___awmod@dividend
  3323  0EE4  0021               	movlb	1	; select bank1
  3324  0EE5  0821               	movf	(??_fround+1)^(0+128),w
  3325  0EE6  0020               	movlb	0	; select bank0
  3326  0EE7  00B6               	movwf	___awmod@dividend+1
  3327  0EE8  300A               	movlw	10
  3328  0EE9  00B3               	movwf	___awmod@divisor
  3329  0EEA  3000               	movlw	0
  3330  0EEB  00B4               	movwf	___awmod@divisor+1
  3331  0EEC  3196  2652  318E   	fcall	___awmod
  3332  0EEF  0020               	movlb	0	; select bank0
  3333  0EF0  0834               	movf	?___awmod+1,w
  3334  0EF1  00C4               	movwf	___wmul@multiplier+1
  3335  0EF2  0833               	movf	?___awmod,w
  3336  0EF3  00C3               	movwf	___wmul@multiplier
  3337  0EF4  3003               	movlw	3
  3338  0EF5  00C5               	movwf	___wmul@multiplicand
  3339  0EF6  3000               	movlw	0
  3340  0EF7  00C6               	movwf	___wmul@multiplicand+1
  3341  0EF8  3195  2514  318E   	fcall	___wmul
  3342  0EFB  0020               	movlb	0	; select bank0
  3343  0EFC  0844               	movf	?___wmul+1,w
  3344  0EFD  0085               	movwf	5
  3345  0EFE  0843               	movf	?___wmul,w
  3346  0EFF  0084               	movwf	4
  3347  0F00  3028               	movlw	low (__npowers_| (0+32768))
  3348  0F01  0784               	addwf	4,f
  3349  0F02  3090               	movlw	high (__npowers_| (0+32768))
  3350  0F03  3D85               	addwfc	5,f
  3351  0F04  3F00               	moviw [0]fsr0
  3352  0F05  00C9               	movwf	___ftmul@f1
  3353  0F06  3F01               	moviw [1]fsr0
  3354  0F07  00CA               	movwf	___ftmul@f1+1
  3355  0F08  3F02               	moviw [2]fsr0
  3356  0F09  00CB               	movwf	___ftmul@f1+2
  3357  0F0A  0021               	movlb	1	; select bank1
  3358  0F0B  0827               	movf	_fround$794^(0+128),w
  3359  0F0C  0020               	movlb	0	; select bank0
  3360  0F0D  00CC               	movwf	___ftmul@f2
  3361  0F0E  0021               	movlb	1	; select bank1
  3362  0F0F  0828               	movf	(_fround$794+1)^(0+128),w
  3363  0F10  0020               	movlb	0	; select bank0
  3364  0F11  00CD               	movwf	___ftmul@f2+1
  3365  0F12  0021               	movlb	1	; select bank1
  3366  0F13  0829               	movf	(_fround$794+2)^(0+128),w
  3367  0F14  0020               	movlb	0	; select bank0
  3368  0F15  00CE               	movwf	___ftmul@f2+2
  3369  0F16  318B  2389  318E   	fcall	___ftmul
  3370  0F19  0020               	movlb	0	; select bank0
  3371  0F1A  0849               	movf	?___ftmul,w
  3372  0F1B  0021               	movlb	1	; select bank1
  3373  0F1C  00A4               	movwf	_fround$795^(0+128)
  3374  0F1D  0020               	movlb	0	; select bank0
  3375  0F1E  084A               	movf	?___ftmul+1,w
  3376  0F1F  0021               	movlb	1	; select bank1
  3377  0F20  00A5               	movwf	(_fround$795+1)^(0+128)
  3378  0F21  0020               	movlb	0	; select bank0
  3379  0F22  084B               	movf	?___ftmul+2,w
  3380  0F23  0021               	movlb	1	; select bank1
  3381  0F24  00A6               	movwf	(_fround$795+2)^(0+128)
  3382                           
  3383                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3384  0F25  3000               	movlw	0
  3385  0F26  0020               	movlb	0	; select bank0
  3386  0F27  00C9               	movwf	___ftmul@f1
  3387  0F28  3000               	movlw	0
  3388  0F29  00CA               	movwf	___ftmul@f1+1
  3389  0F2A  303F               	movlw	63
  3390  0F2B  00CB               	movwf	___ftmul@f1+2
  3391  0F2C  0021               	movlb	1	; select bank1
  3392  0F2D  0824               	movf	_fround$795^(0+128),w
  3393  0F2E  0020               	movlb	0	; select bank0
  3394  0F2F  00CC               	movwf	___ftmul@f2
  3395  0F30  0021               	movlb	1	; select bank1
  3396  0F31  0825               	movf	(_fround$795+1)^(0+128),w
  3397  0F32  0020               	movlb	0	; select bank0
  3398  0F33  00CD               	movwf	___ftmul@f2+1
  3399  0F34  0021               	movlb	1	; select bank1
  3400  0F35  0826               	movf	(_fround$795+2)^(0+128),w
  3401  0F36  0020               	movlb	0	; select bank0
  3402  0F37  00CE               	movwf	___ftmul@f2+2
  3403  0F38  318B  2389         	fcall	___ftmul
  3404  0F3A  0020               	movlb	0	; select bank0
  3405  0F3B  0849               	movf	?___ftmul,w
  3406  0F3C  00D9               	movwf	?_fround
  3407  0F3D  084A               	movf	?___ftmul+1,w
  3408  0F3E  00DA               	movwf	?_fround+1
  3409  0F3F  084B               	movf	?___ftmul+2,w
  3410  0F40  00DB               	movwf	?_fround+2
  3411  0F41  0008               	return
  3412  0F42                     l1991:	
  3413                           
  3414                           ;doprnt.c: 415: else if(prec > 10)
  3415  0F42  300B               	movlw	11
  3416  0F43  0021               	movlb	1	; select bank1
  3417  0F44  022A               	subwf	fround@prec^(0+128),w
  3418  0F45  1C03               	skipc
  3419  0F46  2FCE               	goto	l1999
  3420                           
  3421                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3422  0F47  082A               	movf	fround@prec^(0+128),w
  3423  0F48  00A0               	movwf	??_fround^(0+128)
  3424  0F49  01A1               	clrf	(??_fround^(0+128)+1)
  3425  0F4A  0820               	movf	??_fround^(0+128),w
  3426  0F4B  0020               	movlb	0	; select bank0
  3427  0F4C  00B5               	movwf	___awmod@dividend
  3428  0F4D  0021               	movlb	1	; select bank1
  3429  0F4E  0821               	movf	(??_fround+1)^(0+128),w
  3430  0F4F  0020               	movlb	0	; select bank0
  3431  0F50  00B6               	movwf	___awmod@dividend+1
  3432  0F51  300A               	movlw	10
  3433  0F52  00B3               	movwf	___awmod@divisor
  3434  0F53  3000               	movlw	0
  3435  0F54  00B4               	movwf	___awmod@divisor+1
  3436  0F55  3196  2652  318E   	fcall	___awmod
  3437  0F58  0020               	movlb	0	; select bank0
  3438  0F59  0834               	movf	?___awmod+1,w
  3439  0F5A  00C4               	movwf	___wmul@multiplier+1
  3440  0F5B  0833               	movf	?___awmod,w
  3441  0F5C  00C3               	movwf	___wmul@multiplier
  3442  0F5D  3003               	movlw	3
  3443  0F5E  00C5               	movwf	___wmul@multiplicand
  3444  0F5F  3000               	movlw	0
  3445  0F60  00C6               	movwf	___wmul@multiplicand+1
  3446  0F61  3195  2514  318E   	fcall	___wmul
  3447  0F64  0020               	movlb	0	; select bank0
  3448  0F65  0844               	movf	?___wmul+1,w
  3449  0F66  0085               	movwf	5
  3450  0F67  0843               	movf	?___wmul,w
  3451  0F68  0084               	movwf	4
  3452  0F69  3028               	movlw	low (__npowers_| (0+32768))
  3453  0F6A  0784               	addwf	4,f
  3454  0F6B  3090               	movlw	high (__npowers_| (0+32768))
  3455  0F6C  3D85               	addwfc	5,f
  3456  0F6D  3F00               	moviw [0]fsr0
  3457  0F6E  00C9               	movwf	___ftmul@f1
  3458  0F6F  3F01               	moviw [1]fsr0
  3459  0F70  00CA               	movwf	___ftmul@f1+1
  3460  0F71  3F02               	moviw [2]fsr0
  3461  0F72  00CB               	movwf	___ftmul@f1+2
  3462  0F73  300A               	movlw	10
  3463  0F74  00BA               	movwf	___awdiv@divisor
  3464  0F75  3000               	movlw	0
  3465  0F76  00BB               	movwf	___awdiv@divisor+1
  3466  0F77  0021               	movlb	1	; select bank1
  3467  0F78  082A               	movf	fround@prec^(0+128),w
  3468  0F79  00A2               	movwf	(??_fround+2)^(0+128)
  3469  0F7A  01A3               	clrf	((??_fround+2)^(0+128)+1)
  3470  0F7B  0822               	movf	(??_fround+2)^(0+128),w
  3471  0F7C  0020               	movlb	0	; select bank0
  3472  0F7D  00BC               	movwf	___awdiv@dividend
  3473  0F7E  0021               	movlb	1	; select bank1
  3474  0F7F  0823               	movf	(??_fround+3)^(0+128),w
  3475  0F80  0020               	movlb	0	; select bank0
  3476  0F81  00BD               	movwf	___awdiv@dividend+1
  3477  0F82  3196  2698  318E   	fcall	___awdiv
  3478  0F85  0020               	movlb	0	; select bank0
  3479  0F86  083A               	movf	?___awdiv,w
  3480  0F87  3E09               	addlw	9
  3481  0F88  00C3               	movwf	___wmul@multiplier
  3482  0F89  3000               	movlw	0
  3483  0F8A  3D3B               	addwfc	?___awdiv+1,w
  3484  0F8B  00C4               	movwf	___wmul@multiplier+1
  3485  0F8C  3003               	movlw	3
  3486  0F8D  00C5               	movwf	___wmul@multiplicand
  3487  0F8E  3000               	movlw	0
  3488  0F8F  00C6               	movwf	___wmul@multiplicand+1
  3489  0F90  3195  2514  318E   	fcall	___wmul
  3490  0F93  0020               	movlb	0	; select bank0
  3491  0F94  0844               	movf	?___wmul+1,w
  3492  0F95  0085               	movwf	5
  3493  0F96  0843               	movf	?___wmul,w
  3494  0F97  0084               	movwf	4
  3495  0F98  3028               	movlw	low (__npowers_| (0+32768))
  3496  0F99  0784               	addwf	4,f
  3497  0F9A  3090               	movlw	high (__npowers_| (0+32768))
  3498  0F9B  3D85               	addwfc	5,f
  3499  0F9C  3F00               	moviw [0]fsr0
  3500  0F9D  00CC               	movwf	___ftmul@f2
  3501  0F9E  3F01               	moviw [1]fsr0
  3502  0F9F  00CD               	movwf	___ftmul@f2+1
  3503  0FA0  3F02               	moviw [2]fsr0
  3504  0FA1  00CE               	movwf	___ftmul@f2+2
  3505  0FA2  318B  2389  318E   	fcall	___ftmul
  3506  0FA5  0020               	movlb	0	; select bank0
  3507  0FA6  0849               	movf	?___ftmul,w
  3508  0FA7  0021               	movlb	1	; select bank1
  3509  0FA8  00A7               	movwf	_fround$794^(0+128)
  3510  0FA9  0020               	movlb	0	; select bank0
  3511  0FAA  084A               	movf	?___ftmul+1,w
  3512  0FAB  0021               	movlb	1	; select bank1
  3513  0FAC  00A8               	movwf	(_fround$794+1)^(0+128)
  3514  0FAD  0020               	movlb	0	; select bank0
  3515  0FAE  084B               	movf	?___ftmul+2,w
  3516  0FAF  0021               	movlb	1	; select bank1
  3517  0FB0  00A9               	movwf	(_fround$794+2)^(0+128)
  3518                           
  3519                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3520  0FB1  3000               	movlw	0
  3521  0FB2  0020               	movlb	0	; select bank0
  3522  0FB3  00C9               	movwf	___ftmul@f1
  3523  0FB4  3000               	movlw	0
  3524  0FB5  00CA               	movwf	___ftmul@f1+1
  3525  0FB6  303F               	movlw	63
  3526  0FB7  00CB               	movwf	___ftmul@f1+2
  3527  0FB8  0021               	movlb	1	; select bank1
  3528  0FB9  0827               	movf	_fround$794^(0+128),w
  3529  0FBA  0020               	movlb	0	; select bank0
  3530  0FBB  00CC               	movwf	___ftmul@f2
  3531  0FBC  0021               	movlb	1	; select bank1
  3532  0FBD  0828               	movf	(_fround$794+1)^(0+128),w
  3533  0FBE  0020               	movlb	0	; select bank0
  3534  0FBF  00CD               	movwf	___ftmul@f2+1
  3535  0FC0  0021               	movlb	1	; select bank1
  3536  0FC1  0829               	movf	(_fround$794+2)^(0+128),w
  3537  0FC2  0020               	movlb	0	; select bank0
  3538  0FC3  00CE               	movwf	___ftmul@f2+2
  3539  0FC4  318B  2389         	fcall	___ftmul
  3540  0FC6  0020               	movlb	0	; select bank0
  3541  0FC7  0849               	movf	?___ftmul,w
  3542  0FC8  00D9               	movwf	?_fround
  3543  0FC9  084A               	movf	?___ftmul+1,w
  3544  0FCA  00DA               	movwf	?_fround+1
  3545  0FCB  084B               	movf	?___ftmul+2,w
  3546  0FCC  00DB               	movwf	?_fround+2
  3547  0FCD  0008               	return
  3548  0FCE                     l1999:	
  3549                           
  3550                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3551  0FCE  3000               	movlw	0
  3552  0FCF  0020               	movlb	0	; select bank0
  3553  0FD0  00C9               	movwf	___ftmul@f1
  3554  0FD1  3000               	movlw	0
  3555  0FD2  00CA               	movwf	___ftmul@f1+1
  3556  0FD3  303F               	movlw	63
  3557  0FD4  00CB               	movwf	___ftmul@f1+2
  3558  0FD5  0021               	movlb	1	; select bank1
  3559  0FD6  082A               	movf	fround@prec^(0+128),w
  3560  0FD7  00A0               	movwf	??_fround^(0+128)
  3561  0FD8  01A1               	clrf	(??_fround^(0+128)+1)
  3562  0FD9  0820               	movf	??_fround^(0+128),w
  3563  0FDA  0020               	movlb	0	; select bank0
  3564  0FDB  00C3               	movwf	___wmul@multiplier
  3565  0FDC  0021               	movlb	1	; select bank1
  3566  0FDD  0821               	movf	(??_fround+1)^(0+128),w
  3567  0FDE  0020               	movlb	0	; select bank0
  3568  0FDF  00C4               	movwf	___wmul@multiplier+1
  3569  0FE0  3003               	movlw	3
  3570  0FE1  00C5               	movwf	___wmul@multiplicand
  3571  0FE2  3000               	movlw	0
  3572  0FE3  00C6               	movwf	___wmul@multiplicand+1
  3573  0FE4  3195  2514  318E   	fcall	___wmul
  3574  0FE7  0020               	movlb	0	; select bank0
  3575  0FE8  0844               	movf	?___wmul+1,w
  3576  0FE9  0085               	movwf	5
  3577  0FEA  0843               	movf	?___wmul,w
  3578  0FEB  0084               	movwf	4
  3579  0FEC  3028               	movlw	low (__npowers_| (0+32768))
  3580  0FED  0784               	addwf	4,f
  3581  0FEE  3090               	movlw	high (__npowers_| (0+32768))
  3582  0FEF  3D85               	addwfc	5,f
  3583  0FF0  3F00               	moviw [0]fsr0
  3584  0FF1  00CC               	movwf	___ftmul@f2
  3585  0FF2  3F01               	moviw [1]fsr0
  3586  0FF3  00CD               	movwf	___ftmul@f2+1
  3587  0FF4  3F02               	moviw [2]fsr0
  3588  0FF5  00CE               	movwf	___ftmul@f2+2
  3589  0FF6  318B  2389         	fcall	___ftmul
  3590  0FF8  0020               	movlb	0	; select bank0
  3591  0FF9  0849               	movf	?___ftmul,w
  3592  0FFA  00D9               	movwf	?_fround
  3593  0FFB  084A               	movf	?___ftmul+1,w
  3594  0FFC  00DA               	movwf	?_fround+1
  3595  0FFD  084B               	movf	?___ftmul+2,w
  3596  0FFE  00DB               	movwf	?_fround+2
  3597  0FFF  0008               	return
  3598  1000                     __end_of_fround:	
  3599                           
  3600                           	psect	text4
  3601  1514                     __ptext4:	
  3602 ;; *************** function ___wmul *****************
  3603 ;; Defined at:
  3604 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  multiplier      2   35[BANK0 ] unsigned int 
  3607 ;;  multiplicand    2   37[BANK0 ] unsigned int 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  product         2   39[BANK0 ] unsigned int 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2   35[BANK0 ] unsigned int 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;Total ram usage:        6 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    3
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_fround
  3630 ;;		_scale
  3631 ;;		_sprintf
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function ___wmul
  3637  1514                     ___wmul:	
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3641  1514  0020               	movlb	0	; select bank0
  3642  1515  01C7               	clrf	___wmul@product
  3643  1516  01C8               	clrf	___wmul@product+1
  3644  1517                     l1721:	
  3645  1517  1C43               	btfss	___wmul@multiplier,0
  3646  1518  2D1D               	goto	l251
  3647  1519  0845               	movf	___wmul@multiplicand,w
  3648  151A  07C7               	addwf	___wmul@product,f
  3649  151B  0846               	movf	___wmul@multiplicand+1,w
  3650  151C  3DC8               	addwfc	___wmul@product+1,f
  3651  151D                     l251:	
  3652  151D  3001               	movlw	1
  3653  151E                     u2135:	
  3654  151E  35C5               	lslf	___wmul@multiplicand,f
  3655  151F  0DC6               	rlf	___wmul@multiplicand+1,f
  3656  1520  0B89               	decfsz	9,f
  3657  1521  2D1E               	goto	u2135
  3658  1522  3001               	movlw	1
  3659  1523                     u2145:	
  3660  1523  36C4               	lsrf	___wmul@multiplier+1,f
  3661  1524  0CC3               	rrf	___wmul@multiplier,f
  3662  1525  0B89               	decfsz	9,f
  3663  1526  2D23               	goto	u2145
  3664  1527  0843               	movf	___wmul@multiplier,w
  3665  1528  0444               	iorwf	___wmul@multiplier+1,w
  3666  1529  1D03               	btfss	3,2
  3667  152A  2D17               	goto	l1721
  3668  152B  0848               	movf	___wmul@product+1,w
  3669  152C  00C4               	movwf	?___wmul+1
  3670  152D  0847               	movf	___wmul@product,w
  3671  152E  00C3               	movwf	?___wmul
  3672  152F  0008               	return
  3673  1530                     __end_of___wmul:	
  3674                           
  3675                           	psect	text5
  3676  0B89                     __ptext5:	
  3677 ;; *************** function ___ftmul *****************
  3678 ;; Defined at:
  3679 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  f1              3   41[BANK0 ] float 
  3682 ;;  f2              3   44[BANK0 ] float 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  f3_as_produc    3   52[BANK0 ] unsigned um
  3685 ;;  sign            1   56[BANK0 ] unsigned char 
  3686 ;;  cntr            1   55[BANK0 ] unsigned char 
  3687 ;;  exp             1   51[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  3   41[BANK0 ] float 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3697 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;Total ram usage:       16 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    4
  3704 ;; This function calls:
  3705 ;;		___ftpack
  3706 ;; This function is called by:
  3707 ;;		_fround
  3708 ;;		_scale
  3709 ;;		_sprintf
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function ___ftmul
  3715  0B89                     ___ftmul:	
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3719  0B89  0020               	movlb	0	; select bank0
  3720  0B8A  0849               	movf	___ftmul@f1,w
  3721  0B8B  00CF               	movwf	??___ftmul
  3722  0B8C  084A               	movf	___ftmul@f1+1,w
  3723  0B8D  00D0               	movwf	??___ftmul+1
  3724  0B8E  084B               	movf	___ftmul@f1+2,w
  3725  0B8F  00D1               	movwf	??___ftmul+2
  3726  0B90  1003               	clrc
  3727  0B91  0D50               	rlf	??___ftmul+1,w
  3728  0B92  0D51               	rlf	??___ftmul+2,w
  3729  0B93  00D2               	movwf	??___ftmul+3
  3730  0B94  0852               	movf	??___ftmul+3,w
  3731  0B95  00D3               	movwf	___ftmul@exp
  3732  0B96  0853               	movf	___ftmul@exp,w
  3733  0B97  1D03               	btfss	3,2
  3734  0B98  2BA0               	goto	l1891
  3735  0B99  3000               	movlw	0
  3736  0B9A  00C9               	movwf	?___ftmul
  3737  0B9B  3000               	movlw	0
  3738  0B9C  00CA               	movwf	?___ftmul+1
  3739  0B9D  3000               	movlw	0
  3740  0B9E  00CB               	movwf	?___ftmul+2
  3741  0B9F  0008               	return
  3742  0BA0                     l1891:	
  3743  0BA0  084C               	movf	___ftmul@f2,w
  3744  0BA1  00CF               	movwf	??___ftmul
  3745  0BA2  084D               	movf	___ftmul@f2+1,w
  3746  0BA3  00D0               	movwf	??___ftmul+1
  3747  0BA4  084E               	movf	___ftmul@f2+2,w
  3748  0BA5  00D1               	movwf	??___ftmul+2
  3749  0BA6  1003               	clrc
  3750  0BA7  0D50               	rlf	??___ftmul+1,w
  3751  0BA8  0D51               	rlf	??___ftmul+2,w
  3752  0BA9  00D2               	movwf	??___ftmul+3
  3753  0BAA  0852               	movf	??___ftmul+3,w
  3754  0BAB  00D8               	movwf	___ftmul@sign
  3755  0BAC  0858               	movf	___ftmul@sign,w
  3756  0BAD  1D03               	btfss	3,2
  3757  0BAE  2BB6               	goto	l1897
  3758  0BAF  3000               	movlw	0
  3759  0BB0  00C9               	movwf	?___ftmul
  3760  0BB1  3000               	movlw	0
  3761  0BB2  00CA               	movwf	?___ftmul+1
  3762  0BB3  3000               	movlw	0
  3763  0BB4  00CB               	movwf	?___ftmul+2
  3764  0BB5  0008               	return
  3765  0BB6                     l1897:	
  3766  0BB6  0858               	movf	___ftmul@sign,w
  3767  0BB7  3E7B               	addlw	123
  3768  0BB8  00CF               	movwf	??___ftmul
  3769  0BB9  084F               	movf	??___ftmul,w
  3770  0BBA  07D3               	addwf	___ftmul@exp,f
  3771  0BBB  0849               	movf	___ftmul@f1,w
  3772  0BBC  00CF               	movwf	??___ftmul
  3773  0BBD  084A               	movf	___ftmul@f1+1,w
  3774  0BBE  00D0               	movwf	??___ftmul+1
  3775  0BBF  084B               	movf	___ftmul@f1+2,w
  3776  0BC0  00D1               	movwf	??___ftmul+2
  3777  0BC1  3010               	movlw	16
  3778  0BC2                     u2605:	
  3779  0BC2  36D1               	lsrf	??___ftmul+2,f
  3780  0BC3  0CD0               	rrf	??___ftmul+1,f
  3781  0BC4  0CCF               	rrf	??___ftmul,f
  3782  0BC5  0B89               	decfsz	9,f
  3783  0BC6  2BC2               	goto	u2605
  3784  0BC7  084F               	movf	??___ftmul,w
  3785  0BC8  00D2               	movwf	??___ftmul+3
  3786  0BC9  0852               	movf	??___ftmul+3,w
  3787  0BCA  00D8               	movwf	___ftmul@sign
  3788  0BCB  084C               	movf	___ftmul@f2,w
  3789  0BCC  00CF               	movwf	??___ftmul
  3790  0BCD  084D               	movf	___ftmul@f2+1,w
  3791  0BCE  00D0               	movwf	??___ftmul+1
  3792  0BCF  084E               	movf	___ftmul@f2+2,w
  3793  0BD0  00D1               	movwf	??___ftmul+2
  3794  0BD1  3010               	movlw	16
  3795  0BD2                     u2615:	
  3796  0BD2  36D1               	lsrf	??___ftmul+2,f
  3797  0BD3  0CD0               	rrf	??___ftmul+1,f
  3798  0BD4  0CCF               	rrf	??___ftmul,f
  3799  0BD5  0B89               	decfsz	9,f
  3800  0BD6  2BD2               	goto	u2615
  3801  0BD7  084F               	movf	??___ftmul,w
  3802  0BD8  00D2               	movwf	??___ftmul+3
  3803  0BD9  0852               	movf	??___ftmul+3,w
  3804  0BDA  06D8               	xorwf	___ftmul@sign,f
  3805  0BDB  3080               	movlw	128
  3806  0BDC  00CF               	movwf	??___ftmul
  3807  0BDD  084F               	movf	??___ftmul,w
  3808  0BDE  05D8               	andwf	___ftmul@sign,f
  3809  0BDF  17CA               	bsf	___ftmul@f1+1,7
  3810  0BE0  17CD               	bsf	___ftmul@f2+1,7
  3811  0BE1  30FF               	movlw	255
  3812  0BE2  05CC               	andwf	___ftmul@f2,f
  3813  0BE3  30FF               	movlw	255
  3814  0BE4  05CD               	andwf	___ftmul@f2+1,f
  3815  0BE5  3000               	movlw	0
  3816  0BE6  05CE               	andwf	___ftmul@f2+2,f
  3817  0BE7  3000               	movlw	0
  3818  0BE8  00D4               	movwf	___ftmul@f3_as_product
  3819  0BE9  3000               	movlw	0
  3820  0BEA  00D5               	movwf	___ftmul@f3_as_product+1
  3821  0BEB  3000               	movlw	0
  3822  0BEC  00D6               	movwf	___ftmul@f3_as_product+2
  3823  0BED  3007               	movlw	7
  3824  0BEE  00CF               	movwf	??___ftmul
  3825  0BEF  084F               	movf	??___ftmul,w
  3826  0BF0  00D7               	movwf	___ftmul@cntr
  3827  0BF1                     l1909:	
  3828  0BF1  1C49               	btfss	___ftmul@f1,0
  3829  0BF2  2BF9               	goto	l1913
  3830  0BF3  084C               	movf	___ftmul@f2,w
  3831  0BF4  07D4               	addwf	___ftmul@f3_as_product,f
  3832  0BF5  084D               	movf	___ftmul@f2+1,w
  3833  0BF6  3DD5               	addwfc	___ftmul@f3_as_product+1,f
  3834  0BF7  084E               	movf	___ftmul@f2+2,w
  3835  0BF8  3DD6               	addwfc	___ftmul@f3_as_product+2,f
  3836  0BF9                     l1913:	
  3837  0BF9  3001               	movlw	1
  3838  0BFA                     u2635:	
  3839  0BFA  36CB               	lsrf	___ftmul@f1+2,f
  3840  0BFB  0CCA               	rrf	___ftmul@f1+1,f
  3841  0BFC  0CC9               	rrf	___ftmul@f1,f
  3842  0BFD  0B89               	decfsz	9,f
  3843  0BFE  2BFA               	goto	u2635
  3844  0BFF  3001               	movlw	1
  3845  0C00                     u2645:	
  3846  0C00  35CC               	lslf	___ftmul@f2,f
  3847  0C01  0DCD               	rlf	___ftmul@f2+1,f
  3848  0C02  0DCE               	rlf	___ftmul@f2+2,f
  3849  0C03  0B89               	decfsz	9,f
  3850  0C04  2C00               	goto	u2645
  3851  0C05  3001               	movlw	1
  3852  0C06  02D7               	subwf	___ftmul@cntr,f
  3853  0C07  1D03               	btfss	3,2
  3854  0C08  2BF1               	goto	l1909
  3855  0C09  3009               	movlw	9
  3856  0C0A  00CF               	movwf	??___ftmul
  3857  0C0B  084F               	movf	??___ftmul,w
  3858  0C0C  00D7               	movwf	___ftmul@cntr
  3859  0C0D                     l1921:	
  3860  0C0D  1C49               	btfss	___ftmul@f1,0
  3861  0C0E  2C15               	goto	l1925
  3862  0C0F  084C               	movf	___ftmul@f2,w
  3863  0C10  07D4               	addwf	___ftmul@f3_as_product,f
  3864  0C11  084D               	movf	___ftmul@f2+1,w
  3865  0C12  3DD5               	addwfc	___ftmul@f3_as_product+1,f
  3866  0C13  084E               	movf	___ftmul@f2+2,w
  3867  0C14  3DD6               	addwfc	___ftmul@f3_as_product+2,f
  3868  0C15                     l1925:	
  3869  0C15  3001               	movlw	1
  3870  0C16                     u2675:	
  3871  0C16  36CB               	lsrf	___ftmul@f1+2,f
  3872  0C17  0CCA               	rrf	___ftmul@f1+1,f
  3873  0C18  0CC9               	rrf	___ftmul@f1,f
  3874  0C19  0B89               	decfsz	9,f
  3875  0C1A  2C16               	goto	u2675
  3876  0C1B  3001               	movlw	1
  3877  0C1C                     u2685:	
  3878  0C1C  36D6               	lsrf	___ftmul@f3_as_product+2,f
  3879  0C1D  0CD5               	rrf	___ftmul@f3_as_product+1,f
  3880  0C1E  0CD4               	rrf	___ftmul@f3_as_product,f
  3881  0C1F  0B89               	decfsz	9,f
  3882  0C20  2C1C               	goto	u2685
  3883  0C21  3001               	movlw	1
  3884  0C22  02D7               	subwf	___ftmul@cntr,f
  3885  0C23  1D03               	btfss	3,2
  3886  0C24  2C0D               	goto	l1921
  3887  0C25  0854               	movf	___ftmul@f3_as_product,w
  3888  0C26  00B3               	movwf	___ftpack@arg
  3889  0C27  0855               	movf	___ftmul@f3_as_product+1,w
  3890  0C28  00B4               	movwf	___ftpack@arg+1
  3891  0C29  0856               	movf	___ftmul@f3_as_product+2,w
  3892  0C2A  00B5               	movwf	___ftpack@arg+2
  3893  0C2B  0853               	movf	___ftmul@exp,w
  3894  0C2C  00CF               	movwf	??___ftmul
  3895  0C2D  084F               	movf	??___ftmul,w
  3896  0C2E  00B6               	movwf	___ftpack@exp
  3897  0C2F  0858               	movf	___ftmul@sign,w
  3898  0C30  00D0               	movwf	??___ftmul+1
  3899  0C31  0850               	movf	??___ftmul+1,w
  3900  0C32  00B7               	movwf	___ftpack@sign
  3901  0C33  3188  2007         	fcall	___ftpack
  3902  0C35  0020               	movlb	0	; select bank0
  3903  0C36  0833               	movf	?___ftpack,w
  3904  0C37  00C9               	movwf	?___ftmul
  3905  0C38  0834               	movf	?___ftpack+1,w
  3906  0C39  00CA               	movwf	?___ftmul+1
  3907  0C3A  0835               	movf	?___ftpack+2,w
  3908  0C3B  00CB               	movwf	?___ftmul+2
  3909  0C3C  0008               	return
  3910  0C3D                     __end_of___ftmul:	
  3911                           
  3912                           	psect	text6
  3913  1652                     __ptext6:	
  3914 ;; *************** function ___awmod *****************
  3915 ;; Defined at:
  3916 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  divisor         2   19[BANK0 ] int 
  3919 ;;  dividend        2   21[BANK0 ] int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  sign            1   25[BANK0 ] unsigned char 
  3922 ;;  counter         1   24[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2   19[BANK0 ] int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;Total ram usage:        7 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    3
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_fround
  3943 ;;		_scale
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function ___awmod
  3949  1652                     ___awmod:	
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3953  1652  0020               	movlb	0	; select bank0
  3954  1653  01B9               	clrf	___awmod@sign
  3955  1654  1FB6               	btfss	___awmod@dividend+1,7
  3956  1655  2E5D               	goto	l1785
  3957  1656  09B5               	comf	___awmod@dividend,f
  3958  1657  09B6               	comf	___awmod@dividend+1,f
  3959  1658  0AB5               	incf	___awmod@dividend,f
  3960  1659  1903               	skipnz
  3961  165A  0AB6               	incf	___awmod@dividend+1,f
  3962  165B  01B9               	clrf	___awmod@sign
  3963  165C  0AB9               	incf	___awmod@sign,f
  3964  165D                     l1785:	
  3965  165D  1FB4               	btfss	___awmod@divisor+1,7
  3966  165E  2E64               	goto	l1789
  3967  165F  09B3               	comf	___awmod@divisor,f
  3968  1660  09B4               	comf	___awmod@divisor+1,f
  3969  1661  0AB3               	incf	___awmod@divisor,f
  3970  1662  1903               	skipnz
  3971  1663  0AB4               	incf	___awmod@divisor+1,f
  3972  1664                     l1789:	
  3973  1664  0833               	movf	___awmod@divisor,w
  3974  1665  0434               	iorwf	___awmod@divisor+1,w
  3975  1666  1903               	btfsc	3,2
  3976  1667  2E8B               	goto	l1807
  3977  1668  01B8               	clrf	___awmod@counter
  3978  1669  0AB8               	incf	___awmod@counter,f
  3979  166A                     l1797:	
  3980  166A  1BB4               	btfsc	___awmod@divisor+1,7
  3981  166B  2E76               	goto	l1799
  3982  166C  3001               	movlw	1
  3983  166D                     u2295:	
  3984  166D  35B3               	lslf	___awmod@divisor,f
  3985  166E  0DB4               	rlf	___awmod@divisor+1,f
  3986  166F  0B89               	decfsz	9,f
  3987  1670  2E6D               	goto	u2295
  3988  1671  3001               	movlw	1
  3989  1672  00B7               	movwf	??___awmod
  3990  1673  0837               	movf	??___awmod,w
  3991  1674  07B8               	addwf	___awmod@counter,f
  3992  1675  2E6A               	goto	l1797
  3993  1676                     l1799:	
  3994  1676  0834               	movf	___awmod@divisor+1,w
  3995  1677  0236               	subwf	___awmod@dividend+1,w
  3996  1678  1D03               	skipz
  3997  1679  2E7C               	goto	u2315
  3998  167A  0833               	movf	___awmod@divisor,w
  3999  167B  0235               	subwf	___awmod@dividend,w
  4000  167C                     u2315:	
  4001  167C  1C03               	skipc
  4002  167D  2E82               	goto	l1803
  4003  167E  0833               	movf	___awmod@divisor,w
  4004  167F  02B5               	subwf	___awmod@dividend,f
  4005  1680  0834               	movf	___awmod@divisor+1,w
  4006  1681  3BB6               	subwfb	___awmod@dividend+1,f
  4007  1682                     l1803:	
  4008  1682  3001               	movlw	1
  4009  1683                     u2325:	
  4010  1683  36B4               	lsrf	___awmod@divisor+1,f
  4011  1684  0CB3               	rrf	___awmod@divisor,f
  4012  1685  0B89               	decfsz	9,f
  4013  1686  2E83               	goto	u2325
  4014  1687  3001               	movlw	1
  4015  1688  02B8               	subwf	___awmod@counter,f
  4016  1689  1D03               	btfss	3,2
  4017  168A  2E76               	goto	l1799
  4018  168B                     l1807:	
  4019  168B  0839               	movf	___awmod@sign,w
  4020  168C  1903               	btfsc	3,2
  4021  168D  2E93               	goto	l1811
  4022  168E  09B5               	comf	___awmod@dividend,f
  4023  168F  09B6               	comf	___awmod@dividend+1,f
  4024  1690  0AB5               	incf	___awmod@dividend,f
  4025  1691  1903               	skipnz
  4026  1692  0AB6               	incf	___awmod@dividend+1,f
  4027  1693                     l1811:	
  4028  1693  0836               	movf	___awmod@dividend+1,w
  4029  1694  00B4               	movwf	?___awmod+1
  4030  1695  0835               	movf	___awmod@dividend,w
  4031  1696  00B3               	movwf	?___awmod
  4032  1697  0008               	return
  4033  1698                     __end_of___awmod:	
  4034                           
  4035                           	psect	text7
  4036  1698                     __ptext7:	
  4037 ;; *************** function ___awdiv *****************
  4038 ;; Defined at:
  4039 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  divisor         2   26[BANK0 ] int 
  4042 ;;  dividend        2   28[BANK0 ] int 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  quotient        2   33[BANK0 ] int 
  4045 ;;  sign            1   32[BANK0 ] unsigned char 
  4046 ;;  counter         1   31[BANK0 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2   26[BANK0 ] int 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4056 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;Total ram usage:        9 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    3
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_fround
  4067 ;;		_scale
  4068 ;;		_sprintf
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function ___awdiv
  4074  1698                     ___awdiv:	
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4078  1698  0020               	movlb	0	; select bank0
  4079  1699  01C0               	clrf	___awdiv@sign
  4080  169A  1FBB               	btfss	___awdiv@divisor+1,7
  4081  169B  2EA3               	goto	l1741
  4082  169C  09BA               	comf	___awdiv@divisor,f
  4083  169D  09BB               	comf	___awdiv@divisor+1,f
  4084  169E  0ABA               	incf	___awdiv@divisor,f
  4085  169F  1903               	skipnz
  4086  16A0  0ABB               	incf	___awdiv@divisor+1,f
  4087  16A1  01C0               	clrf	___awdiv@sign
  4088  16A2  0AC0               	incf	___awdiv@sign,f
  4089  16A3                     l1741:	
  4090  16A3  1FBD               	btfss	___awdiv@dividend+1,7
  4091  16A4  2EAE               	goto	l1747
  4092  16A5  09BC               	comf	___awdiv@dividend,f
  4093  16A6  09BD               	comf	___awdiv@dividend+1,f
  4094  16A7  0ABC               	incf	___awdiv@dividend,f
  4095  16A8  1903               	skipnz
  4096  16A9  0ABD               	incf	___awdiv@dividend+1,f
  4097  16AA  3001               	movlw	1
  4098  16AB  00BE               	movwf	??___awdiv
  4099  16AC  083E               	movf	??___awdiv,w
  4100  16AD  06C0               	xorwf	___awdiv@sign,f
  4101  16AE                     l1747:	
  4102  16AE  01C1               	clrf	___awdiv@quotient
  4103  16AF  01C2               	clrf	___awdiv@quotient+1
  4104  16B0  083A               	movf	___awdiv@divisor,w
  4105  16B1  043B               	iorwf	___awdiv@divisor+1,w
  4106  16B2  1903               	btfsc	3,2
  4107  16B3  2EDD               	goto	l1769
  4108  16B4  01BF               	clrf	___awdiv@counter
  4109  16B5  0ABF               	incf	___awdiv@counter,f
  4110  16B6                     l1757:	
  4111  16B6  1BBB               	btfsc	___awdiv@divisor+1,7
  4112  16B7  2EC2               	goto	l1759
  4113  16B8  3001               	movlw	1
  4114  16B9                     u2195:	
  4115  16B9  35BA               	lslf	___awdiv@divisor,f
  4116  16BA  0DBB               	rlf	___awdiv@divisor+1,f
  4117  16BB  0B89               	decfsz	9,f
  4118  16BC  2EB9               	goto	u2195
  4119  16BD  3001               	movlw	1
  4120  16BE  00BE               	movwf	??___awdiv
  4121  16BF  083E               	movf	??___awdiv,w
  4122  16C0  07BF               	addwf	___awdiv@counter,f
  4123  16C1  2EB6               	goto	l1757
  4124  16C2                     l1759:	
  4125  16C2  3001               	movlw	1
  4126  16C3                     u2215:	
  4127  16C3  35C1               	lslf	___awdiv@quotient,f
  4128  16C4  0DC2               	rlf	___awdiv@quotient+1,f
  4129  16C5  0B89               	decfsz	9,f
  4130  16C6  2EC3               	goto	u2215
  4131  16C7  083B               	movf	___awdiv@divisor+1,w
  4132  16C8  023D               	subwf	___awdiv@dividend+1,w
  4133  16C9  1D03               	skipz
  4134  16CA  2ECD               	goto	u2225
  4135  16CB  083A               	movf	___awdiv@divisor,w
  4136  16CC  023C               	subwf	___awdiv@dividend,w
  4137  16CD                     u2225:	
  4138  16CD  1C03               	skipc
  4139  16CE  2ED4               	goto	l1765
  4140  16CF  083A               	movf	___awdiv@divisor,w
  4141  16D0  02BC               	subwf	___awdiv@dividend,f
  4142  16D1  083B               	movf	___awdiv@divisor+1,w
  4143  16D2  3BBD               	subwfb	___awdiv@dividend+1,f
  4144  16D3  1441               	bsf	___awdiv@quotient,0
  4145  16D4                     l1765:	
  4146  16D4  3001               	movlw	1
  4147  16D5                     u2235:	
  4148  16D5  36BB               	lsrf	___awdiv@divisor+1,f
  4149  16D6  0CBA               	rrf	___awdiv@divisor,f
  4150  16D7  0B89               	decfsz	9,f
  4151  16D8  2ED5               	goto	u2235
  4152  16D9  3001               	movlw	1
  4153  16DA  02BF               	subwf	___awdiv@counter,f
  4154  16DB  1D03               	btfss	3,2
  4155  16DC  2EC2               	goto	l1759
  4156  16DD                     l1769:	
  4157  16DD  0840               	movf	___awdiv@sign,w
  4158  16DE  1903               	btfsc	3,2
  4159  16DF  2EE5               	goto	l1773
  4160  16E0  09C1               	comf	___awdiv@quotient,f
  4161  16E1  09C2               	comf	___awdiv@quotient+1,f
  4162  16E2  0AC1               	incf	___awdiv@quotient,f
  4163  16E3  1903               	skipnz
  4164  16E4  0AC2               	incf	___awdiv@quotient+1,f
  4165  16E5                     l1773:	
  4166  16E5  0842               	movf	___awdiv@quotient+1,w
  4167  16E6  00BB               	movwf	?___awdiv+1
  4168  16E7  0841               	movf	___awdiv@quotient,w
  4169  16E8  00BA               	movwf	?___awdiv
  4170  16E9  0008               	return
  4171  16EA                     __end_of___awdiv:	
  4172                           
  4173                           	psect	text8
  4174  0735                     __ptext8:	
  4175 ;; *************** function __tdiv_to_l_ *****************
  4176 ;; Defined at:
  4177 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdivl.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  f1              3   19[BANK0 ] float 
  4180 ;;  f2              3   22[BANK0 ] float 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  quot            4   29[BANK0 ] unsigned long 
  4183 ;;  exp1            1   34[BANK0 ] unsigned char 
  4184 ;;  cntr            1   33[BANK0 ] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  4   19[BANK0 ] unsigned long 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4194 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;Total ram usage:       16 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    3
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_sprintf
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function __tdiv_to_l_
  4210  0735                     __tdiv_to_l_:	
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4214  0735  0020               	movlb	0	; select bank0
  4215  0736  0833               	movf	__tdiv_to_l_@f1,w
  4216  0737  00B9               	movwf	??__tdiv_to_l_
  4217  0738  0834               	movf	__tdiv_to_l_@f1+1,w
  4218  0739  00BA               	movwf	??__tdiv_to_l_+1
  4219  073A  0835               	movf	__tdiv_to_l_@f1+2,w
  4220  073B  00BB               	movwf	??__tdiv_to_l_+2
  4221  073C  1003               	clrc
  4222  073D  0D3A               	rlf	??__tdiv_to_l_+1,w
  4223  073E  0D3B               	rlf	??__tdiv_to_l_+2,w
  4224  073F  00BC               	movwf	??__tdiv_to_l_+3
  4225  0740  083C               	movf	??__tdiv_to_l_+3,w
  4226  0741  00C2               	movwf	__tdiv_to_l_@exp1
  4227  0742  0842               	movf	__tdiv_to_l_@exp1,w
  4228  0743  1D03               	btfss	3,2
  4229  0744  2F4E               	goto	l2049
  4230  0745  3000               	movlw	0
  4231  0746  00B6               	movwf	?__tdiv_to_l_+3
  4232  0747  3000               	movlw	0
  4233  0748  00B5               	movwf	?__tdiv_to_l_+2
  4234  0749  3000               	movlw	0
  4235  074A  00B4               	movwf	?__tdiv_to_l_+1
  4236  074B  3000               	movlw	0
  4237  074C  00B3               	movwf	?__tdiv_to_l_
  4238  074D  0008               	return
  4239  074E                     l2049:	
  4240  074E  0836               	movf	__tdiv_to_l_@f2,w
  4241  074F  00B9               	movwf	??__tdiv_to_l_
  4242  0750  0837               	movf	__tdiv_to_l_@f2+1,w
  4243  0751  00BA               	movwf	??__tdiv_to_l_+1
  4244  0752  0838               	movf	__tdiv_to_l_@f2+2,w
  4245  0753  00BB               	movwf	??__tdiv_to_l_+2
  4246  0754  1003               	clrc
  4247  0755  0D3A               	rlf	??__tdiv_to_l_+1,w
  4248  0756  0D3B               	rlf	??__tdiv_to_l_+2,w
  4249  0757  00BC               	movwf	??__tdiv_to_l_+3
  4250  0758  083C               	movf	??__tdiv_to_l_+3,w
  4251  0759  00C1               	movwf	__tdiv_to_l_@cntr
  4252  075A  0841               	movf	__tdiv_to_l_@cntr,w
  4253  075B  1D03               	btfss	3,2
  4254  075C  2F66               	goto	l486
  4255  075D  3000               	movlw	0
  4256  075E  00B6               	movwf	?__tdiv_to_l_+3
  4257  075F  3000               	movlw	0
  4258  0760  00B5               	movwf	?__tdiv_to_l_+2
  4259  0761  3000               	movlw	0
  4260  0762  00B4               	movwf	?__tdiv_to_l_+1
  4261  0763  3000               	movlw	0
  4262  0764  00B3               	movwf	?__tdiv_to_l_
  4263  0765  0008               	return
  4264  0766                     l486:	
  4265  0766  17B4               	bsf	__tdiv_to_l_@f1+1,7
  4266  0767  30FF               	movlw	255
  4267  0768  05B3               	andwf	__tdiv_to_l_@f1,f
  4268  0769  30FF               	movlw	255
  4269  076A  05B4               	andwf	__tdiv_to_l_@f1+1,f
  4270  076B  3000               	movlw	0
  4271  076C  05B5               	andwf	__tdiv_to_l_@f1+2,f
  4272  076D  17B7               	bsf	__tdiv_to_l_@f2+1,7
  4273  076E  30FF               	movlw	255
  4274  076F  05B6               	andwf	__tdiv_to_l_@f2,f
  4275  0770  30FF               	movlw	255
  4276  0771  05B7               	andwf	__tdiv_to_l_@f2+1,f
  4277  0772  3000               	movlw	0
  4278  0773  05B8               	andwf	__tdiv_to_l_@f2+2,f
  4279  0774  3000               	movlw	0
  4280  0775  00C0               	movwf	__tdiv_to_l_@quot+3
  4281  0776  3000               	movlw	0
  4282  0777  00BF               	movwf	__tdiv_to_l_@quot+2
  4283  0778  3000               	movlw	0
  4284  0779  00BE               	movwf	__tdiv_to_l_@quot+1
  4285  077A  3000               	movlw	0
  4286  077B  00BD               	movwf	__tdiv_to_l_@quot
  4287  077C  307F               	movlw	127
  4288  077D  02C2               	subwf	__tdiv_to_l_@exp1,f
  4289  077E  3098               	movlw	152
  4290  077F  0741               	addwf	__tdiv_to_l_@cntr,w
  4291  0780  00B9               	movwf	??__tdiv_to_l_
  4292  0781  0839               	movf	??__tdiv_to_l_,w
  4293  0782  02C2               	subwf	__tdiv_to_l_@exp1,f
  4294  0783  3018               	movlw	24
  4295  0784  00B9               	movwf	??__tdiv_to_l_
  4296  0785  0839               	movf	??__tdiv_to_l_,w
  4297  0786  00C1               	movwf	__tdiv_to_l_@cntr
  4298  0787                     l2063:	
  4299  0787  3001               	movlw	1
  4300  0788                     u2915:	
  4301  0788  35BD               	lslf	__tdiv_to_l_@quot,f
  4302  0789  0DBE               	rlf	__tdiv_to_l_@quot+1,f
  4303  078A  0DBF               	rlf	__tdiv_to_l_@quot+2,f
  4304  078B  0DC0               	rlf	__tdiv_to_l_@quot+3,f
  4305  078C  0B89               	decfsz	9,f
  4306  078D  2F88               	goto	u2915
  4307  078E  0838               	movf	__tdiv_to_l_@f2+2,w
  4308  078F  0235               	subwf	__tdiv_to_l_@f1+2,w
  4309  0790  1D03               	skipz
  4310  0791  2F98               	goto	u2925
  4311  0792  0837               	movf	__tdiv_to_l_@f2+1,w
  4312  0793  0234               	subwf	__tdiv_to_l_@f1+1,w
  4313  0794  1D03               	skipz
  4314  0795  2F98               	goto	u2925
  4315  0796  0836               	movf	__tdiv_to_l_@f2,w
  4316  0797  0233               	subwf	__tdiv_to_l_@f1,w
  4317  0798                     u2925:	
  4318  0798  1C03               	skipc
  4319  0799  2FA1               	goto	l2071
  4320  079A  0836               	movf	__tdiv_to_l_@f2,w
  4321  079B  02B3               	subwf	__tdiv_to_l_@f1,f
  4322  079C  0837               	movf	__tdiv_to_l_@f2+1,w
  4323  079D  3BB4               	subwfb	__tdiv_to_l_@f1+1,f
  4324  079E  0838               	movf	__tdiv_to_l_@f2+2,w
  4325  079F  3BB5               	subwfb	__tdiv_to_l_@f1+2,f
  4326  07A0  143D               	bsf	__tdiv_to_l_@quot,0
  4327  07A1                     l2071:	
  4328  07A1  3001               	movlw	1
  4329  07A2                     u2935:	
  4330  07A2  35B3               	lslf	__tdiv_to_l_@f1,f
  4331  07A3  0DB4               	rlf	__tdiv_to_l_@f1+1,f
  4332  07A4  0DB5               	rlf	__tdiv_to_l_@f1+2,f
  4333  07A5  0B89               	decfsz	9,f
  4334  07A6  2FA2               	goto	u2935
  4335  07A7  3001               	movlw	1
  4336  07A8  02C1               	subwf	__tdiv_to_l_@cntr,f
  4337  07A9  1D03               	btfss	3,2
  4338  07AA  2F87               	goto	l2063
  4339  07AB  1FC2               	btfss	__tdiv_to_l_@exp1,7
  4340  07AC  2FC9               	goto	l2083
  4341  07AD  0842               	movf	__tdiv_to_l_@exp1,w
  4342  07AE  3A80               	xorlw	128
  4343  07AF  3E97               	addlw	151
  4344  07B0  1803               	skipnc
  4345  07B1  2FBB               	goto	l2081
  4346  07B2  3000               	movlw	0
  4347  07B3  00B6               	movwf	?__tdiv_to_l_+3
  4348  07B4  3000               	movlw	0
  4349  07B5  00B5               	movwf	?__tdiv_to_l_+2
  4350  07B6  3000               	movlw	0
  4351  07B7  00B4               	movwf	?__tdiv_to_l_+1
  4352  07B8  3000               	movlw	0
  4353  07B9  00B3               	movwf	?__tdiv_to_l_
  4354  07BA  0008               	return
  4355  07BB                     l2081:	
  4356  07BB  3001               	movlw	1
  4357  07BC                     u2975:	
  4358  07BC  36C0               	lsrf	__tdiv_to_l_@quot+3,f
  4359  07BD  0CBF               	rrf	__tdiv_to_l_@quot+2,f
  4360  07BE  0CBE               	rrf	__tdiv_to_l_@quot+1,f
  4361  07BF  0CBD               	rrf	__tdiv_to_l_@quot,f
  4362  07C0  0B89               	decfsz	9,f
  4363  07C1  2FBC               	goto	u2975
  4364  07C2  3001               	movlw	1
  4365  07C3  00B9               	movwf	??__tdiv_to_l_
  4366  07C4  0839               	movf	??__tdiv_to_l_,w
  4367  07C5  07C2               	addwf	__tdiv_to_l_@exp1,f
  4368  07C6  1903               	btfsc	3,2
  4369  07C7  2FE2               	goto	l2091
  4370  07C8  2FBB               	goto	l2081
  4371  07C9                     l2083:	
  4372  07C9  3018               	movlw	24
  4373  07CA  0242               	subwf	__tdiv_to_l_@exp1,w
  4374  07CB  1C03               	skipc
  4375  07CC  2FDF               	goto	l496
  4376  07CD  3000               	movlw	0
  4377  07CE  00B6               	movwf	?__tdiv_to_l_+3
  4378  07CF  3000               	movlw	0
  4379  07D0  00B5               	movwf	?__tdiv_to_l_+2
  4380  07D1  3000               	movlw	0
  4381  07D2  00B4               	movwf	?__tdiv_to_l_+1
  4382  07D3  3000               	movlw	0
  4383  07D4  00B3               	movwf	?__tdiv_to_l_
  4384  07D5  0008               	return
  4385  07D6                     l2089:	
  4386  07D6  3001               	movlw	1
  4387  07D7                     u3005:	
  4388  07D7  35BD               	lslf	__tdiv_to_l_@quot,f
  4389  07D8  0DBE               	rlf	__tdiv_to_l_@quot+1,f
  4390  07D9  0DBF               	rlf	__tdiv_to_l_@quot+2,f
  4391  07DA  0DC0               	rlf	__tdiv_to_l_@quot+3,f
  4392  07DB  0B89               	decfsz	9,f
  4393  07DC  2FD7               	goto	u3005
  4394  07DD  3001               	movlw	1
  4395  07DE  02C2               	subwf	__tdiv_to_l_@exp1,f
  4396  07DF                     l496:	
  4397  07DF  0842               	movf	__tdiv_to_l_@exp1,w
  4398  07E0  1D03               	btfss	3,2
  4399  07E1  2FD6               	goto	l2089
  4400  07E2                     l2091:	
  4401  07E2  0840               	movf	__tdiv_to_l_@quot+3,w
  4402  07E3  00B6               	movwf	?__tdiv_to_l_+3
  4403  07E4  083F               	movf	__tdiv_to_l_@quot+2,w
  4404  07E5  00B5               	movwf	?__tdiv_to_l_+2
  4405  07E6  083E               	movf	__tdiv_to_l_@quot+1,w
  4406  07E7  00B4               	movwf	?__tdiv_to_l_+1
  4407  07E8  083D               	movf	__tdiv_to_l_@quot,w
  4408  07E9  00B3               	movwf	?__tdiv_to_l_
  4409  07EA  0008               	return
  4410  07EB                     __end_of__tdiv_to_l_:	
  4411                           
  4412                           	psect	text9
  4413  0D41                     __ptext9:	
  4414 ;; *************** function __div_to_l_ *****************
  4415 ;; Defined at:
  4416 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fldivl.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  f1              3   19[BANK0 ] unsigned long 
  4419 ;;  f2              3   22[BANK0 ] unsigned long 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  quot            4   33[BANK0 ] unsigned long 
  4422 ;;  exp1            1   38[BANK0 ] unsigned char 
  4423 ;;  cntr            1   37[BANK0 ] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  4   19[BANK0 ] unsigned long 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4433 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;Total ram usage:       20 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    3
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_sprintf
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function __div_to_l_
  4449  0D41                     __div_to_l_:	
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  4453  0D41  3033               	movlw	low (__div_to_l_@f1| 0)
  4454  0D42  0086               	movwf	6
  4455  0D43  0187               	clrf	7
  4456  0D44  3F40               	moviw [0]fsr1
  4457  0D45  0020               	movlb	0	; select bank0
  4458  0D46  00B9               	movwf	??__div_to_l_
  4459  0D47  3F41               	moviw [1]fsr1
  4460  0D48  00BA               	movwf	??__div_to_l_+1
  4461  0D49  3F42               	moviw [2]fsr1
  4462  0D4A  00BB               	movwf	??__div_to_l_+2
  4463  0D4B  3F43               	moviw [3]fsr1
  4464  0D4C  00BC               	movwf	??__div_to_l_+3
  4465  0D4D  1003               	clrc
  4466  0D4E  0D3B               	rlf	??__div_to_l_+2,w
  4467  0D4F  0D3C               	rlf	??__div_to_l_+3,w
  4468  0D50  00BD               	movwf	??__div_to_l_+4
  4469  0D51  083D               	movf	??__div_to_l_+4,w
  4470  0D52  00C6               	movwf	__div_to_l_@exp1
  4471  0D53  0846               	movf	__div_to_l_@exp1,w
  4472  0D54  1D03               	btfss	3,2
  4473  0D55  2D5F               	goto	l2101
  4474  0D56  3000               	movlw	0
  4475  0D57  00B6               	movwf	?__div_to_l_+3
  4476  0D58  3000               	movlw	0
  4477  0D59  00B5               	movwf	?__div_to_l_+2
  4478  0D5A  3000               	movlw	0
  4479  0D5B  00B4               	movwf	?__div_to_l_+1
  4480  0D5C  3000               	movlw	0
  4481  0D5D  00B3               	movwf	?__div_to_l_
  4482  0D5E  0008               	return
  4483  0D5F                     l2101:	
  4484  0D5F  3036               	movlw	low (__div_to_l_@f2| 0)
  4485  0D60  0086               	movwf	6
  4486  0D61  0187               	clrf	7
  4487  0D62  3F40               	moviw [0]fsr1
  4488  0D63  00B9               	movwf	??__div_to_l_
  4489  0D64  3F41               	moviw [1]fsr1
  4490  0D65  00BA               	movwf	??__div_to_l_+1
  4491  0D66  3F42               	moviw [2]fsr1
  4492  0D67  00BB               	movwf	??__div_to_l_+2
  4493  0D68  3F43               	moviw [3]fsr1
  4494  0D69  00BC               	movwf	??__div_to_l_+3
  4495  0D6A  1003               	clrc
  4496  0D6B  0D3B               	rlf	??__div_to_l_+2,w
  4497  0D6C  0D3C               	rlf	??__div_to_l_+3,w
  4498  0D6D  00BD               	movwf	??__div_to_l_+4
  4499  0D6E  083D               	movf	??__div_to_l_+4,w
  4500  0D6F  00C5               	movwf	__div_to_l_@cntr
  4501  0D70  0845               	movf	__div_to_l_@cntr,w
  4502  0D71  1D03               	btfss	3,2
  4503  0D72  2D7C               	goto	l2107
  4504  0D73  3000               	movlw	0
  4505  0D74  00B6               	movwf	?__div_to_l_+3
  4506  0D75  3000               	movlw	0
  4507  0D76  00B5               	movwf	?__div_to_l_+2
  4508  0D77  3000               	movlw	0
  4509  0D78  00B4               	movwf	?__div_to_l_+1
  4510  0D79  3000               	movlw	0
  4511  0D7A  00B3               	movwf	?__div_to_l_
  4512  0D7B  0008               	return
  4513  0D7C                     l2107:	
  4514  0D7C  3033               	movlw	low (__div_to_l_@f1| 0)
  4515  0D7D  0086               	movwf	6
  4516  0D7E  0187               	clrf	7
  4517  0D7F  3000               	movlw	0
  4518  0D80  0481               	iorwf	1,f
  4519  0D81  3141               	addfsr 1,1
  4520  0D82  3000               	movlw	0
  4521  0D83  0481               	iorwf	1,f
  4522  0D84  3141               	addfsr 1,1
  4523  0D85  3080               	movlw	128
  4524  0D86  0481               	iorwf	1,f
  4525  0D87  3141               	addfsr 1,1
  4526  0D88  3000               	movlw	0
  4527  0D89  0481               	iorwf	1,f
  4528  0D8A  3033               	movlw	low (__div_to_l_@f1| 0)
  4529  0D8B  0086               	movwf	6
  4530  0D8C  0187               	clrf	7
  4531  0D8D  30FF               	movlw	255
  4532  0D8E  0581               	andwf	1,f
  4533  0D8F  3141               	addfsr 1,1
  4534  0D90  30FF               	movlw	255
  4535  0D91  0581               	andwf	1,f
  4536  0D92  3141               	addfsr 1,1
  4537  0D93  30FF               	movlw	255
  4538  0D94  0581               	andwf	1,f
  4539  0D95  3141               	addfsr 1,1
  4540  0D96  3000               	movlw	0
  4541  0D97  0581               	andwf	1,f
  4542  0D98  3036               	movlw	low (__div_to_l_@f2| 0)
  4543  0D99  0086               	movwf	6
  4544  0D9A  0187               	clrf	7
  4545  0D9B  3000               	movlw	0
  4546  0D9C  0481               	iorwf	1,f
  4547  0D9D  3141               	addfsr 1,1
  4548  0D9E  3000               	movlw	0
  4549  0D9F  0481               	iorwf	1,f
  4550  0DA0  3141               	addfsr 1,1
  4551  0DA1  3080               	movlw	128
  4552  0DA2  0481               	iorwf	1,f
  4553  0DA3  3141               	addfsr 1,1
  4554  0DA4  3000               	movlw	0
  4555  0DA5  0481               	iorwf	1,f
  4556  0DA6  3036               	movlw	low (__div_to_l_@f2| 0)
  4557  0DA7  0086               	movwf	6
  4558  0DA8  0187               	clrf	7
  4559  0DA9  30FF               	movlw	255
  4560  0DAA  0581               	andwf	1,f
  4561  0DAB  3141               	addfsr 1,1
  4562  0DAC  30FF               	movlw	255
  4563  0DAD  0581               	andwf	1,f
  4564  0DAE  3141               	addfsr 1,1
  4565  0DAF  30FF               	movlw	255
  4566  0DB0  0581               	andwf	1,f
  4567  0DB1  3141               	addfsr 1,1
  4568  0DB2  3000               	movlw	0
  4569  0DB3  0581               	andwf	1,f
  4570  0DB4  3000               	movlw	0
  4571  0DB5  00C4               	movwf	__div_to_l_@quot+3
  4572  0DB6  3000               	movlw	0
  4573  0DB7  00C3               	movwf	__div_to_l_@quot+2
  4574  0DB8  3000               	movlw	0
  4575  0DB9  00C2               	movwf	__div_to_l_@quot+1
  4576  0DBA  3000               	movlw	0
  4577  0DBB  00C1               	movwf	__div_to_l_@quot
  4578  0DBC  307F               	movlw	127
  4579  0DBD  02C6               	subwf	__div_to_l_@exp1,f
  4580  0DBE  30A0               	movlw	160
  4581  0DBF  0745               	addwf	__div_to_l_@cntr,w
  4582  0DC0  00B9               	movwf	??__div_to_l_
  4583  0DC1  0839               	movf	??__div_to_l_,w
  4584  0DC2  02C6               	subwf	__div_to_l_@exp1,f
  4585  0DC3  3020               	movlw	32
  4586  0DC4  00B9               	movwf	??__div_to_l_
  4587  0DC5  0839               	movf	??__div_to_l_,w
  4588  0DC6  00C5               	movwf	__div_to_l_@cntr
  4589  0DC7                     l2117:	
  4590  0DC7  3001               	movlw	1
  4591  0DC8                     u3045:	
  4592  0DC8  35C1               	lslf	__div_to_l_@quot,f
  4593  0DC9  0DC2               	rlf	__div_to_l_@quot+1,f
  4594  0DCA  0DC3               	rlf	__div_to_l_@quot+2,f
  4595  0DCB  0DC4               	rlf	__div_to_l_@quot+3,f
  4596  0DCC  0B89               	decfsz	9,f
  4597  0DCD  2DC8               	goto	u3045
  4598  0DCE  3036               	movlw	low (__div_to_l_@f2| 0)
  4599  0DCF  0086               	movwf	6
  4600  0DD0  0187               	clrf	7
  4601  0DD1  3F40               	moviw [0]fsr1
  4602  0DD2  00B9               	movwf	??__div_to_l_
  4603  0DD3  3F41               	moviw [1]fsr1
  4604  0DD4  00BA               	movwf	??__div_to_l_+1
  4605  0DD5  3F42               	moviw [2]fsr1
  4606  0DD6  00BB               	movwf	??__div_to_l_+2
  4607  0DD7  3F43               	moviw [3]fsr1
  4608  0DD8  00BC               	movwf	??__div_to_l_+3
  4609  0DD9  3033               	movlw	low (__div_to_l_@f1| 0)
  4610  0DDA  0086               	movwf	6
  4611  0DDB  0187               	clrf	7
  4612  0DDC  3F40               	moviw [0]fsr1
  4613  0DDD  00BD               	movwf	??__div_to_l_+4
  4614  0DDE  3F41               	moviw [1]fsr1
  4615  0DDF  00BE               	movwf	??__div_to_l_+5
  4616  0DE0  3F42               	moviw [2]fsr1
  4617  0DE1  00BF               	movwf	??__div_to_l_+6
  4618  0DE2  3F43               	moviw [3]fsr1
  4619  0DE3  00C0               	movwf	??__div_to_l_+7
  4620  0DE4  083C               	movf	??__div_to_l_+3,w
  4621  0DE5  0240               	subwf	??__div_to_l_+7,w
  4622  0DE6  1D03               	skipz
  4623  0DE7  2DF2               	goto	u3055
  4624  0DE8  083B               	movf	??__div_to_l_+2,w
  4625  0DE9  023F               	subwf	??__div_to_l_+6,w
  4626  0DEA  1D03               	skipz
  4627  0DEB  2DF2               	goto	u3055
  4628  0DEC  083A               	movf	??__div_to_l_+1,w
  4629  0DED  023E               	subwf	??__div_to_l_+5,w
  4630  0DEE  1D03               	skipz
  4631  0DEF  2DF2               	goto	u3055
  4632  0DF0  0839               	movf	??__div_to_l_,w
  4633  0DF1  023D               	subwf	??__div_to_l_+4,w
  4634  0DF2                     u3055:	
  4635  0DF2  1C03               	skipc
  4636  0DF3  2E0F               	goto	l2125
  4637  0DF4  3036               	movlw	low (__div_to_l_@f2| 0)
  4638  0DF5  0086               	movwf	6
  4639  0DF6  0187               	clrf	7
  4640  0DF7  3F40               	moviw [0]fsr1
  4641  0DF8  00B9               	movwf	??__div_to_l_
  4642  0DF9  3F41               	moviw [1]fsr1
  4643  0DFA  00BA               	movwf	??__div_to_l_+1
  4644  0DFB  3F42               	moviw [2]fsr1
  4645  0DFC  00BB               	movwf	??__div_to_l_+2
  4646  0DFD  3F43               	moviw [3]fsr1
  4647  0DFE  00BC               	movwf	??__div_to_l_+3
  4648  0DFF  3033               	movlw	low (__div_to_l_@f1| 0)
  4649  0E00  0086               	movwf	6
  4650  0E01  0187               	clrf	7
  4651  0E02  0839               	movf	??__div_to_l_,w
  4652  0E03  0281               	subwf	1,f
  4653  0E04  3141               	addfsr 1,1
  4654  0E05  083A               	movf	??__div_to_l_+1,w
  4655  0E06  3B81               	subwfb	1,f
  4656  0E07  3141               	addfsr 1,1
  4657  0E08  083B               	movf	??__div_to_l_+2,w
  4658  0E09  3B81               	subwfb	1,f
  4659  0E0A  3141               	addfsr 1,1
  4660  0E0B  083C               	movf	??__div_to_l_+3,w
  4661  0E0C  3B81               	subwfb	1,f
  4662  0E0D  317D               	addfsr 1,-3
  4663  0E0E  1441               	bsf	__div_to_l_@quot,0
  4664  0E0F                     l2125:	
  4665  0E0F  3033               	movlw	low (__div_to_l_@f1| 0)
  4666  0E10  0086               	movwf	6
  4667  0E11  0187               	clrf	7
  4668  0E12  3581               	lslf	1,f
  4669  0E13  3141               	addfsr 1,1
  4670  0E14  0D81               	rlf	1,f
  4671  0E15  3141               	addfsr 1,1
  4672  0E16  0D81               	rlf	1,f
  4673  0E17  3141               	addfsr 1,1
  4674  0E18  0D81               	rlf	1,f
  4675  0E19  317D               	addfsr 1,-3
  4676  0E1A  3001               	movlw	1
  4677  0E1B  02C5               	subwf	__div_to_l_@cntr,f
  4678  0E1C  1D03               	btfss	3,2
  4679  0E1D  2DC7               	goto	l2117
  4680  0E1E  1FC6               	btfss	__div_to_l_@exp1,7
  4681  0E1F  2E3C               	goto	l2137
  4682  0E20  0846               	movf	__div_to_l_@exp1,w
  4683  0E21  3A80               	xorlw	128
  4684  0E22  3E9F               	addlw	159
  4685  0E23  1803               	skipnc
  4686  0E24  2E2E               	goto	l2135
  4687  0E25  3000               	movlw	0
  4688  0E26  00B6               	movwf	?__div_to_l_+3
  4689  0E27  3000               	movlw	0
  4690  0E28  00B5               	movwf	?__div_to_l_+2
  4691  0E29  3000               	movlw	0
  4692  0E2A  00B4               	movwf	?__div_to_l_+1
  4693  0E2B  3000               	movlw	0
  4694  0E2C  00B3               	movwf	?__div_to_l_
  4695  0E2D  0008               	return
  4696  0E2E                     l2135:	
  4697  0E2E  3001               	movlw	1
  4698  0E2F                     u3095:	
  4699  0E2F  36C4               	lsrf	__div_to_l_@quot+3,f
  4700  0E30  0CC3               	rrf	__div_to_l_@quot+2,f
  4701  0E31  0CC2               	rrf	__div_to_l_@quot+1,f
  4702  0E32  0CC1               	rrf	__div_to_l_@quot,f
  4703  0E33  0B89               	decfsz	9,f
  4704  0E34  2E2F               	goto	u3095
  4705  0E35  3001               	movlw	1
  4706  0E36  00B9               	movwf	??__div_to_l_
  4707  0E37  0839               	movf	??__div_to_l_,w
  4708  0E38  07C6               	addwf	__div_to_l_@exp1,f
  4709  0E39  1903               	btfsc	3,2
  4710  0E3A  2E55               	goto	l2145
  4711  0E3B  2E2E               	goto	l2135
  4712  0E3C                     l2137:	
  4713  0E3C  3020               	movlw	32
  4714  0E3D  0246               	subwf	__div_to_l_@exp1,w
  4715  0E3E  1C03               	skipc
  4716  0E3F  2E52               	goto	l417
  4717  0E40  3000               	movlw	0
  4718  0E41  00B6               	movwf	?__div_to_l_+3
  4719  0E42  3000               	movlw	0
  4720  0E43  00B5               	movwf	?__div_to_l_+2
  4721  0E44  3000               	movlw	0
  4722  0E45  00B4               	movwf	?__div_to_l_+1
  4723  0E46  3000               	movlw	0
  4724  0E47  00B3               	movwf	?__div_to_l_
  4725  0E48  0008               	return
  4726  0E49                     l2143:	
  4727  0E49  3001               	movlw	1
  4728  0E4A                     u3125:	
  4729  0E4A  35C1               	lslf	__div_to_l_@quot,f
  4730  0E4B  0DC2               	rlf	__div_to_l_@quot+1,f
  4731  0E4C  0DC3               	rlf	__div_to_l_@quot+2,f
  4732  0E4D  0DC4               	rlf	__div_to_l_@quot+3,f
  4733  0E4E  0B89               	decfsz	9,f
  4734  0E4F  2E4A               	goto	u3125
  4735  0E50  3001               	movlw	1
  4736  0E51  02C6               	subwf	__div_to_l_@exp1,f
  4737  0E52                     l417:	
  4738  0E52  0846               	movf	__div_to_l_@exp1,w
  4739  0E53  1D03               	btfss	3,2
  4740  0E54  2E49               	goto	l2143
  4741  0E55                     l2145:	
  4742  0E55  0844               	movf	__div_to_l_@quot+3,w
  4743  0E56  00B6               	movwf	?__div_to_l_+3
  4744  0E57  0843               	movf	__div_to_l_@quot+2,w
  4745  0E58  00B5               	movwf	?__div_to_l_+2
  4746  0E59  0842               	movf	__div_to_l_@quot+1,w
  4747  0E5A  00B4               	movwf	?__div_to_l_+1
  4748  0E5B  0841               	movf	__div_to_l_@quot,w
  4749  0E5C  00B3               	movwf	?__div_to_l_
  4750  0E5D  0008               	return
  4751  0E5E                     __end_of__div_to_l_:	
  4752                           
  4753                           	psect	text10
  4754  156E                     __ptext10:	
  4755 ;; *************** function ___lltoft *****************
  4756 ;; Defined at:
  4757 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lltoft.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  c               4   27[BANK0 ] unsigned long 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  exp             1   32[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  3   27[BANK0 ] float 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0, pclath, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;Total ram usage:        6 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    4
  4778 ;; This function calls:
  4779 ;;		___ftpack
  4780 ;; This function is called by:
  4781 ;;		_sprintf
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function ___lltoft
  4787  156E                     ___lltoft:	
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4791  156E  308E               	movlw	142
  4792  156F  0020               	movlb	0	; select bank0
  4793  1570  00BF               	movwf	??___lltoft
  4794  1571  083F               	movf	??___lltoft,w
  4795  1572  00C0               	movwf	___lltoft@exp
  4796  1573                     l2275:	
  4797  1573  30FF               	movlw	255
  4798  1574  053E               	andwf	___lltoft@c+3,w
  4799  1575  1903               	btfsc	3,2
  4800  1576  2D83               	goto	l2277
  4801  1577  3001               	movlw	1
  4802  1578                     u3425:	
  4803  1578  36BE               	lsrf	___lltoft@c+3,f
  4804  1579  0CBD               	rrf	___lltoft@c+2,f
  4805  157A  0CBC               	rrf	___lltoft@c+1,f
  4806  157B  0CBB               	rrf	___lltoft@c,f
  4807  157C  0B89               	decfsz	9,f
  4808  157D  2D78               	goto	u3425
  4809  157E  3001               	movlw	1
  4810  157F  00BF               	movwf	??___lltoft
  4811  1580  083F               	movf	??___lltoft,w
  4812  1581  07C0               	addwf	___lltoft@exp,f
  4813  1582  2D73               	goto	l2275
  4814  1583                     l2277:	
  4815  1583  083B               	movf	___lltoft@c,w
  4816  1584  00B3               	movwf	___ftpack@arg
  4817  1585  083C               	movf	___lltoft@c+1,w
  4818  1586  00B4               	movwf	___ftpack@arg+1
  4819  1587  083D               	movf	___lltoft@c+2,w
  4820  1588  00B5               	movwf	___ftpack@arg+2
  4821  1589  0840               	movf	___lltoft@exp,w
  4822  158A  00BF               	movwf	??___lltoft
  4823  158B  083F               	movf	??___lltoft,w
  4824  158C  00B6               	movwf	___ftpack@exp
  4825  158D  01B7               	clrf	___ftpack@sign
  4826  158E  3188  2007         	fcall	___ftpack
  4827  1590  0020               	movlb	0	; select bank0
  4828  1591  0833               	movf	?___ftpack,w
  4829  1592  00BB               	movwf	?___lltoft
  4830  1593  0834               	movf	?___ftpack+1,w
  4831  1594  00BC               	movwf	?___lltoft+1
  4832  1595  0835               	movf	?___ftpack+2,w
  4833  1596  00BD               	movwf	?___lltoft+2
  4834  1597  0008               	return
  4835  1598                     __end_of___lltoft:	
  4836                           
  4837                           	psect	text11
  4838  160F                     __ptext11:	
  4839 ;; *************** function ___llmod *****************
  4840 ;; Defined at:
  4841 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\llmod.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  divisor         4   19[BANK0 ] unsigned long 
  4844 ;;  dividend        4   23[BANK0 ] unsigned long 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  counter         1   28[BANK0 ] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  4   19[BANK0 ] unsigned long 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4856 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;Total ram usage:       10 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    3
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_sprintf
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function ___llmod
  4872  160F                     ___llmod:	
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4876  160F  0020               	movlb	0	; select bank0
  4877  1610  0836               	movf	___llmod@divisor+3,w
  4878  1611  0435               	iorwf	___llmod@divisor+2,w
  4879  1612  0434               	iorwf	___llmod@divisor+1,w
  4880  1613  0433               	iorwf	___llmod@divisor,w
  4881  1614  1903               	skipnz
  4882  1615  2E49               	goto	l2267
  4883  1616  01BC               	clrf	___llmod@counter
  4884  1617  0ABC               	incf	___llmod@counter,f
  4885  1618                     l2257:	
  4886  1618  1BB6               	btfsc	___llmod@divisor+3,7
  4887  1619  2E26               	goto	l2259
  4888  161A  3001               	movlw	1
  4889  161B                     u3375:	
  4890  161B  35B3               	lslf	___llmod@divisor,f
  4891  161C  0DB4               	rlf	___llmod@divisor+1,f
  4892  161D  0DB5               	rlf	___llmod@divisor+2,f
  4893  161E  0DB6               	rlf	___llmod@divisor+3,f
  4894  161F  0B89               	decfsz	9,f
  4895  1620  2E1B               	goto	u3375
  4896  1621  3001               	movlw	1
  4897  1622  00BB               	movwf	??___llmod
  4898  1623  083B               	movf	??___llmod,w
  4899  1624  07BC               	addwf	___llmod@counter,f
  4900  1625  2E18               	goto	l2257
  4901  1626                     l2259:	
  4902  1626  0836               	movf	___llmod@divisor+3,w
  4903  1627  023A               	subwf	___llmod@dividend+3,w
  4904  1628  1D03               	skipz
  4905  1629  2E34               	goto	u3395
  4906  162A  0835               	movf	___llmod@divisor+2,w
  4907  162B  0239               	subwf	___llmod@dividend+2,w
  4908  162C  1D03               	skipz
  4909  162D  2E34               	goto	u3395
  4910  162E  0834               	movf	___llmod@divisor+1,w
  4911  162F  0238               	subwf	___llmod@dividend+1,w
  4912  1630  1D03               	skipz
  4913  1631  2E34               	goto	u3395
  4914  1632  0833               	movf	___llmod@divisor,w
  4915  1633  0237               	subwf	___llmod@dividend,w
  4916  1634                     u3395:	
  4917  1634  1C03               	skipc
  4918  1635  2E3E               	goto	l2263
  4919  1636  0833               	movf	___llmod@divisor,w
  4920  1637  02B7               	subwf	___llmod@dividend,f
  4921  1638  0834               	movf	___llmod@divisor+1,w
  4922  1639  3BB8               	subwfb	___llmod@dividend+1,f
  4923  163A  0835               	movf	___llmod@divisor+2,w
  4924  163B  3BB9               	subwfb	___llmod@dividend+2,f
  4925  163C  0836               	movf	___llmod@divisor+3,w
  4926  163D  3BBA               	subwfb	___llmod@dividend+3,f
  4927  163E                     l2263:	
  4928  163E  3001               	movlw	1
  4929  163F                     u3405:	
  4930  163F  36B6               	lsrf	___llmod@divisor+3,f
  4931  1640  0CB5               	rrf	___llmod@divisor+2,f
  4932  1641  0CB4               	rrf	___llmod@divisor+1,f
  4933  1642  0CB3               	rrf	___llmod@divisor,f
  4934  1643  0B89               	decfsz	9,f
  4935  1644  2E3F               	goto	u3405
  4936  1645  3001               	movlw	1
  4937  1646  02BC               	subwf	___llmod@counter,f
  4938  1647  1D03               	btfss	3,2
  4939  1648  2E26               	goto	l2259
  4940  1649                     l2267:	
  4941  1649  083A               	movf	___llmod@dividend+3,w
  4942  164A  00B6               	movwf	?___llmod+3
  4943  164B  0839               	movf	___llmod@dividend+2,w
  4944  164C  00B5               	movwf	?___llmod+2
  4945  164D  0838               	movf	___llmod@dividend+1,w
  4946  164E  00B4               	movwf	?___llmod+1
  4947  164F  0837               	movf	___llmod@dividend,w
  4948  1650  00B3               	movwf	?___llmod
  4949  1651  0008               	return
  4950  1652                     __end_of___llmod:	
  4951                           
  4952                           	psect	text12
  4953  16EA                     __ptext12:	
  4954 ;; *************** function ___lldiv *****************
  4955 ;; Defined at:
  4956 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  divisor         4   19[BANK0 ] unsigned long 
  4959 ;;  dividend        4   23[BANK0 ] unsigned long 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  quotient        4   28[BANK0 ] unsigned long 
  4962 ;;  counter         1   32[BANK0 ] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  4   19[BANK0 ] unsigned long 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4972 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;Total ram usage:       14 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    3
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_sprintf
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function ___lldiv
  4988  16EA                     ___lldiv:	
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4992  16EA  3000               	movlw	0
  4993  16EB  0020               	movlb	0	; select bank0
  4994  16EC  00BF               	movwf	___lldiv@quotient+3
  4995  16ED  3000               	movlw	0
  4996  16EE  00BE               	movwf	___lldiv@quotient+2
  4997  16EF  3000               	movlw	0
  4998  16F0  00BD               	movwf	___lldiv@quotient+1
  4999  16F1  3000               	movlw	0
  5000  16F2  00BC               	movwf	___lldiv@quotient
  5001  16F3  0836               	movf	___lldiv@divisor+3,w
  5002  16F4  0435               	iorwf	___lldiv@divisor+2,w
  5003  16F5  0434               	iorwf	___lldiv@divisor+1,w
  5004  16F6  0433               	iorwf	___lldiv@divisor,w
  5005  16F7  1903               	skipnz
  5006  16F8  2F34               	goto	l2247
  5007  16F9  01C0               	clrf	___lldiv@counter
  5008  16FA  0AC0               	incf	___lldiv@counter,f
  5009  16FB                     l2233:	
  5010  16FB  1BB6               	btfsc	___lldiv@divisor+3,7
  5011  16FC  2F09               	goto	l2235
  5012  16FD  3001               	movlw	1
  5013  16FE                     u3305:	
  5014  16FE  35B3               	lslf	___lldiv@divisor,f
  5015  16FF  0DB4               	rlf	___lldiv@divisor+1,f
  5016  1700  0DB5               	rlf	___lldiv@divisor+2,f
  5017  1701  0DB6               	rlf	___lldiv@divisor+3,f
  5018  1702  0B89               	decfsz	9,f
  5019  1703  2EFE               	goto	u3305
  5020  1704  3001               	movlw	1
  5021  1705  00BB               	movwf	??___lldiv
  5022  1706  083B               	movf	??___lldiv,w
  5023  1707  07C0               	addwf	___lldiv@counter,f
  5024  1708  2EFB               	goto	l2233
  5025  1709                     l2235:	
  5026  1709  3001               	movlw	1
  5027  170A                     u3325:	
  5028  170A  35BC               	lslf	___lldiv@quotient,f
  5029  170B  0DBD               	rlf	___lldiv@quotient+1,f
  5030  170C  0DBE               	rlf	___lldiv@quotient+2,f
  5031  170D  0DBF               	rlf	___lldiv@quotient+3,f
  5032  170E  0B89               	decfsz	9,f
  5033  170F  2F0A               	goto	u3325
  5034  1710  0836               	movf	___lldiv@divisor+3,w
  5035  1711  023A               	subwf	___lldiv@dividend+3,w
  5036  1712  1D03               	skipz
  5037  1713  2F1E               	goto	u3335
  5038  1714  0835               	movf	___lldiv@divisor+2,w
  5039  1715  0239               	subwf	___lldiv@dividend+2,w
  5040  1716  1D03               	skipz
  5041  1717  2F1E               	goto	u3335
  5042  1718  0834               	movf	___lldiv@divisor+1,w
  5043  1719  0238               	subwf	___lldiv@dividend+1,w
  5044  171A  1D03               	skipz
  5045  171B  2F1E               	goto	u3335
  5046  171C  0833               	movf	___lldiv@divisor,w
  5047  171D  0237               	subwf	___lldiv@dividend,w
  5048  171E                     u3335:	
  5049  171E  1C03               	skipc
  5050  171F  2F29               	goto	l2243
  5051  1720  0833               	movf	___lldiv@divisor,w
  5052  1721  02B7               	subwf	___lldiv@dividend,f
  5053  1722  0834               	movf	___lldiv@divisor+1,w
  5054  1723  3BB8               	subwfb	___lldiv@dividend+1,f
  5055  1724  0835               	movf	___lldiv@divisor+2,w
  5056  1725  3BB9               	subwfb	___lldiv@dividend+2,f
  5057  1726  0836               	movf	___lldiv@divisor+3,w
  5058  1727  3BBA               	subwfb	___lldiv@dividend+3,f
  5059  1728  143C               	bsf	___lldiv@quotient,0
  5060  1729                     l2243:	
  5061  1729  3001               	movlw	1
  5062  172A                     u3345:	
  5063  172A  36B6               	lsrf	___lldiv@divisor+3,f
  5064  172B  0CB5               	rrf	___lldiv@divisor+2,f
  5065  172C  0CB4               	rrf	___lldiv@divisor+1,f
  5066  172D  0CB3               	rrf	___lldiv@divisor,f
  5067  172E  0B89               	decfsz	9,f
  5068  172F  2F2A               	goto	u3345
  5069  1730  3001               	movlw	1
  5070  1731  02C0               	subwf	___lldiv@counter,f
  5071  1732  1D03               	btfss	3,2
  5072  1733  2F09               	goto	l2235
  5073  1734                     l2247:	
  5074  1734  083F               	movf	___lldiv@quotient+3,w
  5075  1735  00B6               	movwf	?___lldiv+3
  5076  1736  083E               	movf	___lldiv@quotient+2,w
  5077  1737  00B5               	movwf	?___lldiv+2
  5078  1738  083D               	movf	___lldiv@quotient+1,w
  5079  1739  00B4               	movwf	?___lldiv+1
  5080  173A  083C               	movf	___lldiv@quotient,w
  5081  173B  00B3               	movwf	?___lldiv
  5082  173C  0008               	return
  5083  173D                     __end_of___lldiv:	
  5084                           
  5085                           	psect	text13
  5086  086C                     __ptext13:	
  5087 ;; *************** function ___fttol *****************
  5088 ;; Defined at:
  5089 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  f1              3    6[BANK1 ] float 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  lval            4   15[BANK1 ] unsigned long 
  5094 ;;  exp1            1   19[BANK1 ] unsigned char 
  5095 ;;  sign1           1   14[BANK1 ] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  4    6[BANK1 ] long 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5105 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;Total ram usage:       14 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    3
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_sprintf
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           
  5120                           ;psect for function ___fttol
  5121  086C                     ___fttol:	
  5122                           
  5123                           ;incstack = 0
  5124                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5125  086C  0021               	movlb	1	; select bank1
  5126  086D  0826               	movf	___fttol@f1^(0+128),w
  5127  086E  00AA               	movwf	??___fttol^(0+128)
  5128  086F  0827               	movf	(___fttol@f1+1)^(0+128),w
  5129  0870  00AB               	movwf	(??___fttol^(0+128)+1)
  5130  0871  0828               	movf	(___fttol@f1+2)^(0+128),w
  5131  0872  00AC               	movwf	(??___fttol^(0+128)+2)
  5132  0873  1003               	clrc
  5133  0874  0D2B               	rlf	(??___fttol^(0+128)+1),w
  5134  0875  0D2C               	rlf	(??___fttol^(0+128)+2),w
  5135  0876  00AD               	movwf	(??___fttol+3)^(0+128)
  5136  0877  082D               	movf	(??___fttol+3)^(0+128),w
  5137  0878  00B3               	movwf	___fttol@exp1^(0+128)
  5138  0879  0833               	movf	___fttol@exp1^(0+128),w
  5139  087A  1D03               	btfss	3,2
  5140  087B  2885               	goto	l2191
  5141  087C  3000               	movlw	0
  5142  087D  00A9               	movwf	(?___fttol+3)^(0+128)
  5143  087E  3000               	movlw	0
  5144  087F  00A8               	movwf	(?___fttol+2)^(0+128)
  5145  0880  3000               	movlw	0
  5146  0881  00A7               	movwf	(?___fttol+1)^(0+128)
  5147  0882  3000               	movlw	0
  5148  0883  00A6               	movwf	?___fttol^(0+128)
  5149  0884  0008               	return
  5150  0885                     l2191:	
  5151  0885  0826               	movf	___fttol@f1^(0+128),w
  5152  0886  00AA               	movwf	??___fttol^(0+128)
  5153  0887  0827               	movf	(___fttol@f1+1)^(0+128),w
  5154  0888  00AB               	movwf	(??___fttol^(0+128)+1)
  5155  0889  0828               	movf	(___fttol@f1+2)^(0+128),w
  5156  088A  00AC               	movwf	(??___fttol^(0+128)+2)
  5157  088B  3017               	movlw	23
  5158  088C                     u3205:	
  5159  088C  36AC               	lsrf	(??___fttol^(0+128)+2),f
  5160  088D  0CAB               	rrf	(??___fttol^(0+128)+1),f
  5161  088E  0CAA               	rrf	??___fttol^(0+128),f
  5162  088F  0B89               	decfsz	9,f
  5163  0890  288C               	goto	u3205
  5164  0891  082A               	movf	??___fttol^(0+128),w
  5165  0892  00AD               	movwf	(??___fttol+3)^(0+128)
  5166  0893  082D               	movf	(??___fttol+3)^(0+128),w
  5167  0894  00AE               	movwf	___fttol@sign1^(0+128)
  5168  0895  17A7               	bsf	(___fttol@f1^(0+128)+1),7
  5169  0896  30FF               	movlw	255
  5170  0897  05A6               	andwf	___fttol@f1^(0+128),f
  5171  0898  30FF               	movlw	255
  5172  0899  05A7               	andwf	(___fttol@f1+1)^(0+128),f
  5173  089A  3000               	movlw	0
  5174  089B  05A8               	andwf	(___fttol@f1+2)^(0+128),f
  5175  089C  0826               	movf	___fttol@f1^(0+128),w
  5176  089D  00AF               	movwf	___fttol@lval^(0+128)
  5177  089E  0827               	movf	(___fttol@f1+1)^(0+128),w
  5178  089F  00B0               	movwf	(___fttol@lval^(0+128)+1)
  5179  08A0  0828               	movf	(___fttol@f1+2)^(0+128),w
  5180  08A1  00B1               	movwf	(___fttol@lval^(0+128)+2)
  5181  08A2  01B2               	clrf	(___fttol@lval^(0+128)+3)
  5182  08A3  308E               	movlw	142
  5183  08A4  02B3               	subwf	___fttol@exp1^(0+128),f
  5184  08A5  1FB3               	btfss	___fttol@exp1^(0+128),7
  5185  08A6  28C3               	goto	l2211
  5186  08A7  0833               	movf	___fttol@exp1^(0+128),w
  5187  08A8  3A80               	xorlw	128
  5188  08A9  3E8F               	addlw	143
  5189  08AA  1803               	skipnc
  5190  08AB  28B5               	goto	l2209
  5191  08AC  3000               	movlw	0
  5192  08AD  00A9               	movwf	(?___fttol+3)^(0+128)
  5193  08AE  3000               	movlw	0
  5194  08AF  00A8               	movwf	(?___fttol+2)^(0+128)
  5195  08B0  3000               	movlw	0
  5196  08B1  00A7               	movwf	(?___fttol+1)^(0+128)
  5197  08B2  3000               	movlw	0
  5198  08B3  00A6               	movwf	?___fttol^(0+128)
  5199  08B4  0008               	return
  5200  08B5                     l2209:	
  5201  08B5  3001               	movlw	1
  5202  08B6                     u3235:	
  5203  08B6  36B2               	lsrf	(___fttol@lval+3)^(0+128),f
  5204  08B7  0CB1               	rrf	(___fttol@lval+2)^(0+128),f
  5205  08B8  0CB0               	rrf	(___fttol@lval+1)^(0+128),f
  5206  08B9  0CAF               	rrf	___fttol@lval^(0+128),f
  5207  08BA  0B89               	decfsz	9,f
  5208  08BB  28B6               	goto	u3235
  5209  08BC  3001               	movlw	1
  5210  08BD  00AA               	movwf	??___fttol^(0+128)
  5211  08BE  082A               	movf	??___fttol^(0+128),w
  5212  08BF  07B3               	addwf	___fttol@exp1^(0+128),f
  5213  08C0  1903               	btfsc	3,2
  5214  08C1  28DC               	goto	l2219
  5215  08C2  28B5               	goto	l2209
  5216  08C3                     l2211:	
  5217  08C3  3018               	movlw	24
  5218  08C4  0233               	subwf	___fttol@exp1^(0+128),w
  5219  08C5  1C03               	skipc
  5220  08C6  28D9               	goto	l537
  5221  08C7  3000               	movlw	0
  5222  08C8  00A9               	movwf	(?___fttol+3)^(0+128)
  5223  08C9  3000               	movlw	0
  5224  08CA  00A8               	movwf	(?___fttol+2)^(0+128)
  5225  08CB  3000               	movlw	0
  5226  08CC  00A7               	movwf	(?___fttol+1)^(0+128)
  5227  08CD  3000               	movlw	0
  5228  08CE  00A6               	movwf	?___fttol^(0+128)
  5229  08CF  0008               	return
  5230  08D0                     l2217:	
  5231  08D0  3001               	movlw	1
  5232  08D1                     u3265:	
  5233  08D1  35AF               	lslf	___fttol@lval^(0+128),f
  5234  08D2  0DB0               	rlf	(___fttol@lval+1)^(0+128),f
  5235  08D3  0DB1               	rlf	(___fttol@lval+2)^(0+128),f
  5236  08D4  0DB2               	rlf	(___fttol@lval+3)^(0+128),f
  5237  08D5  0B89               	decfsz	9,f
  5238  08D6  28D1               	goto	u3265
  5239  08D7  3001               	movlw	1
  5240  08D8  02B3               	subwf	___fttol@exp1^(0+128),f
  5241  08D9                     l537:	
  5242  08D9  0833               	movf	___fttol@exp1^(0+128),w
  5243  08DA  1D03               	btfss	3,2
  5244  08DB  28D0               	goto	l2217
  5245  08DC                     l2219:	
  5246  08DC  082E               	movf	___fttol@sign1^(0+128),w
  5247  08DD  1903               	btfsc	3,2
  5248  08DE  28EA               	goto	l2223
  5249  08DF  09AF               	comf	___fttol@lval^(0+128),f
  5250  08E0  09B0               	comf	(___fttol@lval+1)^(0+128),f
  5251  08E1  09B1               	comf	(___fttol@lval+2)^(0+128),f
  5252  08E2  09B2               	comf	(___fttol@lval+3)^(0+128),f
  5253  08E3  0AAF               	incf	___fttol@lval^(0+128),f
  5254  08E4  1903               	skipnz
  5255  08E5  0AB0               	incf	(___fttol@lval+1)^(0+128),f
  5256  08E6  1903               	skipnz
  5257  08E7  0AB1               	incf	(___fttol@lval+2)^(0+128),f
  5258  08E8  1903               	skipnz
  5259  08E9  0AB2               	incf	(___fttol@lval+3)^(0+128),f
  5260  08EA                     l2223:	
  5261  08EA  0832               	movf	(___fttol@lval+3)^(0+128),w
  5262  08EB  00A9               	movwf	(?___fttol+3)^(0+128)
  5263  08EC  0831               	movf	(___fttol@lval+2)^(0+128),w
  5264  08ED  00A8               	movwf	(?___fttol+2)^(0+128)
  5265  08EE  0830               	movf	(___fttol@lval+1)^(0+128),w
  5266  08EF  00A7               	movwf	(?___fttol+1)^(0+128)
  5267  08F0  082F               	movf	___fttol@lval^(0+128),w
  5268  08F1  00A6               	movwf	?___fttol^(0+128)
  5269  08F2  0008               	return
  5270  08F3                     __end_of___fttol:	
  5271                           
  5272                           	psect	text14
  5273  1530                     __ptext14:	
  5274 ;; *************** function ___ftsub *****************
  5275 ;; Defined at:
  5276 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftsub.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  f2              3   24[BANK1 ] float 
  5279 ;;  f1              3   27[BANK1 ] float 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  3   24[BANK1 ] float 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, pclath, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5291 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;Total ram usage:        6 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    5
  5298 ;; This function calls:
  5299 ;;		___ftadd
  5300 ;; This function is called by:
  5301 ;;		_sprintf
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function ___ftsub
  5307  1530                     ___ftsub:	
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5311  1530  0021               	movlb	1	; select bank1
  5312  1531  083A               	movf	(___ftsub@f2+2)^(0+128),w
  5313  1532  0439               	iorwf	(___ftsub@f2+1)^(0+128),w
  5314  1533  0438               	iorwf	___ftsub@f2^(0+128),w
  5315  1534  1903               	skipnz
  5316  1535  2D38               	goto	l2181
  5317  1536  3080               	movlw	128
  5318  1537  06BA               	xorwf	(___ftsub@f2+2)^(0+128),f
  5319  1538                     l2181:	
  5320  1538  083B               	movf	___ftsub@f1^(0+128),w
  5321  1539  00AB               	movwf	___ftadd@f1^(0+128)
  5322  153A  083C               	movf	(___ftsub@f1+1)^(0+128),w
  5323  153B  00AC               	movwf	(___ftadd@f1+1)^(0+128)
  5324  153C  083D               	movf	(___ftsub@f1+2)^(0+128),w
  5325  153D  00AD               	movwf	(___ftadd@f1+2)^(0+128)
  5326  153E  0838               	movf	___ftsub@f2^(0+128),w
  5327  153F  00AE               	movwf	___ftadd@f2^(0+128)
  5328  1540  0839               	movf	(___ftsub@f2+1)^(0+128),w
  5329  1541  00AF               	movwf	(___ftadd@f2+1)^(0+128)
  5330  1542  083A               	movf	(___ftsub@f2+2)^(0+128),w
  5331  1543  00B0               	movwf	(___ftadd@f2+2)^(0+128)
  5332  1544  318C  243D         	fcall	___ftadd
  5333  1546  0021               	movlb	1	; select bank1
  5334  1547  082B               	movf	?___ftadd^(0+128),w
  5335  1548  00B8               	movwf	?___ftsub^(0+128)
  5336  1549  082C               	movf	(?___ftadd+1)^(0+128),w
  5337  154A  00B9               	movwf	(?___ftsub+1)^(0+128)
  5338  154B  082D               	movf	(?___ftadd+2)^(0+128),w
  5339  154C  00BA               	movwf	(?___ftsub+2)^(0+128)
  5340  154D  0008               	return
  5341  154E                     __end_of___ftsub:	
  5342                           
  5343                           	psect	text15
  5344  0C3D                     __ptext15:	
  5345 ;; *************** function ___ftadd *****************
  5346 ;; Defined at:
  5347 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftadd.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  f1              3   11[BANK1 ] float 
  5350 ;;  f2              3   14[BANK1 ] float 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  exp1            1   23[BANK1 ] unsigned char 
  5353 ;;  exp2            1   22[BANK1 ] unsigned char 
  5354 ;;  sign            1   21[BANK1 ] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  3   11[BANK1 ] float 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0, pclath, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5364 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;Total ram usage:       13 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    4
  5371 ;; This function calls:
  5372 ;;		___ftpack
  5373 ;; This function is called by:
  5374 ;;		_sprintf
  5375 ;;		___ftsub
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function ___ftadd
  5381  0C3D                     ___ftadd:	
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5385  0C3D  0021               	movlb	1	; select bank1
  5386  0C3E  082B               	movf	___ftadd@f1^(0+128),w
  5387  0C3F  00B1               	movwf	??___ftadd^(0+128)
  5388  0C40  082C               	movf	(___ftadd@f1+1)^(0+128),w
  5389  0C41  00B2               	movwf	(??___ftadd^(0+128)+1)
  5390  0C42  082D               	movf	(___ftadd@f1+2)^(0+128),w
  5391  0C43  00B3               	movwf	(??___ftadd^(0+128)+2)
  5392  0C44  1003               	clrc
  5393  0C45  0D32               	rlf	(??___ftadd^(0+128)+1),w
  5394  0C46  0D33               	rlf	(??___ftadd^(0+128)+2),w
  5395  0C47  00B4               	movwf	(??___ftadd+3)^(0+128)
  5396  0C48  0834               	movf	(??___ftadd+3)^(0+128),w
  5397  0C49  00B7               	movwf	___ftadd@exp1^(0+128)
  5398  0C4A  082E               	movf	___ftadd@f2^(0+128),w
  5399  0C4B  00B1               	movwf	??___ftadd^(0+128)
  5400  0C4C  082F               	movf	(___ftadd@f2+1)^(0+128),w
  5401  0C4D  00B2               	movwf	(??___ftadd^(0+128)+1)
  5402  0C4E  0830               	movf	(___ftadd@f2+2)^(0+128),w
  5403  0C4F  00B3               	movwf	(??___ftadd^(0+128)+2)
  5404  0C50  1003               	clrc
  5405  0C51  0D32               	rlf	(??___ftadd^(0+128)+1),w
  5406  0C52  0D33               	rlf	(??___ftadd^(0+128)+2),w
  5407  0C53  00B4               	movwf	(??___ftadd+3)^(0+128)
  5408  0C54  0834               	movf	(??___ftadd+3)^(0+128),w
  5409  0C55  00B6               	movwf	___ftadd@exp2^(0+128)
  5410  0C56  0837               	movf	___ftadd@exp1^(0+128),w
  5411  0C57  1903               	btfsc	3,2
  5412  0C58  2C65               	goto	l1821
  5413  0C59  0836               	movf	___ftadd@exp2^(0+128),w
  5414  0C5A  0237               	subwf	___ftadd@exp1^(0+128),w
  5415  0C5B  1803               	skipnc
  5416  0C5C  2C6C               	goto	l1825
  5417  0C5D  0337               	decf	___ftadd@exp1^(0+128),w
  5418  0C5E  3AFF               	xorlw	255
  5419  0C5F  0736               	addwf	___ftadd@exp2^(0+128),w
  5420  0C60  00B1               	movwf	??___ftadd^(0+128)
  5421  0C61  3019               	movlw	25
  5422  0C62  0231               	subwf	??___ftadd^(0+128),w
  5423  0C63  1C03               	skipc
  5424  0C64  2C6C               	goto	l1825
  5425  0C65                     l1821:	
  5426  0C65  082E               	movf	___ftadd@f2^(0+128),w
  5427  0C66  00AB               	movwf	?___ftadd^(0+128)
  5428  0C67  082F               	movf	(___ftadd@f2+1)^(0+128),w
  5429  0C68  00AC               	movwf	(?___ftadd+1)^(0+128)
  5430  0C69  0830               	movf	(___ftadd@f2+2)^(0+128),w
  5431  0C6A  00AD               	movwf	(?___ftadd+2)^(0+128)
  5432  0C6B  0008               	return
  5433  0C6C                     l1825:	
  5434  0C6C  0836               	movf	___ftadd@exp2^(0+128),w
  5435  0C6D  1903               	btfsc	3,2
  5436  0C6E  0008               	return
  5437  0C6F  0837               	movf	___ftadd@exp1^(0+128),w
  5438  0C70  0236               	subwf	___ftadd@exp2^(0+128),w
  5439  0C71  1803               	skipnc
  5440  0C72  2C7B               	goto	l1831
  5441  0C73  0336               	decf	___ftadd@exp2^(0+128),w
  5442  0C74  3AFF               	xorlw	255
  5443  0C75  0737               	addwf	___ftadd@exp1^(0+128),w
  5444  0C76  00B1               	movwf	??___ftadd^(0+128)
  5445  0C77  3019               	movlw	25
  5446  0C78  0231               	subwf	??___ftadd^(0+128),w
  5447  0C79  1803               	btfsc	3,0
  5448  0C7A  0008               	return
  5449  0C7B                     l1831:	
  5450  0C7B  3006               	movlw	6
  5451  0C7C  00B1               	movwf	??___ftadd^(0+128)
  5452  0C7D  0831               	movf	??___ftadd^(0+128),w
  5453  0C7E  00B5               	movwf	___ftadd@sign^(0+128)
  5454  0C7F  1BAD               	btfsc	(___ftadd@f1+2)^(0+128),7
  5455  0C80  17B5               	bsf	___ftadd@sign^(0+128),7
  5456  0C81  1BB0               	btfsc	(___ftadd@f2+2)^(0+128),7
  5457  0C82  1735               	bsf	___ftadd@sign^(0+128),6
  5458  0C83  17AC               	bsf	(___ftadd@f1^(0+128)+1),7
  5459  0C84  30FF               	movlw	255
  5460  0C85  05AB               	andwf	___ftadd@f1^(0+128),f
  5461  0C86  30FF               	movlw	255
  5462  0C87  05AC               	andwf	(___ftadd@f1+1)^(0+128),f
  5463  0C88  3000               	movlw	0
  5464  0C89  05AD               	andwf	(___ftadd@f1+2)^(0+128),f
  5465  0C8A  17AF               	bsf	(___ftadd@f2^(0+128)+1),7
  5466  0C8B  30FF               	movlw	255
  5467  0C8C  05AE               	andwf	___ftadd@f2^(0+128),f
  5468  0C8D  30FF               	movlw	255
  5469  0C8E  05AF               	andwf	(___ftadd@f2+1)^(0+128),f
  5470  0C8F  3000               	movlw	0
  5471  0C90  05B0               	andwf	(___ftadd@f2+2)^(0+128),f
  5472  0C91  0836               	movf	___ftadd@exp2^(0+128),w
  5473  0C92  0237               	subwf	___ftadd@exp1^(0+128),w
  5474  0C93  1803               	skipnc
  5475  0C94  2CB7               	goto	l1853
  5476  0C95                     l1843:	
  5477  0C95  3001               	movlw	1
  5478  0C96                     u2445:	
  5479  0C96  35AE               	lslf	___ftadd@f2^(0+128),f
  5480  0C97  0DAF               	rlf	(___ftadd@f2+1)^(0+128),f
  5481  0C98  0DB0               	rlf	(___ftadd@f2+2)^(0+128),f
  5482  0C99  0B89               	decfsz	9,f
  5483  0C9A  2C96               	goto	u2445
  5484  0C9B  3001               	movlw	1
  5485  0C9C  02B6               	subwf	___ftadd@exp2^(0+128),f
  5486  0C9D  0836               	movf	___ftadd@exp2^(0+128),w
  5487  0C9E  0637               	xorwf	___ftadd@exp1^(0+128),w
  5488  0C9F  1903               	skipnz
  5489  0CA0  2CB2               	goto	l1851
  5490  0CA1  3001               	movlw	1
  5491  0CA2  02B5               	subwf	___ftadd@sign^(0+128),f
  5492  0CA3  0835               	movf	___ftadd@sign^(0+128),w
  5493  0CA4  3907               	andlw	7
  5494  0CA5  1903               	btfsc	3,2
  5495  0CA6  2CB2               	goto	l1851
  5496  0CA7  2C95               	goto	l1843
  5497  0CA8                     l1849:	
  5498  0CA8  3001               	movlw	1
  5499  0CA9                     u2475:	
  5500  0CA9  36AD               	lsrf	(___ftadd@f1+2)^(0+128),f
  5501  0CAA  0CAC               	rrf	(___ftadd@f1+1)^(0+128),f
  5502  0CAB  0CAB               	rrf	___ftadd@f1^(0+128),f
  5503  0CAC  0B89               	decfsz	9,f
  5504  0CAD  2CA9               	goto	u2475
  5505  0CAE  3001               	movlw	1
  5506  0CAF  00B1               	movwf	??___ftadd^(0+128)
  5507  0CB0  0831               	movf	??___ftadd^(0+128),w
  5508  0CB1  07B7               	addwf	___ftadd@exp1^(0+128),f
  5509  0CB2                     l1851:	
  5510  0CB2  0837               	movf	___ftadd@exp1^(0+128),w
  5511  0CB3  0636               	xorwf	___ftadd@exp2^(0+128),w
  5512  0CB4  1903               	btfsc	3,2
  5513  0CB5  2CDC               	goto	l460
  5514  0CB6  2CA8               	goto	l1849
  5515  0CB7                     l1853:	
  5516  0CB7  0837               	movf	___ftadd@exp1^(0+128),w
  5517  0CB8  0236               	subwf	___ftadd@exp2^(0+128),w
  5518  0CB9  1803               	skipnc
  5519  0CBA  2CDC               	goto	l460
  5520  0CBB                     l1855:	
  5521  0CBB  3001               	movlw	1
  5522  0CBC                     u2505:	
  5523  0CBC  35AB               	lslf	___ftadd@f1^(0+128),f
  5524  0CBD  0DAC               	rlf	(___ftadd@f1+1)^(0+128),f
  5525  0CBE  0DAD               	rlf	(___ftadd@f1+2)^(0+128),f
  5526  0CBF  0B89               	decfsz	9,f
  5527  0CC0  2CBC               	goto	u2505
  5528  0CC1  3001               	movlw	1
  5529  0CC2  02B7               	subwf	___ftadd@exp1^(0+128),f
  5530  0CC3  0836               	movf	___ftadd@exp2^(0+128),w
  5531  0CC4  0637               	xorwf	___ftadd@exp1^(0+128),w
  5532  0CC5  1903               	skipnz
  5533  0CC6  2CD8               	goto	l1863
  5534  0CC7  3001               	movlw	1
  5535  0CC8  02B5               	subwf	___ftadd@sign^(0+128),f
  5536  0CC9  0835               	movf	___ftadd@sign^(0+128),w
  5537  0CCA  3907               	andlw	7
  5538  0CCB  1903               	btfsc	3,2
  5539  0CCC  2CD8               	goto	l1863
  5540  0CCD  2CBB               	goto	l1855
  5541  0CCE                     l1861:	
  5542  0CCE  3001               	movlw	1
  5543  0CCF                     u2535:	
  5544  0CCF  36B0               	lsrf	(___ftadd@f2+2)^(0+128),f
  5545  0CD0  0CAF               	rrf	(___ftadd@f2+1)^(0+128),f
  5546  0CD1  0CAE               	rrf	___ftadd@f2^(0+128),f
  5547  0CD2  0B89               	decfsz	9,f
  5548  0CD3  2CCF               	goto	u2535
  5549  0CD4  3001               	movlw	1
  5550  0CD5  00B1               	movwf	??___ftadd^(0+128)
  5551  0CD6  0831               	movf	??___ftadd^(0+128),w
  5552  0CD7  07B6               	addwf	___ftadd@exp2^(0+128),f
  5553  0CD8                     l1863:	
  5554  0CD8  0837               	movf	___ftadd@exp1^(0+128),w
  5555  0CD9  0636               	xorwf	___ftadd@exp2^(0+128),w
  5556  0CDA  1D03               	skipz
  5557  0CDB  2CCE               	goto	l1861
  5558  0CDC                     l460:	
  5559  0CDC  1FB5               	btfss	___ftadd@sign^(0+128),7
  5560  0CDD  2CEE               	goto	l1867
  5561  0CDE  30FF               	movlw	255
  5562  0CDF  06AB               	xorwf	___ftadd@f1^(0+128),f
  5563  0CE0  30FF               	movlw	255
  5564  0CE1  06AC               	xorwf	(___ftadd@f1+1)^(0+128),f
  5565  0CE2  30FF               	movlw	255
  5566  0CE3  06AD               	xorwf	(___ftadd@f1+2)^(0+128),f
  5567  0CE4  3001               	movlw	1
  5568  0CE5  07AB               	addwf	___ftadd@f1^(0+128),f
  5569  0CE6  3000               	movlw	0
  5570  0CE7  1803               	skipnc
  5571  0CE8  3001               	movlw	1
  5572  0CE9  07AC               	addwf	(___ftadd@f1+1)^(0+128),f
  5573  0CEA  3000               	movlw	0
  5574  0CEB  1803               	skipnc
  5575  0CEC  3001               	movlw	1
  5576  0CED  07AD               	addwf	(___ftadd@f1+2)^(0+128),f
  5577  0CEE                     l1867:	
  5578  0CEE  1F35               	btfss	___ftadd@sign^(0+128),6
  5579  0CEF  2D00               	goto	l1871
  5580  0CF0  30FF               	movlw	255
  5581  0CF1  06AE               	xorwf	___ftadd@f2^(0+128),f
  5582  0CF2  30FF               	movlw	255
  5583  0CF3  06AF               	xorwf	(___ftadd@f2+1)^(0+128),f
  5584  0CF4  30FF               	movlw	255
  5585  0CF5  06B0               	xorwf	(___ftadd@f2+2)^(0+128),f
  5586  0CF6  3001               	movlw	1
  5587  0CF7  07AE               	addwf	___ftadd@f2^(0+128),f
  5588  0CF8  3000               	movlw	0
  5589  0CF9  1803               	skipnc
  5590  0CFA  3001               	movlw	1
  5591  0CFB  07AF               	addwf	(___ftadd@f2+1)^(0+128),f
  5592  0CFC  3000               	movlw	0
  5593  0CFD  1803               	skipnc
  5594  0CFE  3001               	movlw	1
  5595  0CFF  07B0               	addwf	(___ftadd@f2+2)^(0+128),f
  5596  0D00                     l1871:	
  5597  0D00  01B5               	clrf	___ftadd@sign^(0+128)
  5598  0D01  082B               	movf	___ftadd@f1^(0+128),w
  5599  0D02  07AE               	addwf	___ftadd@f2^(0+128),f
  5600  0D03  082C               	movf	(___ftadd@f1+1)^(0+128),w
  5601  0D04  3DAF               	addwfc	(___ftadd@f2+1)^(0+128),f
  5602  0D05  082D               	movf	(___ftadd@f1+2)^(0+128),w
  5603  0D06  3DB0               	addwfc	(___ftadd@f2+2)^(0+128),f
  5604  0D07  1FB0               	btfss	(___ftadd@f2+2)^(0+128),7
  5605  0D08  2D1B               	goto	l1881
  5606  0D09  30FF               	movlw	255
  5607  0D0A  06AE               	xorwf	___ftadd@f2^(0+128),f
  5608  0D0B  30FF               	movlw	255
  5609  0D0C  06AF               	xorwf	(___ftadd@f2+1)^(0+128),f
  5610  0D0D  30FF               	movlw	255
  5611  0D0E  06B0               	xorwf	(___ftadd@f2+2)^(0+128),f
  5612  0D0F  3001               	movlw	1
  5613  0D10  07AE               	addwf	___ftadd@f2^(0+128),f
  5614  0D11  3000               	movlw	0
  5615  0D12  1803               	skipnc
  5616  0D13  3001               	movlw	1
  5617  0D14  07AF               	addwf	(___ftadd@f2+1)^(0+128),f
  5618  0D15  3000               	movlw	0
  5619  0D16  1803               	skipnc
  5620  0D17  3001               	movlw	1
  5621  0D18  07B0               	addwf	(___ftadd@f2+2)^(0+128),f
  5622  0D19  01B5               	clrf	___ftadd@sign^(0+128)
  5623  0D1A  0AB5               	incf	___ftadd@sign^(0+128),f
  5624  0D1B                     l1881:	
  5625  0D1B  082E               	movf	___ftadd@f2^(0+128),w
  5626  0D1C  0020               	movlb	0	; select bank0
  5627  0D1D  00B3               	movwf	___ftpack@arg
  5628  0D1E  0021               	movlb	1	; select bank1
  5629  0D1F  082F               	movf	(___ftadd@f2+1)^(0+128),w
  5630  0D20  0020               	movlb	0	; select bank0
  5631  0D21  00B4               	movwf	___ftpack@arg+1
  5632  0D22  0021               	movlb	1	; select bank1
  5633  0D23  0830               	movf	(___ftadd@f2+2)^(0+128),w
  5634  0D24  0020               	movlb	0	; select bank0
  5635  0D25  00B5               	movwf	___ftpack@arg+2
  5636  0D26  0021               	movlb	1	; select bank1
  5637  0D27  0837               	movf	___ftadd@exp1^(0+128),w
  5638  0D28  00B1               	movwf	??___ftadd^(0+128)
  5639  0D29  0831               	movf	??___ftadd^(0+128),w
  5640  0D2A  0020               	movlb	0	; select bank0
  5641  0D2B  00B6               	movwf	___ftpack@exp
  5642  0D2C  0021               	movlb	1	; select bank1
  5643  0D2D  0835               	movf	___ftadd@sign^(0+128),w
  5644  0D2E  00B2               	movwf	(??___ftadd+1)^(0+128)
  5645  0D2F  0832               	movf	(??___ftadd+1)^(0+128),w
  5646  0D30  0020               	movlb	0	; select bank0
  5647  0D31  00B7               	movwf	___ftpack@sign
  5648  0D32  3188  2007         	fcall	___ftpack
  5649  0D34  0020               	movlb	0	; select bank0
  5650  0D35  0833               	movf	?___ftpack,w
  5651  0D36  0021               	movlb	1	; select bank1
  5652  0D37  00AB               	movwf	?___ftadd^(0+128)
  5653  0D38  0020               	movlb	0	; select bank0
  5654  0D39  0834               	movf	?___ftpack+1,w
  5655  0D3A  0021               	movlb	1	; select bank1
  5656  0D3B  00AC               	movwf	(?___ftadd+1)^(0+128)
  5657  0D3C  0020               	movlb	0	; select bank0
  5658  0D3D  0835               	movf	?___ftpack+2,w
  5659  0D3E  0021               	movlb	1	; select bank1
  5660  0D3F  00AD               	movwf	(?___ftadd+2)^(0+128)
  5661  0D40  0008               	return
  5662  0D41                     __end_of___ftadd:	
  5663                           
  5664                           	psect	text16
  5665  0807                     __ptext16:	
  5666 ;; *************** function ___ftpack *****************
  5667 ;; Defined at:
  5668 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  arg             3   19[BANK0 ] unsigned um
  5671 ;;  exp             1   22[BANK0 ] unsigned char 
  5672 ;;  sign            1   23[BANK0 ] unsigned char 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  3   19[BANK0 ] float 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5684 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;Total ram usage:        8 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    3
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		___ftadd
  5695 ;;		___ftmul
  5696 ;;		___lltoft
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function ___ftpack
  5702  0807                     ___ftpack:	
  5703                           
  5704                           ;incstack = 0
  5705                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5706  0807  0020               	movlb	0	; select bank0
  5707  0808  0836               	movf	___ftpack@exp,w
  5708  0809  1903               	btfsc	3,2
  5709  080A  2810               	goto	l1691
  5710  080B  0835               	movf	___ftpack@arg+2,w
  5711  080C  0434               	iorwf	___ftpack@arg+1,w
  5712  080D  0433               	iorwf	___ftpack@arg,w
  5713  080E  1D03               	skipz
  5714  080F  2821               	goto	l1697
  5715  0810                     l1691:	
  5716  0810  3000               	movlw	0
  5717  0811  00B3               	movwf	?___ftpack
  5718  0812  3000               	movlw	0
  5719  0813  00B4               	movwf	?___ftpack+1
  5720  0814  3000               	movlw	0
  5721  0815  00B5               	movwf	?___ftpack+2
  5722  0816  0008               	return
  5723  0817                     l1695:	
  5724  0817  3001               	movlw	1
  5725  0818  00B8               	movwf	??___ftpack
  5726  0819  0838               	movf	??___ftpack,w
  5727  081A  07B6               	addwf	___ftpack@exp,f
  5728  081B  3001               	movlw	1
  5729  081C                     u2025:	
  5730  081C  36B5               	lsrf	___ftpack@arg+2,f
  5731  081D  0CB4               	rrf	___ftpack@arg+1,f
  5732  081E  0CB3               	rrf	___ftpack@arg,f
  5733  081F  0B89               	decfsz	9,f
  5734  0820  281C               	goto	u2025
  5735  0821                     l1697:	
  5736  0821  30FE               	movlw	254
  5737  0822  0535               	andwf	___ftpack@arg+2,w
  5738  0823  1903               	btfsc	3,2
  5739  0824  283A               	goto	l429
  5740  0825  2817               	goto	l1695
  5741  0826                     l1699:	
  5742  0826  3001               	movlw	1
  5743  0827  00B8               	movwf	??___ftpack
  5744  0828  0838               	movf	??___ftpack,w
  5745  0829  07B6               	addwf	___ftpack@exp,f
  5746  082A  3001               	movlw	1
  5747  082B  07B3               	addwf	___ftpack@arg,f
  5748  082C  3000               	movlw	0
  5749  082D  1803               	skipnc
  5750  082E  3001               	movlw	1
  5751  082F  07B4               	addwf	___ftpack@arg+1,f
  5752  0830  3000               	movlw	0
  5753  0831  1803               	skipnc
  5754  0832  3001               	movlw	1
  5755  0833  07B5               	addwf	___ftpack@arg+2,f
  5756  0834  3001               	movlw	1
  5757  0835                     u2045:	
  5758  0835  36B5               	lsrf	___ftpack@arg+2,f
  5759  0836  0CB4               	rrf	___ftpack@arg+1,f
  5760  0837  0CB3               	rrf	___ftpack@arg,f
  5761  0838  0B89               	decfsz	9,f
  5762  0839  2835               	goto	u2045
  5763  083A                     l429:	
  5764  083A  30FF               	movlw	255
  5765  083B  0535               	andwf	___ftpack@arg+2,w
  5766  083C  1903               	btfsc	3,2
  5767  083D  2847               	goto	l1707
  5768  083E  2826               	goto	l1699
  5769  083F                     l1705:	
  5770  083F  3001               	movlw	1
  5771  0840  02B6               	subwf	___ftpack@exp,f
  5772  0841  3001               	movlw	1
  5773  0842                     u2065:	
  5774  0842  35B3               	lslf	___ftpack@arg,f
  5775  0843  0DB4               	rlf	___ftpack@arg+1,f
  5776  0844  0DB5               	rlf	___ftpack@arg+2,f
  5777  0845  0B89               	decfsz	9,f
  5778  0846  2842               	goto	u2065
  5779  0847                     l1707:	
  5780  0847  1BB4               	btfsc	___ftpack@arg+1,7
  5781  0848  284D               	goto	l436
  5782  0849  3002               	movlw	2
  5783  084A  0236               	subwf	___ftpack@exp,w
  5784  084B  1803               	skipnc
  5785  084C  283F               	goto	l1705
  5786  084D                     l436:	
  5787  084D  1836               	btfsc	___ftpack@exp,0
  5788  084E  2855               	goto	l437
  5789  084F  30FF               	movlw	255
  5790  0850  05B3               	andwf	___ftpack@arg,f
  5791  0851  307F               	movlw	127
  5792  0852  05B4               	andwf	___ftpack@arg+1,f
  5793  0853  30FF               	movlw	255
  5794  0854  05B5               	andwf	___ftpack@arg+2,f
  5795  0855                     l437:	
  5796  0855  1003               	clrc
  5797  0856  0CB6               	rrf	___ftpack@exp,f
  5798  0857  0836               	movf	___ftpack@exp,w
  5799  0858  00B8               	movwf	??___ftpack
  5800  0859  01B9               	clrf	??___ftpack+1
  5801  085A  01BA               	clrf	??___ftpack+2
  5802  085B  3010               	movlw	16
  5803  085C                     u2105:	
  5804  085C  35B8               	lslf	??___ftpack,f
  5805  085D  0DB9               	rlf	??___ftpack+1,f
  5806  085E  0DBA               	rlf	??___ftpack+2,f
  5807  085F  0B89               	decfsz	9,f
  5808  0860  285C               	goto	u2105
  5809  0861  0838               	movf	??___ftpack,w
  5810  0862  04B3               	iorwf	___ftpack@arg,f
  5811  0863  0839               	movf	??___ftpack+1,w
  5812  0864  04B4               	iorwf	___ftpack@arg+1,f
  5813  0865  083A               	movf	??___ftpack+2,w
  5814  0866  04B5               	iorwf	___ftpack@arg+2,f
  5815  0867  0837               	movf	___ftpack@sign,w
  5816  0868  1903               	btfsc	3,2
  5817  0869  0008               	return
  5818  086A  17B5               	bsf	___ftpack@arg+2,7
  5819  086B  0008               	return
  5820  086C                     __end_of___ftpack:	
  5821                           
  5822                           	psect	text17
  5823  07EB                     __ptext17:	
  5824 ;; *************** function ___ftneg *****************
  5825 ;; Defined at:
  5826 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftneg.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  f1              3   19[BANK0 ] float 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  3   19[BANK0 ] float 
  5833 ;; Registers used:
  5834 ;;		wreg
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5840 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;Total ram usage:        3 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    3
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_sprintf
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           
  5855                           ;psect for function ___ftneg
  5856  07EB                     ___ftneg:	
  5857                           
  5858                           ;incstack = 0
  5859                           ; Regs used in ___ftneg: [wreg]
  5860  07EB  0020               	movlb	0	; select bank0
  5861  07EC  0835               	movf	___ftneg@f1+2,w
  5862  07ED  0434               	iorwf	___ftneg@f1+1,w
  5863  07EE  0433               	iorwf	___ftneg@f1,w
  5864  07EF  1903               	skipnz
  5865  07F0  0008               	return
  5866  07F1  3080               	movlw	128
  5867  07F2  06B5               	xorwf	___ftneg@f1+2,f
  5868  07F3  0008               	return
  5869  07F4                     __end_of___ftneg:	
  5870                           
  5871                           	psect	text18
  5872  15D3                     __ptext18:	
  5873 ;; *************** function ___ftge *****************
  5874 ;; Defined at:
  5875 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftge.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  ff1             3   19[BANK0 ] float 
  5878 ;;  ff2             3   22[BANK0 ] float 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;		None               void
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5890 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;Total ram usage:        9 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    3
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_sprintf
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function ___ftge
  5906  15D3                     ___ftge:	
  5907                           
  5908                           ;incstack = 0
  5909                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5910  15D3  0020               	movlb	0	; select bank0
  5911  15D4  1FB5               	btfss	___ftge@ff1+2,7
  5912  15D5  2DEA               	goto	l2153
  5913  15D6  0933               	comf	___ftge@ff1,w
  5914  15D7  00B9               	movwf	??___ftge
  5915  15D8  0934               	comf	___ftge@ff1+1,w
  5916  15D9  00BA               	movwf	??___ftge+1
  5917  15DA  0935               	comf	___ftge@ff1+2,w
  5918  15DB  00BB               	movwf	??___ftge+2
  5919  15DC  0AB9               	incf	??___ftge,f
  5920  15DD  1903               	skipnz
  5921  15DE  0ABA               	incf	??___ftge+1,f
  5922  15DF  1903               	skipnz
  5923  15E0  0ABB               	incf	??___ftge+2,f
  5924  15E1  3000               	movlw	0
  5925  15E2  0739               	addwf	??___ftge,w
  5926  15E3  00B3               	movwf	___ftge@ff1
  5927  15E4  3000               	movlw	0
  5928  15E5  3D3A               	addwfc	??___ftge+1,w
  5929  15E6  00B4               	movwf	___ftge@ff1+1
  5930  15E7  3080               	movlw	128
  5931  15E8  3D3B               	addwfc	??___ftge+2,w
  5932  15E9  00B5               	movwf	___ftge@ff1+2
  5933  15EA                     l2153:	
  5934  15EA  1FB8               	btfss	___ftge@ff2+2,7
  5935  15EB  2E00               	goto	l2157
  5936  15EC  0936               	comf	___ftge@ff2,w
  5937  15ED  00B9               	movwf	??___ftge
  5938  15EE  0937               	comf	___ftge@ff2+1,w
  5939  15EF  00BA               	movwf	??___ftge+1
  5940  15F0  0938               	comf	___ftge@ff2+2,w
  5941  15F1  00BB               	movwf	??___ftge+2
  5942  15F2  0AB9               	incf	??___ftge,f
  5943  15F3  1903               	skipnz
  5944  15F4  0ABA               	incf	??___ftge+1,f
  5945  15F5  1903               	skipnz
  5946  15F6  0ABB               	incf	??___ftge+2,f
  5947  15F7  3000               	movlw	0
  5948  15F8  0739               	addwf	??___ftge,w
  5949  15F9  00B6               	movwf	___ftge@ff2
  5950  15FA  3000               	movlw	0
  5951  15FB  3D3A               	addwfc	??___ftge+1,w
  5952  15FC  00B7               	movwf	___ftge@ff2+1
  5953  15FD  3080               	movlw	128
  5954  15FE  3D3B               	addwfc	??___ftge+2,w
  5955  15FF  00B8               	movwf	___ftge@ff2+2
  5956  1600                     l2157:	
  5957  1600  3080               	movlw	128
  5958  1601  06B5               	xorwf	___ftge@ff1+2,f
  5959  1602  3080               	movlw	128
  5960  1603  06B8               	xorwf	___ftge@ff2+2,f
  5961  1604  0838               	movf	___ftge@ff2+2,w
  5962  1605  0235               	subwf	___ftge@ff1+2,w
  5963  1606  1D03               	skipz
  5964  1607  0008               	return
  5965  1608  0837               	movf	___ftge@ff2+1,w
  5966  1609  0234               	subwf	___ftge@ff1+1,w
  5967  160A  1D03               	skipz
  5968  160B  0008               	return
  5969  160C  0836               	movf	___ftge@ff2,w
  5970  160D  0233               	subwf	___ftge@ff1,w
  5971  160E  0008               	return
  5972  160F                     __end_of___ftge:	
  5973                           
  5974                           	psect	text19
  5975  1598                     __ptext19:	
  5976 ;; *************** function _Lcd_Out2 *****************
  5977 ;; Defined at:
  5978 ;;		line 115 in file "flex_lcd.h"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  y               1    wreg     unsigned char 
  5981 ;;  x               1   22[BANK0 ] unsigned char 
  5982 ;;  buffer          1   23[BANK0 ] PTR unsigned char 
  5983 ;;		 -> main@buffer1(16), 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  y               1   25[BANK0 ] unsigned char 
  5986 ;;  data            1   26[BANK0 ] unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;Total ram usage:        5 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    4
  6003 ;; This function calls:
  6004 ;;		_Lcd_Chr_CP
  6005 ;;		_Lcd_Cmd
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           
  6012                           ;psect for function _Lcd_Out2
  6013  1598                     _Lcd_Out2:	
  6014                           
  6015                           ;incstack = 0
  6016                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6017                           ;Lcd_Out2@y stored from wreg
  6018  1598  0020               	movlb	0	; select bank0
  6019  1599  00B9               	movwf	Lcd_Out2@y
  6020                           
  6021                           ;flex_lcd.h: 117: unsigned char data;
  6022                           ;flex_lcd.h: 118: switch (y)
  6023  159A  2DAA               	goto	l2375
  6024  159B                     l2365:	
  6025                           ;flex_lcd.h: 119: {
  6026                           ;flex_lcd.h: 120: case 1: data = 128 + x; break;
  6027                           
  6028  159B  0836               	movf	Lcd_Out2@x,w
  6029  159C  3E80               	addlw	128
  6030  159D  2DA6               	goto	L10
  6031  159E                     l2367:	
  6032                           ;flex_lcd.h: 121: case 2: data = 192 + x; break;
  6033                           
  6034  159E  0836               	movf	Lcd_Out2@x,w
  6035  159F  3EC0               	addlw	192
  6036  15A0  2DA6               	goto	L10
  6037  15A1                     l2369:	
  6038                           ;flex_lcd.h: 122: case 3: data = 148 + x; break;
  6039                           
  6040  15A1  0836               	movf	Lcd_Out2@x,w
  6041  15A2  3E94               	addlw	148
  6042  15A3  2DA6               	goto	L10
  6043  15A4                     l2371:	
  6044                           ;flex_lcd.h: 123: case 4: data = 212 + x; break;
  6045                           
  6046  15A4  0836               	movf	Lcd_Out2@x,w
  6047  15A5  3ED4               	addlw	212
  6048  15A6                     L10:	
  6049  15A6  00B8               	movwf	??_Lcd_Out2
  6050  15A7  0838               	movf	??_Lcd_Out2,w
  6051  15A8  00BA               	movwf	Lcd_Out2@data
  6052                           
  6053                           ;flex_lcd.h: 125: }
  6054                           
  6055                           ;flex_lcd.h: 124: default: break;
  6056  15A9  2DB8               	goto	l2377
  6057  15AA                     l2375:	
  6058  15AA  0839               	movf	Lcd_Out2@y,w
  6059                           
  6060                           ; Switch size 1, requested type "space"
  6061                           ; Number of cases is 4, Range of values is 1 to 4
  6062                           ; switch strategies available:
  6063                           ; Name         Instructions Cycles
  6064                           ; simple_byte           13     7 (average)
  6065                           ; direct_byte           17     9 (fixed)
  6066                           ; jumptable            263     9 (fixed)
  6067                           ;	Chosen strategy is simple_byte
  6068  15AB  3A01               	xorlw	1	; case 1
  6069  15AC  1903               	skipnz
  6070  15AD  2D9B               	goto	l2365
  6071  15AE  3A03               	xorlw	3	; case 2
  6072  15AF  1903               	skipnz
  6073  15B0  2D9E               	goto	l2367
  6074  15B1  3A01               	xorlw	1	; case 3
  6075  15B2  1903               	skipnz
  6076  15B3  2DA1               	goto	l2369
  6077  15B4  3A07               	xorlw	7	; case 4
  6078  15B5  1903               	skipnz
  6079  15B6  2DA4               	goto	l2371
  6080  15B7  2DB8               	goto	l2377
  6081  15B8                     l2377:	
  6082                           
  6083                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  6084  15B8  083A               	movf	Lcd_Out2@data,w
  6085  15B9  3188  20F3  3195   	fcall	_Lcd_Cmd
  6086  15BC                     l2383:	
  6087                           ;flex_lcd.h: 127: while(*buffer)
  6088                           
  6089  15BC  0020               	movlb	0	; select bank0
  6090  15BD  0837               	movf	Lcd_Out2@buffer,w
  6091  15BE  0086               	movwf	6
  6092  15BF  3001               	movlw	1	; select bank2/3
  6093  15C0  0087               	movwf	7
  6094  15C1  0801               	movf	1,w
  6095  15C2  1903               	btfsc	3,2
  6096  15C3  0008               	return
  6097                           
  6098                           ;flex_lcd.h: 128: {
  6099                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  6100  15C4  0020               	movlb	0	; select bank0
  6101  15C5  0837               	movf	Lcd_Out2@buffer,w
  6102  15C6  0086               	movwf	6
  6103  15C7  3001               	movlw	1	; select bank2/3
  6104  15C8  0087               	movwf	7
  6105  15C9  0801               	movf	1,w
  6106  15CA  3189  2188  3195   	fcall	_Lcd_Chr_CP
  6107                           
  6108                           ;flex_lcd.h: 130: buffer++;
  6109  15CD  3001               	movlw	1
  6110  15CE  0020               	movlb	0	; select bank0
  6111  15CF  00B8               	movwf	??_Lcd_Out2
  6112  15D0  0838               	movf	??_Lcd_Out2,w
  6113  15D1  07B7               	addwf	Lcd_Out2@buffer,f
  6114  15D2  2DBC               	goto	l2383
  6115  15D3                     __end_of_Lcd_Out2:	
  6116                           ;flex_lcd.h: 131: }
  6117                           ;flex_lcd.h: 132: return;
  6118                           
  6119                           
  6120                           	psect	text20
  6121  0988                     __ptext20:	
  6122 ;; *************** function _Lcd_Chr_CP *****************
  6123 ;; Defined at:
  6124 ;;		line 136 in file "flex_lcd.h"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  data            1    wreg     unsigned char 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  data            1   21[BANK0 ] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      void 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;Total ram usage:        3 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    3
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_Lcd_Out2
  6149 ;;		_Lcd_Out
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           
  6154                           ;psect for function _Lcd_Chr_CP
  6155  0988                     _Lcd_Chr_CP:	
  6156                           
  6157                           ;incstack = 0
  6158                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  6159                           ;Lcd_Chr_CP@data stored from wreg
  6160  0988  0020               	movlb	0	; select bank0
  6161  0989  00B5               	movwf	Lcd_Chr_CP@data
  6162                           
  6163                           ;flex_lcd.h: 137: PORTBbits.RB4 = 0; PORTBbits.RB5 = 1;
  6164  098A  120D               	bcf	13,4	;volatile
  6165  098B  168D               	bsf	13,5	;volatile
  6166                           
  6167                           ;flex_lcd.h: 138: PORTBbits.RB0 = (data & 0b10000000)>>7; PORTBbits.RB1 = (data & 0b0100
      +                          0000)>>6;
  6168  098C  0835               	movf	Lcd_Chr_CP@data,w
  6169  098D  00B3               	movwf	??_Lcd_Chr_CP
  6170  098E  3007               	movlw	7
  6171  098F                     u2765:	
  6172  098F  36B3               	lsrf	??_Lcd_Chr_CP,f
  6173  0990  0B89               	decfsz	9,f
  6174  0991  298F               	goto	u2765
  6175  0992  3001               	movlw	1
  6176  0993  0533               	andwf	??_Lcd_Chr_CP,w
  6177  0994  00B4               	movwf	??_Lcd_Chr_CP+1
  6178  0995  080D               	movf	13,w	;volatile
  6179  0996  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6180  0997  39FE               	andlw	-2
  6181  0998  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6182  0999  008D               	movwf	13	;volatile
  6183  099A  0835               	movf	Lcd_Chr_CP@data,w
  6184  099B  00B3               	movwf	??_Lcd_Chr_CP
  6185  099C  3006               	movlw	6
  6186  099D                     u2775:	
  6187  099D  36B3               	lsrf	??_Lcd_Chr_CP,f
  6188  099E  0B89               	decfsz	9,f
  6189  099F  299D               	goto	u2775
  6190  09A0  0833               	movf	??_Lcd_Chr_CP,w
  6191  09A1  3901               	andlw	1
  6192  09A2  00B4               	movwf	??_Lcd_Chr_CP+1
  6193  09A3  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6194  09A4  080D               	movf	13,w	;volatile
  6195  09A5  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6196  09A6  39FD               	andlw	-3
  6197  09A7  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6198  09A8  008D               	movwf	13	;volatile
  6199                           
  6200                           ;flex_lcd.h: 139: PORTBbits.RB2 = (data & 0b00100000)>>5; PORTBbits.RB3 = (data & 0b0001
      +                          0000)>>4;
  6201  09A9  0835               	movf	Lcd_Chr_CP@data,w
  6202  09AA  00B3               	movwf	??_Lcd_Chr_CP
  6203  09AB  3005               	movlw	5
  6204  09AC                     u2785:	
  6205  09AC  36B3               	lsrf	??_Lcd_Chr_CP,f
  6206  09AD  0B89               	decfsz	9,f
  6207  09AE  29AC               	goto	u2785
  6208  09AF  0833               	movf	??_Lcd_Chr_CP,w
  6209  09B0  3901               	andlw	1
  6210  09B1  00B4               	movwf	??_Lcd_Chr_CP+1
  6211  09B2  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6212  09B3  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6213  09B4  080D               	movf	13,w	;volatile
  6214  09B5  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6215  09B6  39FB               	andlw	-5
  6216  09B7  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6217  09B8  008D               	movwf	13	;volatile
  6218  09B9  0835               	movf	Lcd_Chr_CP@data,w
  6219  09BA  00B3               	movwf	??_Lcd_Chr_CP
  6220  09BB  3004               	movlw	4
  6221  09BC                     u2795:	
  6222  09BC  36B3               	lsrf	??_Lcd_Chr_CP,f
  6223  09BD  0B89               	decfsz	9,f
  6224  09BE  29BC               	goto	u2795
  6225  09BF  0833               	movf	??_Lcd_Chr_CP,w
  6226  09C0  3901               	andlw	1
  6227  09C1  00B4               	movwf	??_Lcd_Chr_CP+1
  6228  09C2  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6229  09C3  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6230  09C4  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6231  09C5  080D               	movf	13,w	;volatile
  6232  09C6  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6233  09C7  39F7               	andlw	-9
  6234  09C8  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6235  09C9  008D               	movwf	13	;volatile
  6236                           
  6237                           ;flex_lcd.h: 140: _delay(10);
  6238  09CA  3003               	movlw	3
  6239  09CB  00B3               	movwf	??_Lcd_Chr_CP
  6240  09CC                     u4007:	
  6241  09CC  0BB3               	decfsz	??_Lcd_Chr_CP,f
  6242  09CD  29CC               	goto	u4007
  6243                           
  6244                           ;flex_lcd.h: 141: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTBbits.RB4 = 0;
  6245  09CE  0020               	movlb	0	; select bank0
  6246  09CF  160D               	bsf	13,4	;volatile
  6247  09D0  300D               	movlw	13
  6248  09D1  00B3               	movwf	??_Lcd_Chr_CP
  6249  09D2                     u4017:	
  6250  09D2  0BB3               	decfsz	??_Lcd_Chr_CP,f
  6251  09D3  29D2               	goto	u4017
  6252  09D4  0020               	movlb	0	; select bank0
  6253  09D5  120D               	bcf	13,4	;volatile
  6254                           
  6255                           ;flex_lcd.h: 142: PORTBbits.RB0 = (data & 0b00001000)>>3; PORTBbits.RB1 = (data & 0b0000
      +                          0100)>>2;
  6256  09D6  0835               	movf	Lcd_Chr_CP@data,w
  6257  09D7  00B3               	movwf	??_Lcd_Chr_CP
  6258  09D8  3003               	movlw	3
  6259  09D9                     u2805:	
  6260  09D9  36B3               	lsrf	??_Lcd_Chr_CP,f
  6261  09DA  0B89               	decfsz	9,f
  6262  09DB  29D9               	goto	u2805
  6263  09DC  3001               	movlw	1
  6264  09DD  0533               	andwf	??_Lcd_Chr_CP,w
  6265  09DE  00B4               	movwf	??_Lcd_Chr_CP+1
  6266  09DF  080D               	movf	13,w	;volatile
  6267  09E0  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6268  09E1  39FE               	andlw	-2
  6269  09E2  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6270  09E3  008D               	movwf	13	;volatile
  6271  09E4  0835               	movf	Lcd_Chr_CP@data,w
  6272  09E5  00B3               	movwf	??_Lcd_Chr_CP
  6273  09E6  3002               	movlw	2
  6274  09E7                     u2815:	
  6275  09E7  36B3               	lsrf	??_Lcd_Chr_CP,f
  6276  09E8  0B89               	decfsz	9,f
  6277  09E9  29E7               	goto	u2815
  6278  09EA  0833               	movf	??_Lcd_Chr_CP,w
  6279  09EB  3901               	andlw	1
  6280  09EC  00B4               	movwf	??_Lcd_Chr_CP+1
  6281  09ED  0DB4               	rlf	??_Lcd_Chr_CP+1,f
  6282  09EE  080D               	movf	13,w	;volatile
  6283  09EF  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6284  09F0  39FD               	andlw	-3
  6285  09F1  0634               	xorwf	??_Lcd_Chr_CP+1,w
  6286  09F2  008D               	movwf	13	;volatile
  6287                           
  6288                           ;flex_lcd.h: 143: PORTBbits.RB2 = (data & 0b00000010)>>1; PORTBbits.RB3 = (data & 0b0000
      +                          0001);
  6289  09F3  3635               	lsrf	Lcd_Chr_CP@data,w
  6290  09F4  3901               	andlw	1
  6291  09F5  00B3               	movwf	??_Lcd_Chr_CP
  6292  09F6  0DB3               	rlf	??_Lcd_Chr_CP,f
  6293  09F7  0DB3               	rlf	??_Lcd_Chr_CP,f
  6294  09F8  080D               	movf	13,w	;volatile
  6295  09F9  0633               	xorwf	??_Lcd_Chr_CP,w
  6296  09FA  39FB               	andlw	-5
  6297  09FB  0633               	xorwf	??_Lcd_Chr_CP,w
  6298  09FC  008D               	movwf	13	;volatile
  6299  09FD  0835               	movf	Lcd_Chr_CP@data,w
  6300  09FE  3901               	andlw	1
  6301  09FF  00B3               	movwf	??_Lcd_Chr_CP
  6302  0A00  0DB3               	rlf	??_Lcd_Chr_CP,f
  6303  0A01  0DB3               	rlf	??_Lcd_Chr_CP,f
  6304  0A02  0DB3               	rlf	??_Lcd_Chr_CP,f
  6305  0A03  080D               	movf	13,w	;volatile
  6306  0A04  0633               	xorwf	??_Lcd_Chr_CP,w
  6307  0A05  39F7               	andlw	-9
  6308  0A06  0633               	xorwf	??_Lcd_Chr_CP,w
  6309  0A07  008D               	movwf	13	;volatile
  6310                           
  6311                           ;flex_lcd.h: 144: _delay(10);
  6312  0A08  3003               	movlw	3
  6313  0A09  00B3               	movwf	??_Lcd_Chr_CP
  6314  0A0A                     u4027:	
  6315  0A0A  0BB3               	decfsz	??_Lcd_Chr_CP,f
  6316  0A0B  2A0A               	goto	u4027
  6317                           
  6318                           ;flex_lcd.h: 145: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTBbits.RB4 = 0;
  6319  0A0C  0020               	movlb	0	; select bank0
  6320  0A0D  160D               	bsf	13,4	;volatile
  6321  0A0E  300D               	movlw	13
  6322  0A0F  00B3               	movwf	??_Lcd_Chr_CP
  6323  0A10                     u4037:	
  6324  0A10  0BB3               	decfsz	??_Lcd_Chr_CP,f
  6325  0A11  2A10               	goto	u4037
  6326  0A12  0020               	movlb	0	; select bank0
  6327  0A13  120D               	bcf	13,4	;volatile
  6328                           
  6329                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(32000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(32000000/4000000.0)));
  6330  0A14  300D               	movlw	13
  6331  0A15  00B3               	movwf	??_Lcd_Chr_CP
  6332  0A16                     u4047:	
  6333  0A16  0BB3               	decfsz	??_Lcd_Chr_CP,f
  6334  0A17  2A16               	goto	u4047
  6335  0A18  303A               	movlw	58
  6336  0A19  0020               	movlb	0	; select bank0
  6337  0A1A  00B4               	movwf	??_Lcd_Chr_CP+1
  6338  0A1B  3023               	movlw	35
  6339  0A1C  00B3               	movwf	??_Lcd_Chr_CP
  6340  0A1D                     u4057:	
  6341  0A1D  0BB3               	decfsz	??_Lcd_Chr_CP,f
  6342  0A1E  2A1D               	goto	u4057
  6343  0A1F  0BB4               	decfsz	??_Lcd_Chr_CP+1,f
  6344  0A20  2A1D               	goto	u4057
  6345  0A21  0008               	return
  6346  0A22                     __end_of_Lcd_Chr_CP:	
  6347                           
  6348                           	psect	text21
  6349  0A22                     __ptext21:	
  6350 ;; *************** function _Lcd_Init *****************
  6351 ;; Defined at:
  6352 ;;		line 52 in file "flex_lcd.h"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  data            1   24[BANK0 ] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0, pclath, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;Total ram usage:        3 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    4
  6373 ;; This function calls:
  6374 ;;		_Lcd_Cmd
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _Lcd_Init
  6382  0A22                     _Lcd_Init:	
  6383                           
  6384                           ;flex_lcd.h: 53: unsigned char data;
  6385                           ;flex_lcd.h: 54: TRISBbits.TRISB0 = 0;
  6386                           
  6387                           ;incstack = 0
  6388                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6389  0A22  0021               	movlb	1	; select bank1
  6390  0A23  100D               	bcf	13,0	;volatile
  6391                           
  6392                           ;flex_lcd.h: 55: TRISBbits.TRISB1 = 0;
  6393  0A24  108D               	bcf	13,1	;volatile
  6394                           
  6395                           ;flex_lcd.h: 56: TRISBbits.TRISB2 = 0;
  6396  0A25  110D               	bcf	13,2	;volatile
  6397                           
  6398                           ;flex_lcd.h: 57: TRISBbits.TRISB3 = 0;
  6399  0A26  118D               	bcf	13,3	;volatile
  6400                           
  6401                           ;flex_lcd.h: 58: TRISBbits.TRISB4 = 0;
  6402  0A27  120D               	bcf	13,4	;volatile
  6403                           
  6404                           ;flex_lcd.h: 59: TRISBbits.TRISB5 = 0;
  6405  0A28  128D               	bcf	13,5	;volatile
  6406                           
  6407                           ;flex_lcd.h: 60: PORTBbits.RB0 = 0;
  6408  0A29  0020               	movlb	0	; select bank0
  6409  0A2A  100D               	bcf	13,0	;volatile
  6410                           
  6411                           ;flex_lcd.h: 61: PORTBbits.RB1 = 0;
  6412  0A2B  108D               	bcf	13,1	;volatile
  6413                           
  6414                           ;flex_lcd.h: 62: PORTBbits.RB2 = 0;
  6415  0A2C  110D               	bcf	13,2	;volatile
  6416                           
  6417                           ;flex_lcd.h: 63: PORTBbits.RB3 = 0;
  6418  0A2D  118D               	bcf	13,3	;volatile
  6419                           
  6420                           ;flex_lcd.h: 64: PORTBbits.RB4 = 0;
  6421  0A2E  120D               	bcf	13,4	;volatile
  6422                           
  6423                           ;flex_lcd.h: 65: PORTBbits.RB5 = 0;
  6424  0A2F  128D               	bcf	13,5	;volatile
  6425                           
  6426                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6427  0A30  303A               	movlw	58
  6428  0A31  00B7               	movwf	??_Lcd_Init+1
  6429  0A32  3023               	movlw	35
  6430  0A33  00B6               	movwf	??_Lcd_Init
  6431  0A34                     u4067:	
  6432  0A34  0BB6               	decfsz	??_Lcd_Init,f
  6433  0A35  2A34               	goto	u4067
  6434  0A36  0BB7               	decfsz	??_Lcd_Init+1,f
  6435  0A37  2A34               	goto	u4067
  6436                           
  6437                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6438  0A38  303A               	movlw	58
  6439  0A39  0020               	movlb	0	; select bank0
  6440  0A3A  00B7               	movwf	??_Lcd_Init+1
  6441  0A3B  3023               	movlw	35
  6442  0A3C  00B6               	movwf	??_Lcd_Init
  6443  0A3D                     u4077:	
  6444  0A3D  0BB6               	decfsz	??_Lcd_Init,f
  6445  0A3E  2A3D               	goto	u4077
  6446  0A3F  0BB7               	decfsz	??_Lcd_Init+1,f
  6447  0A40  2A3D               	goto	u4077
  6448                           
  6449                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6450  0A41  303A               	movlw	58
  6451  0A42  0020               	movlb	0	; select bank0
  6452  0A43  00B7               	movwf	??_Lcd_Init+1
  6453  0A44  3023               	movlw	35
  6454  0A45  00B6               	movwf	??_Lcd_Init
  6455  0A46                     u4087:	
  6456  0A46  0BB6               	decfsz	??_Lcd_Init,f
  6457  0A47  2A46               	goto	u4087
  6458  0A48  0BB7               	decfsz	??_Lcd_Init+1,f
  6459  0A49  2A46               	goto	u4087
  6460                           
  6461                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6462  0A4A  303A               	movlw	58
  6463  0A4B  0020               	movlb	0	; select bank0
  6464  0A4C  00B7               	movwf	??_Lcd_Init+1
  6465  0A4D  3023               	movlw	35
  6466  0A4E  00B6               	movwf	??_Lcd_Init
  6467  0A4F                     u4097:	
  6468  0A4F  0BB6               	decfsz	??_Lcd_Init,f
  6469  0A50  2A4F               	goto	u4097
  6470  0A51  0BB7               	decfsz	??_Lcd_Init+1,f
  6471  0A52  2A4F               	goto	u4097
  6472                           
  6473                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6474  0A53  303A               	movlw	58
  6475  0A54  0020               	movlb	0	; select bank0
  6476  0A55  00B7               	movwf	??_Lcd_Init+1
  6477  0A56  3023               	movlw	35
  6478  0A57  00B6               	movwf	??_Lcd_Init
  6479  0A58                     u4107:	
  6480  0A58  0BB6               	decfsz	??_Lcd_Init,f
  6481  0A59  2A58               	goto	u4107
  6482  0A5A  0BB7               	decfsz	??_Lcd_Init+1,f
  6483  0A5B  2A58               	goto	u4107
  6484                           
  6485                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6486  0A5C  303A               	movlw	58
  6487  0A5D  0020               	movlb	0	; select bank0
  6488  0A5E  00B7               	movwf	??_Lcd_Init+1
  6489  0A5F  3023               	movlw	35
  6490  0A60  00B6               	movwf	??_Lcd_Init
  6491  0A61                     u4117:	
  6492  0A61  0BB6               	decfsz	??_Lcd_Init,f
  6493  0A62  2A61               	goto	u4117
  6494  0A63  0BB7               	decfsz	??_Lcd_Init+1,f
  6495  0A64  2A61               	goto	u4117
  6496                           
  6497                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  6498  0A65  0020               	movlb	0	; select bank0
  6499  0A66  01B8               	clrf	Lcd_Init@data
  6500  0A67  0AB8               	incf	Lcd_Init@data,f
  6501  0A68  3004               	movlw	4
  6502  0A69  0238               	subwf	Lcd_Init@data,w
  6503  0A6A  1803               	btfsc	3,0
  6504  0A6B  2A94               	goto	l42
  6505  0A6C                     l41:	
  6506                           
  6507                           ;flex_lcd.h: 73: {
  6508                           ;flex_lcd.h: 74: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB3 
      +                          = 1; PORTBbits.RB4 = 0;
  6509  0A6C  100D               	bcf	13,0	;volatile
  6510  0A6D  108D               	bcf	13,1	;volatile
  6511  0A6E  150D               	bsf	13,2	;volatile
  6512  0A6F  158D               	bsf	13,3	;volatile
  6513  0A70  120D               	bcf	13,4	;volatile
  6514                           
  6515                           ;flex_lcd.h: 75: PORTBbits.RB5 = 0; PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 
      +                          = 1; PORTBbits.RB3 = 1;
  6516  0A71  128D               	bcf	13,5	;volatile
  6517  0A72  100D               	bcf	13,0	;volatile
  6518  0A73  108D               	bcf	13,1	;volatile
  6519  0A74  150D               	bsf	13,2	;volatile
  6520  0A75  158D               	bsf	13,3	;volatile
  6521                           
  6522                           ;flex_lcd.h: 76: PORTBbits.RB4 = 1; PORTBbits.RB5 = 0;
  6523  0A76  160D               	bsf	13,4	;volatile
  6524  0A77  128D               	bcf	13,5	;volatile
  6525                           
  6526                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(32000000/4000000.0)));
  6527  0A78  300D               	movlw	13
  6528  0A79  00B6               	movwf	??_Lcd_Init
  6529  0A7A                     u4127:	
  6530  0A7A  0BB6               	decfsz	??_Lcd_Init,f
  6531  0A7B  2A7A               	goto	u4127
  6532                           
  6533                           ;flex_lcd.h: 78: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB3 
      +                          = 1; PORTBbits.RB4 = 0;
  6534  0A7C  0020               	movlb	0	; select bank0
  6535  0A7D  100D               	bcf	13,0	;volatile
  6536  0A7E  108D               	bcf	13,1	;volatile
  6537  0A7F  150D               	bsf	13,2	;volatile
  6538  0A80  158D               	bsf	13,3	;volatile
  6539  0A81  120D               	bcf	13,4	;volatile
  6540                           
  6541                           ;flex_lcd.h: 79: PORTBbits.RB5 = 0;
  6542  0A82  128D               	bcf	13,5	;volatile
  6543                           
  6544                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6545  0A83  303A               	movlw	58
  6546  0A84  00B7               	movwf	??_Lcd_Init+1
  6547  0A85  3023               	movlw	35
  6548  0A86  00B6               	movwf	??_Lcd_Init
  6549  0A87                     u4137:	
  6550  0A87  0BB6               	decfsz	??_Lcd_Init,f
  6551  0A88  2A87               	goto	u4137
  6552  0A89  0BB7               	decfsz	??_Lcd_Init+1,f
  6553  0A8A  2A87               	goto	u4137
  6554  0A8B  3001               	movlw	1
  6555  0A8C  0020               	movlb	0	; select bank0
  6556  0A8D  00B6               	movwf	??_Lcd_Init
  6557  0A8E  0836               	movf	??_Lcd_Init,w
  6558  0A8F  07B8               	addwf	Lcd_Init@data,f
  6559  0A90  3004               	movlw	4
  6560  0A91  0238               	subwf	Lcd_Init@data,w
  6561  0A92  1C03               	skipc
  6562  0A93  2A6C               	goto	l41
  6563  0A94                     l42:	
  6564                           
  6565                           ;flex_lcd.h: 81: }
  6566                           ;flex_lcd.h: 82: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB3 
      +                          = 0; PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
  6567  0A94  100D               	bcf	13,0	;volatile
  6568  0A95  108D               	bcf	13,1	;volatile
  6569  0A96  150D               	bsf	13,2	;volatile
  6570  0A97  118D               	bcf	13,3	;volatile
  6571  0A98  120D               	bcf	13,4	;volatile
  6572  0A99  128D               	bcf	13,5	;volatile
  6573                           
  6574                           ;flex_lcd.h: 83: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB3 
      +                          = 0; PORTBbits.RB4 = 1; PORTBbits.RB5 = 0;
  6575  0A9A  100D               	bcf	13,0	;volatile
  6576  0A9B  108D               	bcf	13,1	;volatile
  6577  0A9C  150D               	bsf	13,2	;volatile
  6578  0A9D  118D               	bcf	13,3	;volatile
  6579  0A9E  160D               	bsf	13,4	;volatile
  6580  0A9F  128D               	bcf	13,5	;volatile
  6581                           
  6582                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(32000000/4000000.0)));
  6583  0AA0  300D               	movlw	13
  6584  0AA1  00B6               	movwf	??_Lcd_Init
  6585  0AA2                     u4147:	
  6586  0AA2  0BB6               	decfsz	??_Lcd_Init,f
  6587  0AA3  2AA2               	goto	u4147
  6588                           
  6589                           ;flex_lcd.h: 85: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB3 
      +                          = 0; PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
  6590  0AA4  0020               	movlb	0	; select bank0
  6591  0AA5  100D               	bcf	13,0	;volatile
  6592  0AA6  108D               	bcf	13,1	;volatile
  6593  0AA7  150D               	bsf	13,2	;volatile
  6594  0AA8  118D               	bcf	13,3	;volatile
  6595  0AA9  120D               	bcf	13,4	;volatile
  6596  0AAA  128D               	bcf	13,5	;volatile
  6597                           
  6598                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6599  0AAB  303A               	movlw	58
  6600  0AAC  00B7               	movwf	??_Lcd_Init+1
  6601  0AAD  3023               	movlw	35
  6602  0AAE  00B6               	movwf	??_Lcd_Init
  6603  0AAF                     u4157:	
  6604  0AAF  0BB6               	decfsz	??_Lcd_Init,f
  6605  0AB0  2AAF               	goto	u4157
  6606  0AB1  0BB7               	decfsz	??_Lcd_Init+1,f
  6607  0AB2  2AAF               	goto	u4157
  6608                           
  6609                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
  6610  0AB3  3028               	movlw	40
  6611  0AB4  0020               	movlb	0	; select bank0
  6612  0AB5  00B6               	movwf	??_Lcd_Init
  6613  0AB6  0836               	movf	??_Lcd_Init,w
  6614  0AB7  00B8               	movwf	Lcd_Init@data
  6615  0AB8  0838               	movf	Lcd_Init@data,w
  6616  0AB9  3188  20F3  318A   	fcall	_Lcd_Cmd
  6617                           
  6618                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
  6619  0ABC  3010               	movlw	16
  6620  0ABD  0020               	movlb	0	; select bank0
  6621  0ABE  00B6               	movwf	??_Lcd_Init
  6622  0ABF  0836               	movf	??_Lcd_Init,w
  6623  0AC0  00B8               	movwf	Lcd_Init@data
  6624  0AC1  0838               	movf	Lcd_Init@data,w
  6625  0AC2  3188  20F3  318A   	fcall	_Lcd_Cmd
  6626                           
  6627                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
  6628  0AC5  0020               	movlb	0	; select bank0
  6629  0AC6  01B8               	clrf	Lcd_Init@data
  6630  0AC7  0AB8               	incf	Lcd_Init@data,f
  6631  0AC8  0838               	movf	Lcd_Init@data,w
  6632  0AC9  3188  20F3  318A   	fcall	_Lcd_Cmd
  6633                           
  6634                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
  6635  0ACC  300F               	movlw	15
  6636  0ACD  0020               	movlb	0	; select bank0
  6637  0ACE  00B6               	movwf	??_Lcd_Init
  6638  0ACF  0836               	movf	??_Lcd_Init,w
  6639  0AD0  00B8               	movwf	Lcd_Init@data
  6640  0AD1  0838               	movf	Lcd_Init@data,w
  6641  0AD2  3188  20F3         	fcall	_Lcd_Cmd
  6642  0AD4  0008               	return
  6643  0AD5                     __end_of_Lcd_Init:	
  6644                           
  6645                           	psect	text22
  6646  08F3                     __ptext22:	
  6647 ;; *************** function _Lcd_Cmd *****************
  6648 ;; Defined at:
  6649 ;;		line 150 in file "flex_lcd.h"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  data            1    wreg     unsigned char 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  data            1   21[BANK0 ] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;Total ram usage:        3 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    3
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_Lcd_Init
  6674 ;;		_Lcd_Out2
  6675 ;;		_main
  6676 ;;		_Lcd_Out
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           
  6681                           ;psect for function _Lcd_Cmd
  6682  08F3                     _Lcd_Cmd:	
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  6686                           ;Lcd_Cmd@data stored from wreg
  6687  08F3  0020               	movlb	0	; select bank0
  6688  08F4  00B5               	movwf	Lcd_Cmd@data
  6689                           
  6690                           ;flex_lcd.h: 151: PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
  6691  08F5  120D               	bcf	13,4	;volatile
  6692  08F6  128D               	bcf	13,5	;volatile
  6693                           
  6694                           ;flex_lcd.h: 152: PORTBbits.RB0 = (data & 0b10000000)>>7; PORTBbits.RB1 = (data & 0b0100
      +                          0000)>>6;
  6695  08F7  0835               	movf	Lcd_Cmd@data,w
  6696  08F8  00B3               	movwf	??_Lcd_Cmd
  6697  08F9  3007               	movlw	7
  6698  08FA                     u2705:	
  6699  08FA  36B3               	lsrf	??_Lcd_Cmd,f
  6700  08FB  0B89               	decfsz	9,f
  6701  08FC  28FA               	goto	u2705
  6702  08FD  3001               	movlw	1
  6703  08FE  0533               	andwf	??_Lcd_Cmd,w
  6704  08FF  00B4               	movwf	??_Lcd_Cmd+1
  6705  0900  080D               	movf	13,w	;volatile
  6706  0901  0634               	xorwf	??_Lcd_Cmd+1,w
  6707  0902  39FE               	andlw	-2
  6708  0903  0634               	xorwf	??_Lcd_Cmd+1,w
  6709  0904  008D               	movwf	13	;volatile
  6710  0905  0835               	movf	Lcd_Cmd@data,w
  6711  0906  00B3               	movwf	??_Lcd_Cmd
  6712  0907  3006               	movlw	6
  6713  0908                     u2715:	
  6714  0908  36B3               	lsrf	??_Lcd_Cmd,f
  6715  0909  0B89               	decfsz	9,f
  6716  090A  2908               	goto	u2715
  6717  090B  0833               	movf	??_Lcd_Cmd,w
  6718  090C  3901               	andlw	1
  6719  090D  00B4               	movwf	??_Lcd_Cmd+1
  6720  090E  0DB4               	rlf	??_Lcd_Cmd+1,f
  6721  090F  080D               	movf	13,w	;volatile
  6722  0910  0634               	xorwf	??_Lcd_Cmd+1,w
  6723  0911  39FD               	andlw	-3
  6724  0912  0634               	xorwf	??_Lcd_Cmd+1,w
  6725  0913  008D               	movwf	13	;volatile
  6726                           
  6727                           ;flex_lcd.h: 153: PORTBbits.RB2 = (data & 0b00100000)>>5; PORTBbits.RB3 = (data & 0b0001
      +                          0000)>>4;
  6728  0914  0835               	movf	Lcd_Cmd@data,w
  6729  0915  00B3               	movwf	??_Lcd_Cmd
  6730  0916  3005               	movlw	5
  6731  0917                     u2725:	
  6732  0917  36B3               	lsrf	??_Lcd_Cmd,f
  6733  0918  0B89               	decfsz	9,f
  6734  0919  2917               	goto	u2725
  6735  091A  0833               	movf	??_Lcd_Cmd,w
  6736  091B  3901               	andlw	1
  6737  091C  00B4               	movwf	??_Lcd_Cmd+1
  6738  091D  0DB4               	rlf	??_Lcd_Cmd+1,f
  6739  091E  0DB4               	rlf	??_Lcd_Cmd+1,f
  6740  091F  080D               	movf	13,w	;volatile
  6741  0920  0634               	xorwf	??_Lcd_Cmd+1,w
  6742  0921  39FB               	andlw	-5
  6743  0922  0634               	xorwf	??_Lcd_Cmd+1,w
  6744  0923  008D               	movwf	13	;volatile
  6745  0924  0835               	movf	Lcd_Cmd@data,w
  6746  0925  00B3               	movwf	??_Lcd_Cmd
  6747  0926  3004               	movlw	4
  6748  0927                     u2735:	
  6749  0927  36B3               	lsrf	??_Lcd_Cmd,f
  6750  0928  0B89               	decfsz	9,f
  6751  0929  2927               	goto	u2735
  6752  092A  0833               	movf	??_Lcd_Cmd,w
  6753  092B  3901               	andlw	1
  6754  092C  00B4               	movwf	??_Lcd_Cmd+1
  6755  092D  0DB4               	rlf	??_Lcd_Cmd+1,f
  6756  092E  0DB4               	rlf	??_Lcd_Cmd+1,f
  6757  092F  0DB4               	rlf	??_Lcd_Cmd+1,f
  6758  0930  080D               	movf	13,w	;volatile
  6759  0931  0634               	xorwf	??_Lcd_Cmd+1,w
  6760  0932  39F7               	andlw	-9
  6761  0933  0634               	xorwf	??_Lcd_Cmd+1,w
  6762  0934  008D               	movwf	13	;volatile
  6763                           
  6764                           ;flex_lcd.h: 154: _delay(10);
  6765  0935  3003               	movlw	3
  6766  0936  00B3               	movwf	??_Lcd_Cmd
  6767  0937                     u4167:	
  6768  0937  0BB3               	decfsz	??_Lcd_Cmd,f
  6769  0938  2937               	goto	u4167
  6770                           
  6771                           ;flex_lcd.h: 155: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTBbits.RB4 = 0;
  6772  0939  0020               	movlb	0	; select bank0
  6773  093A  160D               	bsf	13,4	;volatile
  6774  093B  300D               	movlw	13
  6775  093C  00B3               	movwf	??_Lcd_Cmd
  6776  093D                     u4177:	
  6777  093D  0BB3               	decfsz	??_Lcd_Cmd,f
  6778  093E  293D               	goto	u4177
  6779  093F  0020               	movlb	0	; select bank0
  6780  0940  120D               	bcf	13,4	;volatile
  6781                           
  6782                           ;flex_lcd.h: 156: PORTBbits.RB0 = (data & 0b00001000)>>3; PORTBbits.RB1 = (data & 0b0000
      +                          0100)>>2;
  6783  0941  0835               	movf	Lcd_Cmd@data,w
  6784  0942  00B3               	movwf	??_Lcd_Cmd
  6785  0943  3003               	movlw	3
  6786  0944                     u2745:	
  6787  0944  36B3               	lsrf	??_Lcd_Cmd,f
  6788  0945  0B89               	decfsz	9,f
  6789  0946  2944               	goto	u2745
  6790  0947  3001               	movlw	1
  6791  0948  0533               	andwf	??_Lcd_Cmd,w
  6792  0949  00B4               	movwf	??_Lcd_Cmd+1
  6793  094A  080D               	movf	13,w	;volatile
  6794  094B  0634               	xorwf	??_Lcd_Cmd+1,w
  6795  094C  39FE               	andlw	-2
  6796  094D  0634               	xorwf	??_Lcd_Cmd+1,w
  6797  094E  008D               	movwf	13	;volatile
  6798  094F  0835               	movf	Lcd_Cmd@data,w
  6799  0950  00B3               	movwf	??_Lcd_Cmd
  6800  0951  3002               	movlw	2
  6801  0952                     u2755:	
  6802  0952  36B3               	lsrf	??_Lcd_Cmd,f
  6803  0953  0B89               	decfsz	9,f
  6804  0954  2952               	goto	u2755
  6805  0955  0833               	movf	??_Lcd_Cmd,w
  6806  0956  3901               	andlw	1
  6807  0957  00B4               	movwf	??_Lcd_Cmd+1
  6808  0958  0DB4               	rlf	??_Lcd_Cmd+1,f
  6809  0959  080D               	movf	13,w	;volatile
  6810  095A  0634               	xorwf	??_Lcd_Cmd+1,w
  6811  095B  39FD               	andlw	-3
  6812  095C  0634               	xorwf	??_Lcd_Cmd+1,w
  6813  095D  008D               	movwf	13	;volatile
  6814                           
  6815                           ;flex_lcd.h: 157: PORTBbits.RB2 = (data & 0b00000010)>>1; PORTBbits.RB3 = (data & 0b0000
      +                          0001);
  6816  095E  3635               	lsrf	Lcd_Cmd@data,w
  6817  095F  3901               	andlw	1
  6818  0960  00B3               	movwf	??_Lcd_Cmd
  6819  0961  0DB3               	rlf	??_Lcd_Cmd,f
  6820  0962  0DB3               	rlf	??_Lcd_Cmd,f
  6821  0963  080D               	movf	13,w	;volatile
  6822  0964  0633               	xorwf	??_Lcd_Cmd,w
  6823  0965  39FB               	andlw	-5
  6824  0966  0633               	xorwf	??_Lcd_Cmd,w
  6825  0967  008D               	movwf	13	;volatile
  6826  0968  0835               	movf	Lcd_Cmd@data,w
  6827  0969  3901               	andlw	1
  6828  096A  00B3               	movwf	??_Lcd_Cmd
  6829  096B  0DB3               	rlf	??_Lcd_Cmd,f
  6830  096C  0DB3               	rlf	??_Lcd_Cmd,f
  6831  096D  0DB3               	rlf	??_Lcd_Cmd,f
  6832  096E  080D               	movf	13,w	;volatile
  6833  096F  0633               	xorwf	??_Lcd_Cmd,w
  6834  0970  39F7               	andlw	-9
  6835  0971  0633               	xorwf	??_Lcd_Cmd,w
  6836  0972  008D               	movwf	13	;volatile
  6837                           
  6838                           ;flex_lcd.h: 158: _delay(10);
  6839  0973  3003               	movlw	3
  6840  0974  00B3               	movwf	??_Lcd_Cmd
  6841  0975                     u4187:	
  6842  0975  0BB3               	decfsz	??_Lcd_Cmd,f
  6843  0976  2975               	goto	u4187
  6844                           
  6845                           ;flex_lcd.h: 159: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(32000000/4000000.0))); 
      +                          PORTBbits.RB4 = 0;
  6846  0977  0020               	movlb	0	; select bank0
  6847  0978  160D               	bsf	13,4	;volatile
  6848  0979  300D               	movlw	13
  6849  097A  00B3               	movwf	??_Lcd_Cmd
  6850  097B                     u4197:	
  6851  097B  0BB3               	decfsz	??_Lcd_Cmd,f
  6852  097C  297B               	goto	u4197
  6853  097D  0020               	movlb	0	; select bank0
  6854  097E  120D               	bcf	13,4	;volatile
  6855                           
  6856                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(32000000/4000000.0)));
  6857  097F  303A               	movlw	58
  6858  0980  00B4               	movwf	??_Lcd_Cmd+1
  6859  0981  3023               	movlw	35
  6860  0982  00B3               	movwf	??_Lcd_Cmd
  6861  0983                     u4207:	
  6862  0983  0BB3               	decfsz	??_Lcd_Cmd,f
  6863  0984  2983               	goto	u4207
  6864  0985  0BB4               	decfsz	??_Lcd_Cmd+1,f
  6865  0986  2983               	goto	u4207
  6866  0987  0008               	return
  6867  0988                     __end_of_Lcd_Cmd:	
  6868                           
  6869                           	psect	intentry
  6870  0004                     __pintentry:	
  6871 ;; *************** function _isr *****************
  6872 ;; Defined at:
  6873 ;;		line 9 in file "main.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  ticks           2   17[BANK0 ] int 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0, pclath, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6889 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6890 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;Total ram usage:        3 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    2
  6894 ;; This function calls:
  6895 ;;		___awtoft
  6896 ;;		i1___ftmul
  6897 ;; This function is called by:
  6898 ;;		Interrupt level 1
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902  0004                     _isr:	
  6903                           
  6904                           ;incstack = 0
  6905                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6906  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6907  0005  3180               	pagesel	$
  6908  0006  0020               	movlb	0	; select bank0
  6909  0007  087F               	movf	127,w
  6910  0008  00B0               	movwf	??_isr
  6911                           
  6912                           ;main.c: 10: int ticks;
  6913                           ;main.c: 14: ticks=CCPR1;
  6914  0009  0025               	movlb	5	; select bank5
  6915  000A  0812               	movf	18,w	;volatile
  6916  000B  0020               	movlb	0	; select bank0
  6917  000C  00B2               	movwf	isr@ticks+1
  6918  000D  0025               	movlb	5	; select bank5
  6919  000E  0811               	movf	17,w	;volatile
  6920  000F  0020               	movlb	0	; select bank0
  6921  0010  00B1               	movwf	isr@ticks
  6922                           
  6923                           ;main.c: 16: tiempo=ticks*0.000001;
  6924  0011  3038               	movlw	56
  6925  0012  00A0               	movwf	i1___ftmul@f1
  6926  0013  3086               	movlw	134
  6927  0014  00A1               	movwf	i1___ftmul@f1+1
  6928  0015  3035               	movlw	53
  6929  0016  00A2               	movwf	i1___ftmul@f1+2
  6930  0017  0832               	movf	isr@ticks+1,w
  6931  0018  00F9               	movwf	___awtoft@c+1
  6932  0019  0831               	movf	isr@ticks,w
  6933  001A  00F8               	movwf	___awtoft@c
  6934  001B  3195  254E  3180   	fcall	___awtoft
  6935  001E  0878               	movf	?___awtoft,w
  6936  001F  0020               	movlb	0	; select bank0
  6937  0020  00A3               	movwf	i1___ftmul@f2
  6938  0021  0879               	movf	?___awtoft+1,w
  6939  0022  00A4               	movwf	i1___ftmul@f2+1
  6940  0023  087A               	movf	?___awtoft+2,w
  6941  0024  00A5               	movwf	i1___ftmul@f2+2
  6942  0025  318A  22D5         	fcall	i1___ftmul
  6943  0027  0020               	movlb	0	; select bank0
  6944  0028  0820               	movf	?i1___ftmul,w
  6945  0029  0022               	movlb	2	; select bank2
  6946  002A  00B0               	movwf	_tiempo^(0+256)
  6947  002B  0020               	movlb	0	; select bank0
  6948  002C  0821               	movf	?i1___ftmul+1,w
  6949  002D  0022               	movlb	2	; select bank2
  6950  002E  00B1               	movwf	(_tiempo+1)^(0+256)
  6951  002F  0020               	movlb	0	; select bank0
  6952  0030  0822               	movf	?i1___ftmul+2,w
  6953  0031  0022               	movlb	2	; select bank2
  6954  0032  00B2               	movwf	(_tiempo+2)^(0+256)
  6955                           
  6956                           ;main.c: 17: TMR1=0;
  6957  0033  0020               	movlb	0	; select bank0
  6958  0034  0196               	clrf	22	;volatile
  6959  0035  0197               	clrf	23	;volatile
  6960                           
  6961                           ;main.c: 19: PIR1bits.CCP1IF=0;
  6962  0036  1111               	bcf	17,2	;volatile
  6963  0037  0830               	movf	??_isr,w
  6964  0038  00FF               	movwf	127
  6965  0039  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6966  003A  0009               	retfie
  6967  003B                     __end_of_isr:	
  6968                           
  6969                           	psect	text24
  6970  0AD5                     __ptext24:	
  6971 ;; *************** function i1___ftmul *****************
  6972 ;; Defined at:
  6973 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  f1              3    0[BANK0 ] float 
  6976 ;;  f2              3    3[BANK0 ] float 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  __ftmul         3   11[BANK0 ] unsigned um
  6979 ;;  __ftmul         1   15[BANK0 ] unsigned char 
  6980 ;;  __ftmul         1   14[BANK0 ] unsigned char 
  6981 ;;  __ftmul         1   10[BANK0 ] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  3    0[BANK0 ] float 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:       16 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    1
  6998 ;; This function calls:
  6999 ;;		i1___ftpack
  7000 ;; This function is called by:
  7001 ;;		_isr
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function i1___ftmul
  7007  0AD5                     i1___ftmul:	
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7011  0AD5  0020               	movlb	0	; select bank0
  7012  0AD6  0820               	movf	i1___ftmul@f1,w
  7013  0AD7  00A6               	movwf	??i1___ftmul
  7014  0AD8  0821               	movf	i1___ftmul@f1+1,w
  7015  0AD9  00A7               	movwf	??i1___ftmul+1
  7016  0ADA  0822               	movf	i1___ftmul@f1+2,w
  7017  0ADB  00A8               	movwf	??i1___ftmul+2
  7018  0ADC  1003               	clrc
  7019  0ADD  0D27               	rlf	??i1___ftmul+1,w
  7020  0ADE  0D28               	rlf	??i1___ftmul+2,w
  7021  0ADF  00A9               	movwf	??i1___ftmul+3
  7022  0AE0  0829               	movf	??i1___ftmul+3,w
  7023  0AE1  00AA               	movwf	i1___ftmul@exp
  7024  0AE2  082A               	movf	i1___ftmul@exp,w
  7025  0AE3  1D03               	btfss	3,2
  7026  0AE4  2AEC               	goto	i1l2571
  7027  0AE5  3000               	movlw	0
  7028  0AE6  00A0               	movwf	?i1___ftmul
  7029  0AE7  3000               	movlw	0
  7030  0AE8  00A1               	movwf	?i1___ftmul+1
  7031  0AE9  3000               	movlw	0
  7032  0AEA  00A2               	movwf	?i1___ftmul+2
  7033  0AEB  0008               	return
  7034  0AEC                     i1l2571:	
  7035  0AEC  0823               	movf	i1___ftmul@f2,w
  7036  0AED  00A6               	movwf	??i1___ftmul
  7037  0AEE  0824               	movf	i1___ftmul@f2+1,w
  7038  0AEF  00A7               	movwf	??i1___ftmul+1
  7039  0AF0  0825               	movf	i1___ftmul@f2+2,w
  7040  0AF1  00A8               	movwf	??i1___ftmul+2
  7041  0AF2  1003               	clrc
  7042  0AF3  0D27               	rlf	??i1___ftmul+1,w
  7043  0AF4  0D28               	rlf	??i1___ftmul+2,w
  7044  0AF5  00A9               	movwf	??i1___ftmul+3
  7045  0AF6  0829               	movf	??i1___ftmul+3,w
  7046  0AF7  00AF               	movwf	i1___ftmul@sign
  7047  0AF8  082F               	movf	i1___ftmul@sign,w
  7048  0AF9  1D03               	btfss	3,2
  7049  0AFA  2B02               	goto	i1l2577
  7050  0AFB  3000               	movlw	0
  7051  0AFC  00A0               	movwf	?i1___ftmul
  7052  0AFD  3000               	movlw	0
  7053  0AFE  00A1               	movwf	?i1___ftmul+1
  7054  0AFF  3000               	movlw	0
  7055  0B00  00A2               	movwf	?i1___ftmul+2
  7056  0B01  0008               	return
  7057  0B02                     i1l2577:	
  7058  0B02  082F               	movf	i1___ftmul@sign,w
  7059  0B03  3E7B               	addlw	123
  7060  0B04  00A6               	movwf	??i1___ftmul
  7061  0B05  0826               	movf	??i1___ftmul,w
  7062  0B06  07AA               	addwf	i1___ftmul@exp,f
  7063  0B07  0820               	movf	i1___ftmul@f1,w
  7064  0B08  00A6               	movwf	??i1___ftmul
  7065  0B09  0821               	movf	i1___ftmul@f1+1,w
  7066  0B0A  00A7               	movwf	??i1___ftmul+1
  7067  0B0B  0822               	movf	i1___ftmul@f1+2,w
  7068  0B0C  00A8               	movwf	??i1___ftmul+2
  7069  0B0D  3010               	movlw	16
  7070  0B0E                     u388_25:	
  7071  0B0E  36A8               	lsrf	??i1___ftmul+2,f
  7072  0B0F  0CA7               	rrf	??i1___ftmul+1,f
  7073  0B10  0CA6               	rrf	??i1___ftmul,f
  7074  0B11  0B89               	decfsz	9,f
  7075  0B12  2B0E               	goto	u388_25
  7076  0B13  0826               	movf	??i1___ftmul,w
  7077  0B14  00A9               	movwf	??i1___ftmul+3
  7078  0B15  0829               	movf	??i1___ftmul+3,w
  7079  0B16  00AF               	movwf	i1___ftmul@sign
  7080  0B17  0823               	movf	i1___ftmul@f2,w
  7081  0B18  00A6               	movwf	??i1___ftmul
  7082  0B19  0824               	movf	i1___ftmul@f2+1,w
  7083  0B1A  00A7               	movwf	??i1___ftmul+1
  7084  0B1B  0825               	movf	i1___ftmul@f2+2,w
  7085  0B1C  00A8               	movwf	??i1___ftmul+2
  7086  0B1D  3010               	movlw	16
  7087  0B1E                     u389_25:	
  7088  0B1E  36A8               	lsrf	??i1___ftmul+2,f
  7089  0B1F  0CA7               	rrf	??i1___ftmul+1,f
  7090  0B20  0CA6               	rrf	??i1___ftmul,f
  7091  0B21  0B89               	decfsz	9,f
  7092  0B22  2B1E               	goto	u389_25
  7093  0B23  0826               	movf	??i1___ftmul,w
  7094  0B24  00A9               	movwf	??i1___ftmul+3
  7095  0B25  0829               	movf	??i1___ftmul+3,w
  7096  0B26  06AF               	xorwf	i1___ftmul@sign,f
  7097  0B27  3080               	movlw	128
  7098  0B28  00A6               	movwf	??i1___ftmul
  7099  0B29  0826               	movf	??i1___ftmul,w
  7100  0B2A  05AF               	andwf	i1___ftmul@sign,f
  7101  0B2B  17A1               	bsf	i1___ftmul@f1+1,7
  7102  0B2C  17A4               	bsf	i1___ftmul@f2+1,7
  7103  0B2D  30FF               	movlw	255
  7104  0B2E  05A3               	andwf	i1___ftmul@f2,f
  7105  0B2F  30FF               	movlw	255
  7106  0B30  05A4               	andwf	i1___ftmul@f2+1,f
  7107  0B31  3000               	movlw	0
  7108  0B32  05A5               	andwf	i1___ftmul@f2+2,f
  7109  0B33  3000               	movlw	0
  7110  0B34  00AB               	movwf	i1___ftmul@f3_as_product
  7111  0B35  3000               	movlw	0
  7112  0B36  00AC               	movwf	i1___ftmul@f3_as_product+1
  7113  0B37  3000               	movlw	0
  7114  0B38  00AD               	movwf	i1___ftmul@f3_as_product+2
  7115  0B39  3007               	movlw	7
  7116  0B3A  00A6               	movwf	??i1___ftmul
  7117  0B3B  0826               	movf	??i1___ftmul,w
  7118  0B3C  00AE               	movwf	i1___ftmul@cntr
  7119  0B3D                     i1l2589:	
  7120  0B3D  1C20               	btfss	i1___ftmul@f1,0
  7121  0B3E  2B45               	goto	i1l2593
  7122  0B3F  0823               	movf	i1___ftmul@f2,w
  7123  0B40  07AB               	addwf	i1___ftmul@f3_as_product,f
  7124  0B41  0824               	movf	i1___ftmul@f2+1,w
  7125  0B42  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
  7126  0B43  0825               	movf	i1___ftmul@f2+2,w
  7127  0B44  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
  7128  0B45                     i1l2593:	
  7129  0B45  3001               	movlw	1
  7130  0B46                     u391_25:	
  7131  0B46  36A2               	lsrf	i1___ftmul@f1+2,f
  7132  0B47  0CA1               	rrf	i1___ftmul@f1+1,f
  7133  0B48  0CA0               	rrf	i1___ftmul@f1,f
  7134  0B49  0B89               	decfsz	9,f
  7135  0B4A  2B46               	goto	u391_25
  7136  0B4B  3001               	movlw	1
  7137  0B4C                     u392_25:	
  7138  0B4C  35A3               	lslf	i1___ftmul@f2,f
  7139  0B4D  0DA4               	rlf	i1___ftmul@f2+1,f
  7140  0B4E  0DA5               	rlf	i1___ftmul@f2+2,f
  7141  0B4F  0B89               	decfsz	9,f
  7142  0B50  2B4C               	goto	u392_25
  7143  0B51  3001               	movlw	1
  7144  0B52  02AE               	subwf	i1___ftmul@cntr,f
  7145  0B53  1D03               	btfss	3,2
  7146  0B54  2B3D               	goto	i1l2589
  7147  0B55  3009               	movlw	9
  7148  0B56  00A6               	movwf	??i1___ftmul
  7149  0B57  0826               	movf	??i1___ftmul,w
  7150  0B58  00AE               	movwf	i1___ftmul@cntr
  7151  0B59                     i1l2601:	
  7152  0B59  1C20               	btfss	i1___ftmul@f1,0
  7153  0B5A  2B61               	goto	i1l2605
  7154  0B5B  0823               	movf	i1___ftmul@f2,w
  7155  0B5C  07AB               	addwf	i1___ftmul@f3_as_product,f
  7156  0B5D  0824               	movf	i1___ftmul@f2+1,w
  7157  0B5E  3DAC               	addwfc	i1___ftmul@f3_as_product+1,f
  7158  0B5F  0825               	movf	i1___ftmul@f2+2,w
  7159  0B60  3DAD               	addwfc	i1___ftmul@f3_as_product+2,f
  7160  0B61                     i1l2605:	
  7161  0B61  3001               	movlw	1
  7162  0B62                     u395_25:	
  7163  0B62  36A2               	lsrf	i1___ftmul@f1+2,f
  7164  0B63  0CA1               	rrf	i1___ftmul@f1+1,f
  7165  0B64  0CA0               	rrf	i1___ftmul@f1,f
  7166  0B65  0B89               	decfsz	9,f
  7167  0B66  2B62               	goto	u395_25
  7168  0B67  3001               	movlw	1
  7169  0B68                     u396_25:	
  7170  0B68  36AD               	lsrf	i1___ftmul@f3_as_product+2,f
  7171  0B69  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
  7172  0B6A  0CAB               	rrf	i1___ftmul@f3_as_product,f
  7173  0B6B  0B89               	decfsz	9,f
  7174  0B6C  2B68               	goto	u396_25
  7175  0B6D  3001               	movlw	1
  7176  0B6E  02AE               	subwf	i1___ftmul@cntr,f
  7177  0B6F  1D03               	btfss	3,2
  7178  0B70  2B59               	goto	i1l2601
  7179  0B71  082B               	movf	i1___ftmul@f3_as_product,w
  7180  0B72  00F0               	movwf	i1___ftpack@arg
  7181  0B73  082C               	movf	i1___ftmul@f3_as_product+1,w
  7182  0B74  00F1               	movwf	i1___ftpack@arg+1
  7183  0B75  082D               	movf	i1___ftmul@f3_as_product+2,w
  7184  0B76  00F2               	movwf	i1___ftpack@arg+2
  7185  0B77  082A               	movf	i1___ftmul@exp,w
  7186  0B78  00A6               	movwf	??i1___ftmul
  7187  0B79  0826               	movf	??i1___ftmul,w
  7188  0B7A  00F3               	movwf	i1___ftpack@exp
  7189  0B7B  082F               	movf	i1___ftmul@sign,w
  7190  0B7C  00A7               	movwf	??i1___ftmul+1
  7191  0B7D  0827               	movf	??i1___ftmul+1,w
  7192  0B7E  00F4               	movwf	i1___ftpack@sign
  7193  0B7F  3197  279C         	fcall	i1___ftpack
  7194  0B81  0870               	movf	?i1___ftpack,w
  7195  0B82  0020               	movlb	0	; select bank0
  7196  0B83  00A0               	movwf	?i1___ftmul
  7197  0B84  0871               	movf	?i1___ftpack+1,w
  7198  0B85  00A1               	movwf	?i1___ftmul+1
  7199  0B86  0872               	movf	?i1___ftpack+2,w
  7200  0B87  00A2               	movwf	?i1___ftmul+2
  7201  0B88  0008               	return
  7202  0B89                     __end_ofi1___ftmul:	
  7203                           
  7204                           	psect	text25
  7205  154E                     __ptext25:	
  7206 ;; *************** function ___awtoft *****************
  7207 ;; Defined at:
  7208 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  c               2    8[COMMON] int 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  sign            1   13[COMMON] unsigned char 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  3    8[COMMON] float 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0, pclath, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7222 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;Total ram usage:        6 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    1
  7229 ;; This function calls:
  7230 ;;		i1___ftpack
  7231 ;; This function is called by:
  7232 ;;		_isr
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           
  7237                           ;psect for function ___awtoft
  7238  154E                     ___awtoft:	
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7242  154E  01FD               	clrf	___awtoft@sign
  7243  154F  1FF9               	btfss	___awtoft@c+1,7
  7244  1550  2D58               	goto	i1l2561
  7245  1551  09F8               	comf	___awtoft@c,f
  7246  1552  09F9               	comf	___awtoft@c+1,f
  7247  1553  0AF8               	incf	___awtoft@c,f
  7248  1554  1903               	skipnz
  7249  1555  0AF9               	incf	___awtoft@c+1,f
  7250  1556  01FD               	clrf	___awtoft@sign
  7251  1557  0AFD               	incf	___awtoft@sign,f
  7252  1558                     i1l2561:	
  7253  1558  0878               	movf	___awtoft@c,w
  7254  1559  00F0               	movwf	i1___ftpack@arg
  7255  155A  0879               	movf	___awtoft@c+1,w
  7256  155B  00F1               	movwf	i1___ftpack@arg+1
  7257  155C  01F2               	clrf	i1___ftpack@arg+2
  7258  155D  308E               	movlw	142
  7259  155E  00FB               	movwf	??___awtoft
  7260  155F  087B               	movf	??___awtoft,w
  7261  1560  00F3               	movwf	i1___ftpack@exp
  7262  1561  087D               	movf	___awtoft@sign,w
  7263  1562  00FC               	movwf	??___awtoft+1
  7264  1563  087C               	movf	??___awtoft+1,w
  7265  1564  00F4               	movwf	i1___ftpack@sign
  7266  1565  3197  279C         	fcall	i1___ftpack
  7267  1567  0870               	movf	?i1___ftpack,w
  7268  1568  00F8               	movwf	?___awtoft
  7269  1569  0871               	movf	?i1___ftpack+1,w
  7270  156A  00F9               	movwf	?___awtoft+1
  7271  156B  0872               	movf	?i1___ftpack+2,w
  7272  156C  00FA               	movwf	?___awtoft+2
  7273  156D  0008               	return
  7274  156E                     __end_of___awtoft:	
  7275                           
  7276                           	psect	text26
  7277  179C                     __ptext26:	
  7278 ;; *************** function i1___ftpack *****************
  7279 ;; Defined at:
  7280 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  arg             3    0[COMMON] unsigned um
  7283 ;;  exp             1    3[COMMON] unsigned char 
  7284 ;;  sign            1    4[COMMON] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  3    0[COMMON] float 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7296 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;Total ram usage:        8 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		___awtoft
  7306 ;;		i1___ftmul
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           
  7311                           ;psect for function i1___ftpack
  7312  179C                     i1___ftpack:	
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  7316  179C  0873               	movf	i1___ftpack@exp,w
  7317  179D  1903               	btfsc	3,2
  7318  179E  2FA4               	goto	i1l2285
  7319  179F  0872               	movf	i1___ftpack@arg+2,w
  7320  17A0  0471               	iorwf	i1___ftpack@arg+1,w
  7321  17A1  0470               	iorwf	i1___ftpack@arg,w
  7322  17A2  1D03               	skipz
  7323  17A3  2FB5               	goto	i1l2291
  7324  17A4                     i1l2285:	
  7325  17A4  3000               	movlw	0
  7326  17A5  00F0               	movwf	?i1___ftpack
  7327  17A6  3000               	movlw	0
  7328  17A7  00F1               	movwf	?i1___ftpack+1
  7329  17A8  3000               	movlw	0
  7330  17A9  00F2               	movwf	?i1___ftpack+2
  7331  17AA  0008               	return
  7332  17AB                     i1l2289:	
  7333  17AB  3001               	movlw	1
  7334  17AC  00F5               	movwf	??i1___ftpack
  7335  17AD  0875               	movf	??i1___ftpack,w
  7336  17AE  07F3               	addwf	i1___ftpack@exp,f
  7337  17AF  3001               	movlw	1
  7338  17B0                     u346_25:	
  7339  17B0  36F2               	lsrf	i1___ftpack@arg+2,f
  7340  17B1  0CF1               	rrf	i1___ftpack@arg+1,f
  7341  17B2  0CF0               	rrf	i1___ftpack@arg,f
  7342  17B3  0B89               	decfsz	9,f
  7343  17B4  2FB0               	goto	u346_25
  7344  17B5                     i1l2291:	
  7345  17B5  30FE               	movlw	254
  7346  17B6  0572               	andwf	i1___ftpack@arg+2,w
  7347  17B7  1903               	btfsc	3,2
  7348  17B8  2FCE               	goto	i1l429
  7349  17B9  2FAB               	goto	i1l2289
  7350  17BA                     i1l2293:	
  7351  17BA  3001               	movlw	1
  7352  17BB  00F5               	movwf	??i1___ftpack
  7353  17BC  0875               	movf	??i1___ftpack,w
  7354  17BD  07F3               	addwf	i1___ftpack@exp,f
  7355  17BE  3001               	movlw	1
  7356  17BF  07F0               	addwf	i1___ftpack@arg,f
  7357  17C0  3000               	movlw	0
  7358  17C1  1803               	skipnc
  7359  17C2  3001               	movlw	1
  7360  17C3  07F1               	addwf	i1___ftpack@arg+1,f
  7361  17C4  3000               	movlw	0
  7362  17C5  1803               	skipnc
  7363  17C6  3001               	movlw	1
  7364  17C7  07F2               	addwf	i1___ftpack@arg+2,f
  7365  17C8  3001               	movlw	1
  7366  17C9                     u348_25:	
  7367  17C9  36F2               	lsrf	i1___ftpack@arg+2,f
  7368  17CA  0CF1               	rrf	i1___ftpack@arg+1,f
  7369  17CB  0CF0               	rrf	i1___ftpack@arg,f
  7370  17CC  0B89               	decfsz	9,f
  7371  17CD  2FC9               	goto	u348_25
  7372  17CE                     i1l429:	
  7373  17CE  30FF               	movlw	255
  7374  17CF  0572               	andwf	i1___ftpack@arg+2,w
  7375  17D0  1903               	btfsc	3,2
  7376  17D1  2FDB               	goto	i1l2301
  7377  17D2  2FBA               	goto	i1l2293
  7378  17D3                     i1l2299:	
  7379  17D3  3001               	movlw	1
  7380  17D4  02F3               	subwf	i1___ftpack@exp,f
  7381  17D5  3001               	movlw	1
  7382  17D6                     u350_25:	
  7383  17D6  35F0               	lslf	i1___ftpack@arg,f
  7384  17D7  0DF1               	rlf	i1___ftpack@arg+1,f
  7385  17D8  0DF2               	rlf	i1___ftpack@arg+2,f
  7386  17D9  0B89               	decfsz	9,f
  7387  17DA  2FD6               	goto	u350_25
  7388  17DB                     i1l2301:	
  7389  17DB  1BF1               	btfsc	i1___ftpack@arg+1,7
  7390  17DC  2FE1               	goto	i1l436
  7391  17DD  3002               	movlw	2
  7392  17DE  0273               	subwf	i1___ftpack@exp,w
  7393  17DF  1803               	skipnc
  7394  17E0  2FD3               	goto	i1l2299
  7395  17E1                     i1l436:	
  7396  17E1  1873               	btfsc	i1___ftpack@exp,0
  7397  17E2  2FE9               	goto	i1l437
  7398  17E3  30FF               	movlw	255
  7399  17E4  05F0               	andwf	i1___ftpack@arg,f
  7400  17E5  307F               	movlw	127
  7401  17E6  05F1               	andwf	i1___ftpack@arg+1,f
  7402  17E7  30FF               	movlw	255
  7403  17E8  05F2               	andwf	i1___ftpack@arg+2,f
  7404  17E9                     i1l437:	
  7405  17E9  1003               	clrc
  7406  17EA  0CF3               	rrf	i1___ftpack@exp,f
  7407  17EB  0873               	movf	i1___ftpack@exp,w
  7408  17EC  00F5               	movwf	??i1___ftpack
  7409  17ED  01F6               	clrf	??i1___ftpack+1
  7410  17EE  01F7               	clrf	??i1___ftpack+2
  7411  17EF  3010               	movlw	16
  7412  17F0                     u354_25:	
  7413  17F0  35F5               	lslf	??i1___ftpack,f
  7414  17F1  0DF6               	rlf	??i1___ftpack+1,f
  7415  17F2  0DF7               	rlf	??i1___ftpack+2,f
  7416  17F3  0B89               	decfsz	9,f
  7417  17F4  2FF0               	goto	u354_25
  7418  17F5  0875               	movf	??i1___ftpack,w
  7419  17F6  04F0               	iorwf	i1___ftpack@arg,f
  7420  17F7  0876               	movf	??i1___ftpack+1,w
  7421  17F8  04F1               	iorwf	i1___ftpack@arg+1,f
  7422  17F9  0877               	movf	??i1___ftpack+2,w
  7423  17FA  04F2               	iorwf	i1___ftpack@arg+2,f
  7424  17FB  0874               	movf	i1___ftpack@sign,w
  7425  17FC  1903               	btfsc	3,2
  7426  17FD  0008               	return
  7427  17FE  17F2               	bsf	i1___ftpack@arg+2,7
  7428  17FF  0008               	return
  7429  1800                     __end_ofi1___ftpack:	
  7430  007E                     btemp	set	126	;btemp
  7431  007E                     int$flags	set	126
  7432  007E                     wtemp	set	126
  7433  007E                     wtemp0	set	126
  7434  0080                     wtemp1	set	128
  7435  0082                     wtemp2	set	130
  7436  0084                     wtemp3	set	132
  7437  0086                     wtemp4	set	134
  7438  0088                     wtemp5	set	136
  7439  007F                     wtemp6	set	127
  7440  007E                     ttemp	set	126
  7441  007E                     ttemp0	set	126
  7442  0081                     ttemp1	set	129
  7443  0084                     ttemp2	set	132
  7444  0087                     ttemp3	set	135
  7445  007F                     ttemp4	set	127
  7446  007E                     ltemp	set	126
  7447  007E                     ltemp0	set	126
  7448  0082                     ltemp1	set	130
  7449  0086                     ltemp2	set	134
  7450  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    118
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      60
    BANK1            80     67      67
    BANK2            80     16      19
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK2[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awtoft
    i1___ftmul->___awtoft
    ___awtoft->i1___ftpack

Critical Paths under _main in BANK0

    _sprintf->_fround
    _sprintf->_scale
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftadd->_fround
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK0

    _isr->i1___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   43111
                                             64 BANK1      3     3      0
                                              0 BANK2     16    16      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   41896
                                             30 BANK1     34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3   10227
                                             57 BANK0      3     0      3
                                              0 BANK1      6     6      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    14      3   10029
                                             57 BANK0      3     0      3
                                              0 BANK1     11    11      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2524
                                             35 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4186
                                             41 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1448
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1580
                                             26 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                             19 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                             19 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2125
                                             27 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     543
                                             19 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                             19 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                              6 BANK1     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3283
                                             24 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3088
                                             11 BANK1     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1992
                                             19 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                             19 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                             19 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     3      2     661
                                             22 BANK0      5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     314
                                             22 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0    1330
                                             16 BANK0      3     3      0
                           ___awtoft
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (6) i1___ftmul                                           16    10      6     765
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3     542
                                              8 COMMON     6     3      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1___ftpack                                           8     3      5     387
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _isr (ROOT)
   ___awtoft
     i1___ftpack
   i1___ftmul
     ___awtoft (ARG)
       i1___ftpack
     i1___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     43      43       7       83.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     10      13       9       23.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Jul 04 23:58:28 2016

             i1___ftpack 179C              __CFG_CP$OFF 0000                       l41 0A6C  
                     l42 0A94             ___awdiv@sign 0040      ___wmul@multiplicand 0045  
           ___ftadd@exp1 00B7             ___ftadd@exp2 00B6              __CFG_LVP$ON 0000  
           ___ftadd@sign 00B5                      l130 019A                      l125 0066  
                    l251 151D                      l417 0E52                      l436 084D  
                    l460 0CDC                      l437 0855                      l429 083A  
                    l537 08D9                      l486 0766                      l496 07DF  
           __CFG_CPD$OFF 0000                      _isr 0004             ___awmod@sign 0039  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
            _sprintf$797 00C9             i1___ftmul@f1 0020             i1___ftmul@f2 0023  
            main@buffer1 0120                     l2101 0D5F                     l2021 05DA  
                   l2015 0577                     l2033 06B1                     l2025 05FB  
                   l2211 08C3                     l2107 0D7C                     l2125 0E0F  
                   l2117 0DC7                     l2223 08EA                     l2143 0E49  
                   l2135 0E2E                     l2071 07A1                     l2063 0787  
                   l2039 0714                     l2153 15EA                     l2217 08D0  
                   l2209 08B5                     l2233 16FB                     l2145 0E55  
                   l2137 0E3C                     l2081 07BB                     l2049 074E  
                   l2219 08DC                     l2243 1729                     l2235 1709  
                   l2091 07E2                     l2083 07C9                     l2157 1600  
                   l2181 1538                     l2413 00CC                     l2191 0885  
                   l2247 1734                     l2263 163E                     l2503 035F  
                   l1705 083F                     l2257 1618                     l2089 07D6  
                   l1721 1517                     l2371 15A4                     l1707 0847  
                   l2259 1626                     l2267 1649                     l2275 1573  
                   l1811 1693                     l1803 1682                     l2451 01F4  
                   l2443 01C7                     l2365 159B                     l1821 0C65  
                   l2277 1583                     l1741 16A3                     l2533 048A  
                   l2517 0396                     l2509 0379                     l2437 017E  
                   l2429 012C                     l2541 049F                     l2383 15BC  
                   l2367 159E                     l2375 15AA                     l1831 0C7B  
                   l1807 168B                     l2455 020D                     l2369 15A1  
                   l2377 15B8                     l1825 0C6C                     l1921 0C0D  
                   l1913 0BF9                     l2481 02C9                     l2465 0253  
                   l2393 0063                     l1691 0810                     l1851 0CB2  
                   l1843 0C95                     l1747 16AE                     l2539 049A  
                   l2475 029C                     l2547 004B                     l1861 0CCE  
                   l1853 0CB7                     l1773 16E5                     l1765 16D4  
                   l1757 16B6                     l1925 0C15                     l1909 0BF1  
                   l2469 0296                     l2549 04B6                     l2397 0068  
                   l1695 0817                     l1871 0D00                     l1863 0CD8  
                   l1855 0CBB                     l1759 16C2                     l2495 02DF  
                   l2399 007C                     l1697 0821                     l1881 0D1B  
                   l1849 0CA8                     l1769 16DD                     l1785 165D  
                   l2497 034E                     l1699 0826                     l1867 0CEE  
                   l1891 0BA0                     l2683 176B                     l1797 166A  
                   l1789 1664                     l1799 1676                     l1991 0F42  
                   l1897 0BB6                     l1999 0FCE                     ?_isr 0070  
                   STR_1 1076                     u2105 085C                     u2025 081C  
                   u2045 0835                     u3005 07D7                     u2215 16C3  
                   u2135 151E                     u2065 0842                     u2225 16CD  
                   u2145 1523                     u2235 16D5                     u2315 167C  
                   u3205 088C                     u3125 0E4A                     u3045 0DC8  
                   u2325 1683                     u4007 09CC                     u3055 0DF2  
                   u4017 09D2                     u2505 0CBC                     u3305 16FE  
                   u4107 0A58                     u4027 0A0A                     u3235 08B6  
                   u2195 16B9                     u4117 0A61                     u4037 0A10  
                   u2445 0C96                     u3325 170A                     u3405 163F  
                   u2605 0BC2                     u4207 0983                     u4127 0A7A  
                   u4047 0A16                     u2535 0CCF                     u3335 171E  
                   u3095 0E2F                     u2295 166D                     u2615 0BD2  
                   u2705 08FA                     u4137 0A87                     u4057 0A1D  
                   u3265 08D1                     u3345 172A                     u3425 1578  
                   u2715 0908                     u4147 0AA2                     u4067 0A34  
                   u2475 0CA9                     u2635 0BFA                     u2725 0917  
                   u4157 0AAF                     u4077 0A3D                     u2805 09D9  
                   u2645 0C00                     u4167 0937                     u2735 0927  
                   u4087 0A46                     u2815 09E7                     u3375 161B  
                   u2745 0944                     u4177 093D                     u4097 0A4F  
                   u4187 0975                     u2755 0952                     u3395 1634  
                   u2915 0788                     u2675 0C16                     u3715 01F2  
                   u3635 00E0                     u4197 097B                     u2765 098F  
                   u2925 0798                     u2685 0C1C                     u2775 099D  
                   u2935 07A2                     u2785 09AC                     u3745 02BF  
                   u2795 09BC                     u3675 01A4                     u3685 01D1  
                   u2975 07BC                     u3785 0368                     u3795 0374  
                   u3997 1794                     _TMR1 0016             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 173D             ___ftpack@arg 0033  
           ___ftpack@exp 0036                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 003B                     ttemp 007E  
                   wtemp 007E          __end_of_Lcd_Cmd 0988            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0057             ___ftmul@sign 0058            i1___ftmul@exp 002A  
             _Lcd_Chr_CP 0988             ___fttol@exp1 00B3             ___fttol@lval 00AF  
                  ??_isr 0030           Lcd_Out2@buffer 0037            __CFG_PLLEN$ON 0000  
i1___ftmul@f3_as_product 002B                    ?_main 0070          __end_of___awdiv 16EA  
        __end_of___ftadd 0D41                    _CCPR1 0291            __CFG_WDTE$OFF 0000  
        __end_of___awmod 1698          __end_of___ftneg 07F4          __end_of___lldiv 173D  
        __end_of___ftmul 0C3D          ___awdiv@divisor 003A          __end_of___llmod 1652  
        __end_of___ftsub 154E          __end_of___fttol 08F3                    i1l436 17E1  
                  i1l437 17E9                    i1l429 17CE          ___awdiv@counter 003F  
                  _PORTA 000C                    _TRISA 008C                    _TRISC 008E  
          __CFG_PWRTE$ON 0000             ___lltoft@exp 0040            ___awtoft@sign 007D  
        __end_of_dpowers 1028                    _scale 04BC            ___ftpack@sign 0037  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __end_of_sprintf 04BC  
     __size_ofi1___ftmul 00B4           i1___ftpack@arg 0070           i1___ftpack@exp 0073  
       __end_of_Lcd_Init 0AD5         __end_of_Lcd_Out2 15D3          __initialization 003D  
           __end_of_main 179C              ?i1___ftpack 0070           i1___ftmul@cntr 002E  
         i1___ftmul@sign 002F                   ??_main 00E0            ___fttol@sign1 00AE  
   __size_of__tdiv_to_l_ 00B6         ___llmod@dividend 0037                   ?_scale 0059  
       ___awdiv@dividend 003C         __end_of___awtoft 156E                   _ANSELA 018C  
                 _ANSELB 018D         __end_of___ftpack 086C         __end_of___lltoft 1598  
                 i1l2301 17DB                   i1l2601 0B59                   i1l2291 17B5  
                 i1l2293 17BA                   i1l2285 17A4                   i1l2605 0B61  
                 i1l2289 17AB                   i1l2561 1558                   i1l2299 17D3  
                 i1l2571 0AEC                   i1l2593 0B45                   i1l2577 0B02  
                 i1l2589 0B3D                   u350_25 17D6                   u354_25 17F0  
                 u346_25 17B0                   u348_25 17C9                   u391_25 0B46  
                 u392_25 0B4C                   u395_25 0B62                   u396_25 0B68  
                 u388_25 0B0E                   u389_25 0B1E                ??_Lcd_Cmd 0033  
       __end_of__powers_ 1076                   ___ftge 15D3              ?_Lcd_Chr_CP 0070  
                 ___wmul 1514                ??___awdiv 003E                ??___ftadd 00B1  
         __CFG_STVREN$ON 0000                ??___awmod 0037                ??___ftneg 0036  
              ??___lldiv 003B                ??___ftmul 004F                ??___llmod 003B  
              ??___ftsub 005C                ??___fttol 00AA                   _fround 0E5E  
       ___awdiv@quotient 0041          ___awmod@divisor 0033                   _tiempo 0130  
        ___awmod@counter 0038    ___ftmul@f3_as_product 0054        __end_ofi1___ftmul 0B89  
              ??_sprintf 00C3      __size_ofi1___ftpack 0064  __end_of__initialization 0041  
             ___ftadd@f1 00AB               ___ftadd@f2 00AE               ___ftge@ff1 0033  
             ___ftge@ff2 0036          i1___ftpack@sign 0074               ___ftneg@f1 0033  
             ___awtoft@c 0078               ___ftmul@f1 0049               ___ftmul@f2 004C  
             ___ftsub@f1 00BB               ___ftsub@f2 00B8               ___fttol@f1 00A6  
         __pcstackCOMMON 0070               ___lltoft@c 003B            __end_of_scale 0735  
             __div_to_l_ 0D41                ?_Lcd_Init 0070                ?_Lcd_Out2 0036  
        __div_to_l_@exp1 0046          __div_to_l_@cntr 0045                  ??_scale 00A0  
        __div_to_l_@quot 0041      __size_of_Lcd_Chr_CP 009A               __pbssBANK2 0130  
        __CFG_VCAPEN$OFF 0000            __div_to_l_@f1 0033            __div_to_l_@f2 0036  
             __pmaintext 173D                  ?___ftge 0033                  ?___wmul 0043  
             __pintentry 0004                  ?_fround 0059                ?___awtoft 0078  
              ?___ftpack 0033                ?___lltoft 003B               ??_Lcd_Init 0036  
             ??_Lcd_Out2 0038                  _Lcd_Cmd 08F3        __end_of__npowers_ 104F  
        __size_of___ftge 003C             ??i1___ftpack 0075                  ___awdiv 1698  
                ___ftadd 0C3D                  ___awmod 1652                  ___ftneg 07EB  
                ___lldiv 16EA          __size_of___wmul 001C                  ___ftmul 0B89  
                ___llmod 160F                  ___ftsub 1530                  ___fttol 086C  
             _fround$794 00A7               _fround$795 00A4               ??___awtoft 007B  
             ??___ftpack 0038          __size_of_fround 01A2               ??___lltoft 003F  
                __ptext1 0045                  __ptext2 04BC                  __ptext3 0E5E  
                __ptext4 1514                  __ptext5 0B89                  __ptext6 1652  
                __ptext7 1698                  __ptext8 0735                  __ptext9 0D41  
              _T1CONbits 0018              ?__div_to_l_ 0033                  _dpowers 1000  
           __size_of_isr 0037         ___awmod@dividend 0035                  _sprintf 0045  
   end_of_initialization 0041       __end_ofi1___ftpack 1800          ___lldiv@divisor 0033  
        ___lldiv@counter 0040             ??_Lcd_Chr_CP 0033                Lcd_Out2@x 0036  
              Lcd_Out2@y 0039             __pstringtext 1000           __tdiv_to_l_@f1 0033  
         __tdiv_to_l_@f2 0036            ??__tdiv_to_l_ 0039                _PORTBbits 000D  
       __CFG_FOSC$INTOSC 0000                _TRISBbits 008D                i1___ftmul 0AD5  
     __end_of_Lcd_Chr_CP 0A22              _CCP1CONbits 0293      __size_of__div_to_l_ 011D  
            ___ftmul@exp 0053           __end_of___ftge 160F           __end_of___wmul 1530  
         __end_of_fround 1000      start_initialization 003D      __end_of__tdiv_to_l_ 07EB  
            __end_of_isr 003B               ?i1___ftmul 0020        __size_of_Lcd_Init 00B3  
      __size_of_Lcd_Out2 003B          ___llmod@divisor 0033          ___llmod@counter 003C  
               ??___ftge 0039                 ??___wmul 0047                 ??_fround 00A0  
          sprintf@tmpval 00D7               fround@prec 00AA        __size_of___awtoft 0020  
      __size_of___ftpack 0065        __size_of___lltoft 002A                ___latbits 0003  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK2 0120  
               ?_Lcd_Cmd 0070              sprintf@flag 00CD              sprintf@fval 00DC  
            sprintf@prec 00CF                 ?___awdiv 003A                 ?___ftadd 00AB  
               ?___awmod 0033                 ?___ftneg 0033                 ?___lldiv 0033  
               ?___ftmul 0049                 ?___llmod 0033                 ?___ftsub 00B8  
              __npowers_ 1028                 ?___fttol 00A6              __tdiv_to_l_ 0735  
           ??__div_to_l_ 0039                _scale$796 00A2              ??i1___ftmul 0026  
               ?_sprintf 00BE           __size_of_scale 0279           ___wmul@product 0047  
               _PIE1bits 0091                 _PIR1bits 0011       __end_of__div_to_l_ 0E5E  
           Lcd_Init@data 0038        ___wmul@multiplier 0043             Lcd_Out2@data 003A  
               _Lcd_Init 0A22                 _Lcd_Out2 1598         __size_of_Lcd_Cmd 0095  
       __size_of___awdiv 0052         __size_of___ftadd 0104         __size_of___awmod 0046  
       __size_of___ftneg 0009         __size_of___lldiv 0053         __size_of___ftmul 00B4  
       __size_of___llmod 0043         __size_of___ftsub 001E         __size_of___fttol 0087  
               ___awtoft 154E                 ___ftpack 0807                 ___lltoft 156E  
             sprintf@exp 00D5               sprintf@val 00D1           Lcd_Chr_CP@data 0035  
               __ptext10 156E                 __ptext11 160F                 __ptext20 0988  
               __ptext12 16EA                 __ptext21 0A22                 __ptext13 086C  
               __ptext22 08F3                 __ptext14 1530                 __ptext15 0C3D  
               __ptext24 0AD5                 __ptext16 0807                 __ptext25 154E  
               __ptext17 07EB                 __ptext26 179C                 __ptext18 15D3  
               __ptext19 1598                 __powers_ 104F         __size_of_sprintf 0477  
            Lcd_Cmd@data 0035            __size_of_main 005F                 int$flags 007E  
             _INTCONbits 000B                 isr@ticks 0031                 scale@scl 00A5  
               intlevel1 0000                sprintf@ap 00CC         __tdiv_to_l_@exp1 0042  
       __tdiv_to_l_@cntr 0041                sprintf@sp 00DB         __tdiv_to_l_@quot 003D  
       ___lldiv@dividend 0037        __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099  
           ?__tdiv_to_l_ 0033                 sprintf@c 00DF                 sprintf@f 00BE  
       ___lldiv@quotient 003C  
